{
  "sources": [
    {
      "title": "Haskell Weekly",
      "feedUrl": "https://haskellweekly.news/newsletter.atom",
      "siteUrl": "https://haskellweekly.news/newsletter.atom",
      "articles": [
        {
          "id": "https://haskellweekly.news/issue/275.html",
          "author": null,
          "description": "Welcome to another issue of Haskell Weekly!\nHaskell is a safe, purely functional programming language with a fast, concurrent runtime.\nThis is a weekly summary of what’s going on in its community.\nFeatured\nWhat can I refactor for you today? by Ari Fordsham\nThat’s why I’d like to offer my services, as a Haskell consultant, to maintain and refactor existing code, either yours or someone else’s.\nBest practices for foreign imports by Ben Gamari\nWhen importing system libraries we strongly recommend that users use GHC’s capi calling convention.\nCheap interpreter, part 7: register machines by Gary Verhaegen\nIn this post, we move further into the list of techniques presentetd in Neil’s talk and take a look at another type of low-level machine called a register machine.\nGHC curiosities: Equality co…",
          "link": "https://haskellweekly.news/issue/275.html",
          "publishedOn": "2021-08-05T12:00:00.000Z",
          "wordCount": 602,
          "title": "Issue 275"
        },
        {
          "id": "https://haskellweekly.news/issue/274.html",
          "author": null,
          "description": "Welcome to another issue of Haskell Weekly!\nHaskell is a safe, purely functional programming language with a fast, concurrent runtime.\nThis is a weekly summary of what’s going on in its community.\nFeatured\nStatic analysis using Haskell and Datalog by Luc Tielen\nIn today’s post, I will give a step-by-step tutorial how you can write sophisticated analyses in Soufflé Datalog controlled by Haskell using the souffle-haskell library.\nBridging a typed and an untyped world by Christoph Hermann\nMost recently: we were trying to bridge the gap between Haskell and Redis. Here we’ll discuss two iterations of our Redis library for Haskell, nri-redis.\nComposable Data Validation with Haskell by Ben Levy & Christian Charukiewicz\nIn order to meet the above requirements, we decided to write a small embedded …",
          "link": "https://haskellweekly.news/issue/274.html",
          "publishedOn": "2021-07-29T12:00:00.000Z",
          "wordCount": 766,
          "title": "Issue 274"
        },
        {
          "id": "https://haskellweekly.news/issue/273.html",
          "author": null,
          "description": "Welcome to another issue of Haskell Weekly!\nHaskell is a safe, purely functional programming language with a fast, concurrent runtime.\nThis is a weekly summary of what’s going on in its community.\nFeatured\nWhat skills will give you an edge in 2022? (ad)\nTake the Developer Nation survey and share your views about the most important coding skills, tools, and platforms for 2022. You will get a virtual goody bag with free resources, plus a chance to win a new smartphone, a laptop, licenses, Amazon vouchers and more.\nKalvad - Dev + Ops Agency (ad)\nKalvad is a Dubai based tech agency. We talk Python, Elixir and Haskell. Tell us about your scaling and monitoring problems.\nCheap interpreter, part 5: mea culpa by Gary Verhaegen\nWhile trying to write a faster version, I inadvertently discovered that…",
          "link": "https://haskellweekly.news/issue/273.html",
          "publishedOn": "2021-07-22T12:00:00.000Z",
          "wordCount": 732,
          "title": "Issue 273"
        },
        {
          "id": "https://haskellweekly.news/issue/272.html",
          "author": null,
          "description": "Welcome to another issue of Haskell Weekly!\nHaskell is a safe, purely functional programming language with a fast, concurrent runtime.\nThis is a weekly summary of what’s going on in its community.\nFeatured\nCast Haskell values with Witch by Taylor Fausak\nI’m happy to announce Witch, a library that aims to make those conversions easy and painless. This post will explain my motivation for creating the library and show some examples of how to use it.\nCheap interpreter, part 4: stack machines by Gary Verhaegen\nIn this post, we’re going to explore a completely different approach: we’re first going to design a stack machine, then write an interpreter for the stack machine language, and finally write a compiler from our toy language parse tree to stack machine instructions.\nExploring linear traver…",
          "link": "https://haskellweekly.news/issue/272.html",
          "publishedOn": "2021-07-15T12:00:00.000Z",
          "wordCount": 638,
          "title": "Issue 272"
        }
      ]
    },
    {
      "title": "Haskell :: Reddit",
      "feedUrl": "https://reddit.com/r/haskell/.rss",
      "siteUrl": "https://www.reddit.com/r/haskell/",
      "articles": [
        {
          "id": "https://www.reddit.com/r/haskell/comments/p1ymo6/job_opportunity/",
          "author": null,
          "description": "Hello, we are currently in need of a functional dev who is fluent in Haskell & is interested in exploring Plutus. We are taking a renewed approach to human interaction by encouraging & incentivizing individuals in the pursuit of their specific interest. Our approach is unique & disruptive, so if you are interested, send a message #innovation #blockchain #cardano #digitaltransformation #education #futureofwork\n    submitted by    /u/conradstobnicki  \n [link]   [comments]",
          "link": "https://www.reddit.com/r/haskell/comments/p1ymo6/job_opportunity/",
          "publishedOn": "2021-08-10T21:22:24.000Z",
          "wordCount": 164,
          "title": "Job Opportunity"
        },
        {
          "id": "https://www.reddit.com/r/haskell/comments/p1y8ul/ann_state_of_the_core_libraries_committee/",
          "author": null,
          "description": "submitted by    /u/emilypii  \n [link]   [comments]",
          "link": "https://www.reddit.com/r/haskell/comments/p1y8ul/ann_state_of_the_core_libraries_committee/",
          "publishedOn": "2021-08-10T21:02:35.000Z",
          "wordCount": 169,
          "title": "[ANN] State of the Core Libraries Committee"
        },
        {
          "id": "https://www.reddit.com/r/haskell/comments/p1y774/haskell_tensor_libraries/",
          "author": null,
          "description": "I am writing a tensor network simulation (for quantum physics purposes) in python/numpy (and I find myself VERY unconfortable with it)\n This got me thinking if it was possible to do this in haskell, as it seems a good fit (notice: i am an haskell novice and I have never had the chance of working on a serious haskell project). However looking around for tensor libraries i got the impression that, while there are well-developed libraries to do numeric calculations with 2D matrices, there is nothing as well developed for tensors of arbitrary shape. Moreover i got the impression that the development in this area is somewhat stuck waiting for dependent types. Am I wrong?\n Is there a preferred library to work with tensors/multidimensional arrays of arbitrary shape?\n    submitted by    /u/rottolo  \n [link]   [comments]",
          "link": "https://www.reddit.com/r/haskell/comments/p1y774/haskell_tensor_libraries/",
          "publishedOn": "2021-08-10T21:00:13.000Z",
          "wordCount": 327,
          "title": "Haskell Tensor libraries?"
        },
        {
          "id": "https://www.reddit.com/r/haskell/comments/p1mmic/type_of_mapconst/",
          "author": null,
          "description": "And the type of const(map(++))\n I'm having a really hard time understanding how to determine the types of these expressions and also other expressions. I don't really understand how to approach these problems!\n    submitted by    /u/doddlido  \n [link]   [comments]",
          "link": "https://www.reddit.com/r/haskell/comments/p1mmic/type_of_mapconst/",
          "publishedOn": "2021-08-10T10:38:37.000Z",
          "wordCount": 790,
          "title": "Type of map(const (++))?"
        },
        {
          "id": "https://www.reddit.com/r/haskell/comments/p1ktfz/a_brief_intro_to_mtl/",
          "author": null,
          "description": "submitted by    /u/jappieofficial  \n [link]   [comments]",
          "link": "https://www.reddit.com/r/haskell/comments/p1ktfz/a_brief_intro_to_mtl/",
          "publishedOn": "2021-08-10T08:04:31.000Z",
          "wordCount": 140,
          "title": "A brief intro to MTL"
        },
        {
          "id": "https://www.reddit.com/r/haskell/comments/p1ervk/trouble_linking_dynamic_library_for_package/",
          "author": null,
          "description": "For reasons I don't want to get into, I am building my own GHC package without cabal. The documentation is a little sketchy, but I've succeeded in build and installing it in my own user database (I'm on linux x86_64, using GHC 8.6.5). I am using shake to do all of this, and I've been pretty pleased with how it works.\n At this point I have a couple questions\n  \nThe Documentation mentions that you can build an archive .a file, or a shared library .so file. I've succeeded in building the .a file, do I need the .so file?\n I've been trying to build the .so file, but I've run into problems, which I'm hoping someone can help with\n  \nMy first try at building my shared library looked like this\n ghc -dynamic -shared -fPIC -package validation-0.0.1 -o libHSvalidation-0.0.1-ghc8.6.5.so Validation.o -v \n I got this error\n /bin/ld.gold: error: Validation.o: requires unsupported dynamic reloc 11; recompile with -fPIC \n So I compiled the package with -fPIC, but now I am getting this error\n /bin/ld.gold: error: Validation.o: requires dynamic R_X86_64_PC32 reloc against 'stg_ap_2_upd_info' which may overflow at runtime; recompile with -fPIC \n I don't understand this error message. I already compiled with -fPIC, what else can I do? I'm stuck, please help\n --- Update ---\n It was something really simple\n I compiled the source with -dynamic-too, which compiles a static .o object file and a dynamic .dyn_o object file. I needed to build my shared library targeting the dynamic object file.\n ghc -shared -dynamic -package validation-0.0.1 -o libHSvalidation-0.0.1.so Validation.dyn_o \n    submitted by    /u/lbseale  \n [link]   [comments]",
          "link": "https://www.reddit.com/r/haskell/comments/p1ervk/trouble_linking_dynamic_library_for_package/",
          "publishedOn": "2021-08-10T01:02:14.000Z",
          "wordCount": 516,
          "title": "Trouble Linking Dynamic Library for Package"
        },
        {
          "id": "https://www.reddit.com/r/haskell/comments/p1cj1p/blocking_haskell_job_offers_whats_going_on/",
          "author": null,
          "description": "Earlier today there was a well written job posting blocked on r/haskell https://www.reddit.com/r/haskell/comments/p0yl5n/looking_for_experienced_haskell_developers_to/\n This was not any different than other dozens if not hundreds of job postings I've seen on this reddit over the years. It would be nice to hear from moderators of this subreddit of where this discrimination comes from. u/dons, u/jfredett, u/edwardkmett, u/taylorfausak, u/Iceland_jack and u/BoteboTsebo if there is a legitimate reason for such blockage could you please shed some light on that reason, so people can learn from mistakes.\n Note that I am raising this issue as a community member. I'd be equally outraged if this was happening to any other company or a person that contributes so much to Haskell ecosystem.\n    submitted by    /u/kuleshevich  \n [link]   [comments]",
          "link": "https://www.reddit.com/r/haskell/comments/p1cj1p/blocking_haskell_job_offers_whats_going_on/",
          "publishedOn": "2021-08-09T22:51:56.000Z",
          "wordCount": 849,
          "title": "Blocking Haskell job offers? What's going on moderators?"
        },
        {
          "id": "https://www.reddit.com/r/haskell/comments/p19nz7/gil_mizrahi_has_posted_the_haskell_performance/",
          "author": null,
          "description": "submitted by    /u/myShoggoth  \n [link]   [comments]",
          "link": "https://www.reddit.com/r/haskell/comments/p19nz7/gil_mizrahi_has_posted_the_haskell_performance/",
          "publishedOn": "2021-08-09T20:22:53.000Z",
          "wordCount": 170,
          "title": "Gil Mizrahi has posted the Haskell performance tuning book proposal, please check it out, give feedback, and volunteer your expertise!"
        },
        {
          "id": "https://www.reddit.com/r/haskell/comments/p186kl/text1250_is_released/",
          "author": null,
          "description": "On behalf of the maintainers team I'm happy to announce that text-1.2.5.0 is released. It is to be shipped with the upcoming GHC 9.2.\n Highlights from the changelog:\n  \nAdd elem :: Char -> Text -> Bool to Data.Text and Data.Text.Lazy.\n Regenerate case mapping in accordance to Unicode 13.0 (previous release used Unicode 9.0 from 2016).\n Sanitize surrogate code points in Data.Text.Internal.Builder.\n Fix UTF-8 decoding of lazy bytestrings, when codepoints spread across several chunks.\n Use vectorized CPU instructions to speed up twice decoding and encoding of ASCII.\n  \nMany people contributed their time and effort to make this release happen. Just to name a few in no particular order, mostly according to git log (I dearly hope I did not miss anyone):\n  \nArata Mizuki\n Ben Gamari\n Callan McGill\n Dmitry Ivanov\n Emily Pillmore\n John Ericson\n Li-yao Xia\n Matt Parsons\n Oleg Grenrus\n Ryan Scott\n me\n  \n   submitted by    /u/Bodigrim  \n [link]   [comments]",
          "link": "https://www.reddit.com/r/haskell/comments/p186kl/text1250_is_released/",
          "publishedOn": "2021-08-09T19:09:30.000Z",
          "wordCount": 245,
          "title": "text-1.2.5.0 is released!"
        },
        {
          "id": "https://www.reddit.com/r/haskell/comments/p16khs/episode_1_of_the_haskell_interlude_podcast_is/",
          "author": null,
          "description": "submitted by    /u/myShoggoth  \n [link]   [comments]",
          "link": "https://www.reddit.com/r/haskell/comments/p16khs/episode_1_of_the_haskell_interlude_podcast_is/",
          "publishedOn": "2021-08-09T17:50:32.000Z",
          "wordCount": 142,
          "title": "Episode 1 of The Haskell Interlude podcast is liiiiiiiiive!"
        },
        {
          "id": "https://www.reddit.com/r/haskell/comments/p15c4t/left_and_right_folds_comparison_of_a_mathematical/",
          "author": null,
          "description": "submitted by    /u/philip_schwarz  \n [link]   [comments]",
          "link": "https://www.reddit.com/r/haskell/comments/p15c4t/left_and_right_folds_comparison_of_a_mathematical/",
          "publishedOn": "2021-08-09T16:50:19.000Z",
          "wordCount": 136,
          "title": "Left and Right Folds- Comparison of a mathematical definition and a programmatic one"
        },
        {
          "id": "https://www.reddit.com/r/haskell/comments/p13wf5/is_currying_worth_it_discourse/",
          "author": null,
          "description": "submitted by    /u/Noughtmare  \n [link]   [comments]",
          "link": "https://www.reddit.com/r/haskell/comments/p13wf5/is_currying_worth_it_discourse/",
          "publishedOn": "2021-08-09T15:37:49.000Z",
          "wordCount": 2549,
          "title": "Is currying worth it? - Discourse"
        },
        {
          "id": "https://www.reddit.com/r/haskell/comments/p12pjs/ann_monomer_a_gui_library_for_haskell/",
          "author": null,
          "description": "Monomer is an easy to use, cross platform, GUI library for writing Haskell applications.\n It provides a framework similar to the Elm Architecture, allowing the creation of GUIs using an extensible set of widgets with pure Haskell.\n It works on Windows, Linux and macOS, using nanovg for rendering.\n You can find the documentation here: https://github.com/fjvallarino/monomer\n    submitted by    /u/fjvallarino  \n [link]   [comments]",
          "link": "https://www.reddit.com/r/haskell/comments/p12pjs/ann_monomer_a_gui_library_for_haskell/",
          "publishedOn": "2021-08-09T14:36:56.000Z",
          "wordCount": 937,
          "title": "[ANN] Monomer, a GUI library for Haskell"
        },
        {
          "id": "https://www.reddit.com/r/haskell/comments/p10948/cast_values_with_witch_haskell_weekly_podcast/",
          "author": null,
          "description": "submitted by    /u/haskellweekly  \n [link]   [comments]",
          "link": "https://www.reddit.com/r/haskell/comments/p10948/cast_values_with_witch_haskell_weekly_podcast/",
          "publishedOn": "2021-08-09T12:14:13.000Z",
          "wordCount": 152,
          "title": "Cast Values with Witch :: Haskell Weekly podcast"
        },
        {
          "id": "https://www.reddit.com/r/haskell/comments/p0w28v/a_toy_wasm_symbolic_interpreter_wired_to_an_smt/",
          "author": null,
          "description": "I published this last week : https://github.com/synacktiv/toy-wasm-symbexp\n There is a series of blog posts associated that might be interesting if you wondered how symbolic execution actually worked, or how to implement it.\n    submitted by    /u/wrkbt  \n [link]   [comments]",
          "link": "https://www.reddit.com/r/haskell/comments/p0w28v/a_toy_wasm_symbolic_interpreter_wired_to_an_smt/",
          "publishedOn": "2021-08-09T06:46:41.000Z",
          "wordCount": 170,
          "title": "A toy WASM symbolic interpreter, wired to an SMT solver"
        },
        {
          "id": "https://www.reddit.com/r/haskell/comments/p0pclw/haskell_methods/",
          "author": null,
          "description": "submitted by    /u/dharmatech  \n [link]   [comments]",
          "link": "https://www.reddit.com/r/haskell/comments/p0pclw/haskell_methods/",
          "publishedOn": "2021-08-08T23:19:54.000Z",
          "wordCount": 1436,
          "title": "Haskell Methods"
        },
        {
          "id": "https://www.reddit.com/r/haskell/comments/p0lm8m/hangman_game/",
          "author": null,
          "description": "Hi, i´m making a hangman game, and every player has to put 2 words and each one has 8 tries to achieve the word, and I wanted to know how to restart the scoreboard when someone gets the word right. Example:\n Chalo plays, points: -28. chalo try number : 7 <-------- I want to restart this number to 8 again if the word is correct\n    submitted by    /u/Ivo_Rino  \n [link]   [comments]",
          "link": "https://www.reddit.com/r/haskell/comments/p0lm8m/hangman_game/",
          "publishedOn": "2021-08-08T19:53:27.000Z",
          "wordCount": 222,
          "title": "Hangman game"
        },
        {
          "id": "https://www.reddit.com/r/haskell/comments/p0grhh/cheap_interpreter_part_8_faster_register_machines/",
          "author": null,
          "description": "submitted by    /u/gaverhae  \n [link]   [comments]",
          "link": "https://www.reddit.com/r/haskell/comments/p0grhh/cheap_interpreter_part_8_faster_register_machines/",
          "publishedOn": "2021-08-08T15:32:05.000Z",
          "wordCount": 123,
          "title": "Cheap interpreter, part 8: faster register machines"
        },
        {
          "id": "https://www.reddit.com/r/haskell/comments/p0c87x/can_i_somehow_omit_parentheses_around_multiple/",
          "author": null,
          "description": "Hi! I'm new to Haskell and FP in general. I was wondering if there's a way to replace the parentheses in the expression below with i.e. $.\n f (first complex arg) (second complex arg) \n I know $ lets the programmer omit parentheses when there's only one arg:\n f $ first complex arg \n Thanks!\n    submitted by    /u/micouy  \n [link]   [comments]",
          "link": "https://www.reddit.com/r/haskell/comments/p0c87x/can_i_somehow_omit_parentheses_around_multiple/",
          "publishedOn": "2021-08-08T10:20:47.000Z",
          "wordCount": 880,
          "title": "Can I somehow omit parentheses around multiple args?"
        },
        {
          "id": "https://www.reddit.com/r/haskell/comments/ozzlxs/trying_to_understand_fmap_fmap/",
          "author": null,
          "description": "Well, more like trying to understand how the type signature works. I get what it does - it takes a function and a functor whose inner type is also a functor and applies that function to the inner elements.\n There's 2 main things involved here \n fmap :: (a -> b) -> f a -> f b \n and \n (.) :: (y -> z) -> (x -> y) -> (x -> z) \n The first step would be to try to incorporate the type signature of fmap into that of (.). That made me pause at first since composition works with functions of a single argument but fmap clearly takes 2, however I've seen people do this neat trick by treating f a -> f b as a the whole return type of the function, which makes things work here.\n So I get to\n (.) :: (y -> z) -> ((a -> b) -> (f a -> f b)) -> ((a -> b) -> z) \n y from the 2 arguments need to match, so I can further reduce it to\n (.) :: ((f a -> f b) -> z) -> ((a -> b) -> (f a -> f b)) -> ((a -> b) -> z) \n So now on to z. (f a -> f b) -> z is the function that takes the function that operates over the inner functor and applies it to the outer one (I think). I tried replacing z with f (g a) -> f (g b) however that gives me an error which I think means that the compiler expects both f and g to be of the same functor type which doesn't really make sense to me (I might be misinterpreting things though). \n So what exactly is wrong in my line of thinking?\n    submitted by    /u/WillingnessRecent952  \n [link]   [comments]",
          "link": "https://www.reddit.com/r/haskell/comments/ozzlxs/trying_to_understand_fmap_fmap/",
          "publishedOn": "2021-08-07T19:25:01.000Z",
          "wordCount": 1060,
          "title": "Trying to understand (fmap . fmap)"
        },
        {
          "id": "https://www.reddit.com/r/haskell/comments/ozyt56/how_do_i_catch_hgetcontents_invalid_argument/",
          "author": null,
          "description": "If I use readFile on an image, Haskell terminates with the message hGetContents: invalid argument (invalid byte sequence).\n How do I catch this error so that my program can respond appropriately?\n I tried using Control.Exception.try with IOError but it doesn't pick it up.\n    submitted by    /u/AlphaMycelium  \n [link]   [comments]",
          "link": "https://www.reddit.com/r/haskell/comments/ozyt56/how_do_i_catch_hgetcontents_invalid_argument/",
          "publishedOn": "2021-08-07T18:40:25.000Z",
          "wordCount": 311,
          "title": "How do I catch hGetContents: invalid argument?"
        },
        {
          "id": "https://www.reddit.com/r/haskell/comments/ozo1s3/counting_cardinalities_using_type_families_and/",
          "author": null,
          "description": "submitted by    /u/mitchellvitez  \n [link]   [comments]",
          "link": "https://www.reddit.com/r/haskell/comments/ozo1s3/counting_cardinalities_using_type_families_and/",
          "publishedOn": "2021-08-07T06:17:50.000Z",
          "wordCount": 767,
          "title": "Counting Cardinalities - using type families and generics to figure out how many values a type has"
        },
        {
          "id": "https://www.reddit.com/r/haskell/comments/ozheig/a_brief_intro_to_monad_transformers/",
          "author": null,
          "description": "submitted by    /u/unqualified_redditor  \n [link]   [comments]",
          "link": "https://www.reddit.com/r/haskell/comments/ozheig/a_brief_intro_to_monad_transformers/",
          "publishedOn": "2021-08-06T22:46:10.000Z",
          "wordCount": 497,
          "title": "A Brief Intro to Monad Transformers"
        },
        {
          "id": "https://www.reddit.com/r/haskell/comments/ozgl7h/best_approach_to_learn_haskell_from_an_imperative/",
          "author": null,
          "description": "I've been programming in Swift, Python, Typescript & Java. I've been really wanting to learn Haskell so I can develop smart contracts on Cardano. The issue is I'm a bit afraid of this new paradigm (to me) which is functional programming. Does anyone have any advice on how I can start learning Haskell without wanting to give up?\n    submitted by    /u/Red3nzo  \n [link]   [comments]",
          "link": "https://www.reddit.com/r/haskell/comments/ozgl7h/best_approach_to_learn_haskell_from_an_imperative/",
          "publishedOn": "2021-08-06T22:00:24.000Z",
          "wordCount": 913,
          "title": "Best approach to learn Haskell from an imperative view point?"
        },
        {
          "id": "https://www.reddit.com/r/haskell/comments/oz6qnw/welltyped_blog_ghc_activities_report_junejuly_2021/",
          "author": null,
          "description": "submitted by    /u/adamgundry  \n [link]   [comments]",
          "link": "https://www.reddit.com/r/haskell/comments/oz6qnw/welltyped_blog_ghc_activities_report_junejuly_2021/",
          "publishedOn": "2021-08-06T13:34:04.000Z",
          "wordCount": 161,
          "title": "[Well-Typed Blog] GHC activities report: June–July 2021"
        }
      ]
    },
    {
      "title": "Scala",
      "feedUrl": "https://reddit.com/r/scala/.rss",
      "siteUrl": "https://www.reddit.com/r/scala/",
      "articles": [
        {
          "id": "https://www.reddit.com/r/scala/comments/p1xps0/scalqa_perfect_time_library/",
          "author": null,
          "description": "The fastest time method JVM has to offer is the System.currentTimeMillis(), which returns a Long value of milliseconds since the Unix time.\n It is desirable to wrap this Long into an object, which would provide all the calendar related services, but it comes with object allocation cost and is prohibitive for cases when high performance is needed.\n Fortunately, Scala3 made it possible to have the best of both. Scalqa Time is an opaque Long value with inlined, zero overhead methods for crucial operations. Consider the following example:\n import scalqa.{*, given} val start : Time = Time.current val length: Time.Length = 2.Seconds + 111.Millis while(Time.current < start + length) // do something J.sleep(10.Millis) val totalLength: Time.Length = start.age \n the resulting Java class code only ma…",
          "link": "https://www.reddit.com/r/scala/comments/p1xps0/scalqa_perfect_time_library/",
          "publishedOn": "2021-08-10T20:35:50.000Z",
          "wordCount": 461,
          "title": "Scalqa: Perfect Time Library"
        },
        {
          "id": "https://www.reddit.com/r/scala/comments/p1uv5a/release_john_snow_labs_sparknlp_320_new/",
          "author": null,
          "description": "submitted by    /u/dark-night-rises  \n [link]   [comments]",
          "link": "https://www.reddit.com/r/scala/comments/p1uv5a/release_john_snow_labs_sparknlp_320_new/",
          "publishedOn": "2021-08-10T18:12:02.000Z",
          "wordCount": 655,
          "title": "Release John Snow Labs Spark-NLP 3.2.0: New Longformer embeddings, BERT and DistilBERT for Token Classification, GraphExctraction, Spark NLP Configurations, new state-of-the-art multilingual NER models, and lots more! · JohnSnowLabs/spark-nlp"
        },
        {
          "id": "https://www.reddit.com/r/scala/comments/p1qo95/need_some_help_understanding_servicetoservice/",
          "author": null,
          "description": "Hi everyone.\n Before I present you my problem, I'd like to appreciate how much I've been learning just by reading the content that is posted on this subreddit so thank you all!\n Now regarding the problem I'm facing with my personal project, here's some context:\n I am developing a microsservice based application. I have an authorisation service that queries two other services via HTTP REST APIs: an account-service and a space-service. The user tries to login and I am assigning an access token and a refresh token to be set on the client side.\n My dilemma here is that I will want to use an orchestration service (k8s) to manage the containerised applications. In the past I've worked with Java / Spring Boot and I have used Spring Cloud with Netflix Ribbon and OpenFeign to manage service discove…",
          "link": "https://www.reddit.com/r/scala/comments/p1qo95/need_some_help_understanding_servicetoservice/",
          "publishedOn": "2021-08-10T14:47:58.000Z",
          "wordCount": 983,
          "title": "Need some help understanding service-to-service communication with Scala and Akka"
        },
        {
          "id": "https://www.reddit.com/r/scala/comments/p1m9hu/frictionless_scala_tell_us_what_is_causing/",
          "author": null,
          "description": "submitted by    /u/Kordyjan  \n [link]   [comments]",
          "link": "https://www.reddit.com/r/scala/comments/p1m9hu/frictionless_scala_tell_us_what_is_causing/",
          "publishedOn": "2021-08-10T10:09:44.000Z",
          "wordCount": 1898,
          "title": "Friction-less scala - Tell us what is causing friction in your day-to-day life with Scala"
        },
        {
          "id": "https://www.reddit.com/r/scala/comments/p1fu6f/scalajsdom_to_become_more_active_2x_coming_soon/",
          "author": null,
          "description": "submitted by    /u/japgolly  \n [link]   [comments]",
          "link": "https://www.reddit.com/r/scala/comments/p1fu6f/scalajsdom_to_become_more_active_2x_coming_soon/",
          "publishedOn": "2021-08-10T02:07:40.000Z",
          "wordCount": 152,
          "title": "Scala-js-dom to become more active, 2.x coming soon!"
        },
        {
          "id": "https://www.reddit.com/r/scala/comments/p1fk6u/scala_equivalent_of_the_adjective_pythonic/",
          "author": null,
          "description": "In Python programming, code is \"pythonic\" if it leverages Python's unique features, without over-leveraging them, so to speak.\n Is there an equivalent adjective in Scala?\n    submitted by    /u/Teenager69420  \n [link]   [comments]",
          "link": "https://www.reddit.com/r/scala/comments/p1fk6u/scala_equivalent_of_the_adjective_pythonic/",
          "publishedOn": "2021-08-10T01:50:35.000Z",
          "wordCount": 206,
          "title": "Scala equivalent of the adjective \"pythonic\"?"
        },
        {
          "id": "https://www.reddit.com/r/scala/comments/p1f472/question_about_becoming_a_scala_developer/",
          "author": null,
          "description": "I recently found out about Scala development and it seems fairly interesting and in demand so I wanted to see what becoming a developer is like. I am about to graduate with a degree in electrical engineering and minor in math and am trying to figure out some jobs I'd potentially like to pursue. \n So my question is: what is the timeline for becoming a Scala developer like? I have experience in many object oriented programming languages (Java, Python, C, C++, C#, etc) but I would not say I am an excellent programmer in any of these languages. I do not know a whole lot about computer science in general either. So how long could it take to be knowledgable enough to actually be hired as a beginning developer? A year of coding in Scala? 6 months? What other relevant knowledge would be necessary or desirable as a beginning developer? Is it difficult to get entry level jobs a Scala developer? Generally I'm interested in the road map of becoming a Scala developer, so if anyone could answer some of these questions I'd appreciate it.\n    submitted by    /u/okdudeface  \n [link]   [comments]",
          "link": "https://www.reddit.com/r/scala/comments/p1f472/question_about_becoming_a_scala_developer/",
          "publishedOn": "2021-08-10T01:23:09.000Z",
          "wordCount": 1128,
          "title": "Question about becoming a Scala developer"
        },
        {
          "id": "https://www.reddit.com/r/scala/comments/p17820/fs2_kafka_offset_management/",
          "author": null,
          "description": "Hello. I played a bit with FS2 Kafka and few questions came to my mind.\n  \npassthrough - What is it actually? And when should it be used?\n \nIn https://fd4s.github.io/fs2-kafka/docs/consumers#offset-commits we can read:\n \n  \nWe normally don't need to commit every offset, but only the last processed offset\n  \nDoes it mean that commitBatchWithin doesn't commit every offset which was produced by as(committable.offset)?\n  \nOn the same page we have:\n  \n For at-least-once delivery, it's essential that offset commits preserve topic-partition ordering, so we have to make sure we keep offsets in the same order as we receive them\n  \nSo, if I use e.g. parJoin to process records in a consumer, does it mean that an offsets ordering may be changed and at-least-once delivery is not preserved?\n    submitted by    /u/AstraVulpes  \n [link]   [comments]",
          "link": "https://www.reddit.com/r/scala/comments/p17820/fs2_kafka_offset_management/",
          "publishedOn": "2021-08-09T18:21:49.000Z",
          "wordCount": 712,
          "title": "FS2 Kafka Offset management"
        },
        {
          "id": "https://www.reddit.com/r/scala/comments/p0ojfy/this_week_in_scala_aug_9nd_2021/",
          "author": null,
          "description": "submitted by    /u/petrzapletal  \n [link]   [comments]",
          "link": "https://www.reddit.com/r/scala/comments/p0ojfy/this_week_in_scala_aug_9nd_2021/",
          "publishedOn": "2021-08-08T22:31:30.000Z",
          "wordCount": 107,
          "title": "This week in #Scala (Aug 9nd, 2021)"
        },
        {
          "id": "https://www.reddit.com/r/scala/comments/p0l8vb/starting_a_new_job_in_which_i_will_be_solely/",
          "author": null,
          "description": "Been out of the Scala world for a couple years, inheriting an old project that is set to sunset (and no one on the team knows Scala), and I can't get anything to build because a bunch of stuff isn't resolving. I see that bintray has been discontinued and a bunch of plugins and jars can't be found. Does anyone have some insight on how to trace the new locations of these artifacts?\n    submitted by    /u/pibbs  \n [link]   [comments]",
          "link": "https://www.reddit.com/r/scala/comments/p0l8vb/starting_a_new_job_in_which_i_will_be_solely/",
          "publishedOn": "2021-08-08T19:33:15.000Z",
          "wordCount": 421,
          "title": "Starting a new job in which I will be solely responsible for a legacy Scala project... and nothing is resolving? Bintray related."
        },
        {
          "id": "https://www.reddit.com/r/scala/comments/p03dut/part_8_zlayer_dsl_getting_started_with_zio_in/",
          "author": null,
          "description": "submitted by    /u/agilesteel  \n [link]   [comments]",
          "link": "https://www.reddit.com/r/scala/comments/p03dut/part_8_zlayer_dsl_getting_started_with_zio_in/",
          "publishedOn": "2021-08-07T23:02:20.000Z",
          "wordCount": 122,
          "title": "Part 8 - ZLayer DSL - Getting Started with ZIO in Scala3"
        },
        {
          "id": "https://www.reddit.com/r/scala/comments/ozrn1m/tooling_talks_podcast/",
          "author": null,
          "description": "submitted by    /u/ckipp01  \n [link]   [comments]",
          "link": "https://www.reddit.com/r/scala/comments/ozrn1m/tooling_talks_podcast/",
          "publishedOn": "2021-08-07T11:33:44.000Z",
          "wordCount": 130,
          "title": "Tooling Talks Podcast"
        },
        {
          "id": "https://www.reddit.com/r/scala/comments/oznkrj/scala_projects_to_read_through/",
          "author": null,
          "description": "I like this link (trending on GitHub) but wanted to ask if anyone can recommend good examples of Scala projects that are well developed and good examples of Scala code from which to learn.\n    submitted by    /u/shogun333  \n [link]   [comments]",
          "link": "https://www.reddit.com/r/scala/comments/oznkrj/scala_projects_to_read_through/",
          "publishedOn": "2021-08-07T05:38:47.000Z",
          "wordCount": 200,
          "title": "Scala projects to read through"
        },
        {
          "id": "https://www.reddit.com/r/scala/comments/ozj699/sbtcontraband_vs_izumi_idealingua/",
          "author": null,
          "description": "Hi,\n I just came across sbt-contraband presented in this video: https://www.youtube.com/watch?v=yjjieUQC1sY&t=26s. I also knew about izumi IdeaLingua.\n I was wondering if someone has used both, and how they compare for developing rest apis.\n Thoughts?\n Thanks\n    submitted by    /u/0110001001101100  \n [link]   [comments]",
          "link": "https://www.reddit.com/r/scala/comments/ozj699/sbtcontraband_vs_izumi_idealingua/",
          "publishedOn": "2021-08-07T00:33:00.000Z",
          "wordCount": 121,
          "title": "sbt-contraband vs izumi IdeaLingua"
        },
        {
          "id": "https://www.reddit.com/r/scala/comments/oze62h/redmonk_places_scala_at_14_between_shell_and_go/",
          "author": null,
          "description": "submitted by    /u/kag0  \n [link]   [comments]",
          "link": "https://www.reddit.com/r/scala/comments/oze62h/redmonk_places_scala_at_14_between_shell_and_go/",
          "publishedOn": "2021-08-06T19:52:42.000Z",
          "wordCount": 480,
          "title": "RedMonk places Scala at #14, between Shell and Go"
        },
        {
          "id": "https://www.reddit.com/r/scala/comments/oz63rk/any_https_web_proxy_library_in_scala/",
          "author": null,
          "description": "I need to inspect and modify web browser traffic. Is there a library written in Scala, or usable from Scala without much friction, that can do that? I've been searching for a few days without success.\n    submitted by    /u/YuliaSp  \n [link]   [comments]",
          "link": "https://www.reddit.com/r/scala/comments/oz63rk/any_https_web_proxy_library_in_scala/",
          "publishedOn": "2021-08-06T12:57:26.000Z",
          "wordCount": 870,
          "title": "Any HTTPS web proxy library in Scala?"
        },
        {
          "id": "https://www.reddit.com/r/scala/comments/oz43wu/functional_workplaces_truecaller_the_worlds_best/",
          "author": null,
          "description": "submitted by    /u/mihaela_workshub  \n [link]   [comments]",
          "link": "https://www.reddit.com/r/scala/comments/oz43wu/functional_workplaces_truecaller_the_worlds_best/",
          "publishedOn": "2021-08-06T10:37:53.000Z",
          "wordCount": 125,
          "title": "Functional Workplaces: Truecaller - The World's Best Caller ID & Spam Blocking App"
        },
        {
          "id": "https://www.reddit.com/r/scala/comments/oyt7b3/junior_big_data_devops_how_much_scala_should_i/",
          "author": null,
          "description": "Hi, I've been offered this position as a first IT job. I'll probably accept it and start in September, but since I'm unemployed and bored and I'd like to have a bit of a smoother start I thought I'd learn something that may be useful and not make me a nuisance for more experienced devs. \n Most \"dev-like\" experience I have is writing a lot of bash scripts and ansible playbooks. In terms of Java I understand classes, methods, interfaces, overrides, extensions and I've written simple apps for my use or for fun like csv file parsers, web scrappers (Jsoup library) or apps interacting with databases (JDBC).\n Regarding the company: they run different projects, mostly utilizing techs like Spark, Hadoop, Kafka, Airflow. I wanted to know how far should I go with learning Scala regarding these tools. I already read about it for a bit and I watched some videos from Odersky's Coursera course. He said one needs 1 year of development experience to participate, but I don't feel overwhelmed as he explains things pretty nicely. \n Do Big Data Admins use Scala to work on data (like extended SQL queries in Spark Notebooks) or for some other administrative backend tasks? Should I go beyond first module in the mentioned course? Any book recommendations? Thanks!\n    submitted by    /u/jumperginger  \n [link]   [comments]",
          "link": "https://www.reddit.com/r/scala/comments/oyt7b3/junior_big_data_devops_how_much_scala_should_i/",
          "publishedOn": "2021-08-05T22:15:30.000Z",
          "wordCount": 1047,
          "title": "Junior Big Data DevOps - how much Scala should I learn?"
        },
        {
          "id": "https://www.reddit.com/r/scala/comments/oyan48/kinesis_mock_018_cats_effect_3/",
          "author": null,
          "description": "submitted by    /u/SQLNerd  \n [link]   [comments]",
          "link": "https://www.reddit.com/r/scala/comments/oyan48/kinesis_mock_018_cats_effect_3/",
          "publishedOn": "2021-08-05T05:05:03.000Z",
          "wordCount": 107,
          "title": "Kinesis Mock 0.1.8 - Cats Effect 3"
        },
        {
          "id": "https://www.reddit.com/r/scala/comments/oy9p4v/should_you_import_scala_3_projects_in_intellij/",
          "author": null,
          "description": "submitted by    /u/augustnagro  \n [link]   [comments]",
          "link": "https://www.reddit.com/r/scala/comments/oy9p4v/should_you_import_scala_3_projects_in_intellij/",
          "publishedOn": "2021-08-05T04:00:51.000Z",
          "wordCount": 379,
          "title": "Should you import Scala 3 projects in Intellij IDEA as \"SBT\" or \"BSP\" Projects when using SBT?"
        },
        {
          "id": "https://www.reddit.com/r/scala/comments/oy24cp/cats_effect_3_course_from_rock_the_jvm/",
          "author": null,
          "description": "submitted by    /u/danielciocirlan  \n [link]   [comments]",
          "link": "https://www.reddit.com/r/scala/comments/oy24cp/cats_effect_3_course_from_rock_the_jvm/",
          "publishedOn": "2021-08-04T20:54:53.000Z",
          "wordCount": 275,
          "title": "Cats Effect 3 course from Rock the JVM"
        },
        {
          "id": "https://www.reddit.com/r/scala/comments/oxy5gq/nested_xml_into_multiple_dataframes/",
          "author": null,
          "description": "Hi. I have been trying to parse a nested XML into separate dataframes. The idea is that the nested XML has multiple tables in it and I need to extract all those tables.\n Due to me not knowing how to format the post properly, I am attaching a link to my Stackoverflow post. Hope you can have a look and give me suggestions.\n Stackoverflow post\n    submitted by    /u/puny_god18  \n [link]   [comments]",
          "link": "https://www.reddit.com/r/scala/comments/oxy5gq/nested_xml_into_multiple_dataframes/",
          "publishedOn": "2021-08-04T17:49:19.000Z",
          "wordCount": 215,
          "title": "Nested XML into multiple dataframes."
        },
        {
          "id": "https://www.reddit.com/r/scala/comments/oxohre/scalajs_170_is_released_and_it_has_zero_known_bugs/",
          "author": null,
          "description": "submitted by    /u/sjrd  \n [link]   [comments]",
          "link": "https://www.reddit.com/r/scala/comments/oxohre/scalajs_170_is_released_and_it_has_zero_known_bugs/",
          "publishedOn": "2021-08-04T08:49:37.000Z",
          "wordCount": 270,
          "title": "Scala.js 1.7.0 is released, and it has *zero* known bugs"
        },
        {
          "id": "https://www.reddit.com/r/scala/comments/oxlf8t/sbt_type_check_without_compiling/",
          "author": null,
          "description": "Is there a way to type check without compiling with sbt? Currently, I just use 'sbt ~run'\n I'm mostly just looking for a shorter feedback loop, so ideally syntax and type checking\n I'm very new to sbt btw\n    submitted by    /u/Agreeable_Mud9900  \n [link]   [comments]",
          "link": "https://www.reddit.com/r/scala/comments/oxlf8t/sbt_type_check_without_compiling/",
          "publishedOn": "2021-08-04T05:00:11.000Z",
          "wordCount": 1224,
          "title": "SBT Type Check without compiling?"
        },
        {
          "id": "https://www.reddit.com/r/scala/comments/oxfhkl/looking_for_live_pair_programming_partner_for/",
          "author": null,
          "description": "I'm hoping to transition to a Scala / ZIO role. I'm looking for somebody to pair program with to expedite my learning and ask pointed questions. I'm willing to pay for this. I'd probably start with just a 1 hour session, and then possibly make it weekly. If you're interested, please make an offer.\n    submitted by    /u/Agreeable_Mud9900  \n [link]   [comments]",
          "link": "https://www.reddit.com/r/scala/comments/oxfhkl/looking_for_live_pair_programming_partner_for/",
          "publishedOn": "2021-08-03T23:15:30.000Z",
          "wordCount": 285,
          "title": "Looking for live pair programming partner for Scala / ZIO"
        },
        {
          "id": "https://www.reddit.com/r/scala/comments/ovuqb7/who_is_hiring_monthly_rscala_job_postings_thread/",
          "author": null,
          "description": "Please post the job with the following template:\n Company Name | Title(s) of position(s) being hired for | City, [State/Province,] Country | {ONSITE, REMOTE} | {Full Time, Part Time, Contract} | (Optional) $approximate salary description contact information \n Posters: Please only post if you are personally involved in the hiring party -- no 3rd party recruiters (you must post the name of the company)\n Readers: please only email submitters if you personally are interested in the job—no recruiters or sales calls.\n    submitted by    /u/AutoModerator  \n [link]   [comments]",
          "link": "https://www.reddit.com/r/scala/comments/ovuqb7/who_is_hiring_monthly_rscala_job_postings_thread/",
          "publishedOn": "2021-08-01T16:00:20.000Z",
          "wordCount": 601,
          "title": "Who is hiring? Monthly /r/Scala Job Postings Thread!"
        }
      ]
    },
    {
      "title": "PureScript",
      "feedUrl": "https://reddit.com/r/purescript/.rss",
      "siteUrl": "https://www.reddit.com/r/purescript/",
      "articles": [
        {
          "id": "https://www.reddit.com/r/purescript/comments/p0zrmt/how_is_the_correct_instance_being_selected_here/",
          "author": null,
          "description": "https://pastebin.com/UThcGaB3 (please ignore the comments and superfluous imports)\n  \nI'm learning about functional dependency and working around overlapping instance problems. I don't get how purescript decides which of the two instances of Decapitate to run the decapitate function for the call within genericTail.\n Say you run genericTail \"hello\"; collection binds to type String. I get that. But nowhere within genericTail am I specifying whether element is type Char or CodePoint.\n So then how does purescript know which definition of decapitate to run? Thank you.\n    submitted by    /u/puzzle-game  \n [link]   [comments]",
          "link": "https://www.reddit.com/r/purescript/comments/p0zrmt/how_is_the_correct_instance_being_selected_here/",
          "publishedOn": "2021-08-09T11:41:26.000Z",
          "wordCount": 738,
          "title": "How is the correct instance being selected here? Why is there no problem with ambiguity?"
        },
        {
          "id": "https://www.reddit.com/r/purescript/comments/ozvk4f/this_language_is_super_fucking_hard/",
          "author": null,
          "description": "I am dumb as a bag of rocks, no further commentary\n    submitted by    /u/bitch-strangler  \n [link]   [comments]",
          "link": "https://www.reddit.com/r/purescript/comments/ozvk4f/this_language_is_super_fucking_hard/",
          "publishedOn": "2021-08-07T15:41:26.000Z",
          "wordCount": 941,
          "title": "This language is super fucking hard"
        },
        {
          "id": "https://www.reddit.com/r/purescript/comments/oytyt1/the_following_packages_do_not_exist_in_your/",
          "author": null,
          "description": "I'm trying to reverse a string by just running reverse \"hello\". I believe I need this one? It has the sig reverse :: String -> String from the Data.String.Yarn module.\n So I added \"yarn\" to my spago.dhall dependencies list and ran spago build. I get\n [error] The following packages do not exist in your package set: [error] - yarn \n What do I need to do please?\n    submitted by    /u/puzzle-game  \n [link]   [comments]",
          "link": "https://www.reddit.com/r/purescript/comments/oytyt1/the_following_packages_do_not_exist_in_your/",
          "publishedOn": "2021-08-05T22:56:44.000Z",
          "wordCount": 479,
          "title": "\"The following packages do not exist in your package set\""
        },
        {
          "id": "https://www.reddit.com/r/purescript/comments/oyo0ph/not_sure_why_im_getting_this_error/",
          "author": null,
          "description": "My source\n  \nhttps://pastebin.com/VyFhhXta\n  \nThe error I'm getting\n Could not match type () @Type with type ( street1 :: String | t0 ) while trying to match type () @Type with type ( street1 :: String | t0 ) while checking that expression { street1: \"123 Main Street\" , street2: \"Apt 152\" , city: \"Jamestown\" , state: \"CA\" , zip: \"95327\" } has type { city :: String , state :: String , street :: String , zip :: String } in value declaration person where t0 is an unknown type PureScript(TypesDoNotUnify) \n the error is a little cryptic for me at the moment, not sure how to fix. Suggestions please? Thanks\n    submitted by    /u/puzzle-game  \n [link]   [comments]",
          "link": "https://www.reddit.com/r/purescript/comments/oyo0ph/not_sure_why_im_getting_this_error/",
          "publishedOn": "2021-08-05T18:03:07.000Z",
          "wordCount": 269,
          "title": "Not sure why I'm getting this error"
        },
        {
          "id": "https://www.reddit.com/r/purescript/comments/ow574t/is_there_a_way_to_inspect_typeclasses_info/",
          "author": null,
          "description": "Coming from Haskell. ghci lets you run something like :info Ord which prints the following in the repl\n Prelude> :info Ord class Eq a => Ord a where compare :: a -> a -> Ordering (<) :: a -> a -> Bool (<=) :: a -> a -> Bool (>) :: a -> a -> Bool (>=) :: a -> a -> Bool max :: a -> a -> a min :: a -> a -> a {-# MINIMAL compare | (<=) #-} -- Defined in ‘GHC.Classes’ instance Ord a => Ord [a] -- Defined in ‘GHC.Classes’ instance Ord Word -- Defined in ‘GHC.Classes’ instance Ord Ordering -- Defined in ‘GHC.Classes’ instance Ord Int -- Defined in ‘GHC.Classes’ instance Ord Float -- Defined in ‘GHC.Classes’ instance Ord Double -- Defined in ‘GHC.Classes’ instance Ord Char -- Defined in ‘GHC.Classes’ instance Ord Bool -- Defined in ‘GHC.Classes’ ... \n which shows the\n  \nTypeclass it extends from\n Methods\n Minimal methods that must be implemented by an instance\n Currently active instances\n (some other stuff not shown above which I don't totally understand, but whatever)\n  \nI'm looking for how to do this in Purescript?\n    submitted by    /u/puzzle-game  \n [link]   [comments]",
          "link": "https://www.reddit.com/r/purescript/comments/ow574t/is_there_a_way_to_inspect_typeclasses_info/",
          "publishedOn": "2021-08-02T01:57:39.000Z",
          "wordCount": 382,
          "title": "Is there a way to inspect typeclasses? (:info <typeclass> in Haskell)"
        },
        {
          "id": "https://www.reddit.com/r/purescript/comments/ovx9rm/getting_error_for_seemingly_simple_code_what_am_i/",
          "author": null,
          "description": "Here's my Main.purs\n module Main where import Prelude import Effect (Effect) import Effect.Console (log) data Vehicle = Bicycle { speed :: Int , color :: String , gear :: Char , recalled :: Boolean } | Motorcycle { speed :: Int , color :: String , gear :: Char , motor :: String } | Boat { speed :: Int , color :: String , gear :: Char , captain :: Boolean } main :: Effect Unit main = do log \"🍝\" \n Then in repl I\n  \nimport Main\n foo = Bicycle {speed: 4, color: \"test\", gear: 'r', recalled: false}\n And run foo.speed\n  \nand I get\n Error found: in module $PSCI at :1:1 - 1:4 (line 1, column 1 - line 1, column 4) Could not match type { speed :: t0 | t1 } with type Vehicle while checking that type Vehicle is at least as general as type { speed :: t0 | t1 } while checking that expression foo has type { speed :: t0 | t1 } while checking type of property accessor foo.speed in value declaration it where t0 is an unknown type t1 is an unknown type \n Why?\n Also, when I run log \"hello\" or something, I get \"Unknown value log\" even though Main has import Effect.Console (log). When you import Main into the repl does it not run all the import statements contained therein?\n    submitted by    /u/puzzle-game  \n [link]   [comments]",
          "link": "https://www.reddit.com/r/purescript/comments/ovx9rm/getting_error_for_seemingly_simple_code_what_am_i/",
          "publishedOn": "2021-08-01T18:17:32.000Z",
          "wordCount": 885,
          "title": "Getting error for seemingly simple code. What am I doing wrong please?"
        },
        {
          "id": "https://www.reddit.com/r/purescript/comments/otjvei/does_anyone_know_of_purescript_libraries_for/",
          "author": null,
          "description": "submitted by    /u/ctenbrinke  \n [link]   [comments]",
          "link": "https://www.reddit.com/r/purescript/comments/otjvei/does_anyone_know_of_purescript_libraries_for/",
          "publishedOn": "2021-07-28T21:48:54.000Z",
          "wordCount": 170,
          "title": "Does anyone know of purescript libraries for audio synthesis, or has successfully used purescript in conjunction with js libraries like Tonejs? If yes, what are your findings and recommendations?"
        },
        {
          "id": "https://www.reddit.com/r/purescript/comments/os42yg/ann_functional_design_and_architecture_second/",
          "author": null,
          "description": "submitted by    /u/graninas  \n [link]   [comments]",
          "link": "https://www.reddit.com/r/purescript/comments/os42yg/ann_functional_design_and_architecture_second/",
          "publishedOn": "2021-07-26T17:52:06.000Z",
          "wordCount": 650,
          "title": "[ANN] Functional Design and Architecture: Second Edition (Manning Publications)"
        },
        {
          "id": "https://www.reddit.com/r/purescript/comments/orxc1i/purescript_community_migrating_from_slack_to/",
          "author": null,
          "description": "The PureScript teams are moving from the Functional Programming Slack to our dedicated PureScript Discord server. You can join here: https://purescript.org/chat\n The Slack channel will continue to exist, but as an unofficial gathering space only. To learn more about why we're migrating to Discord, please see this announcement:https://discourse.purescript.org/t/migrating-to-discord/2493\n See you in there!\n    submitted by    /u/saylu  \n [link]   [comments]",
          "link": "https://www.reddit.com/r/purescript/comments/orxc1i/purescript_community_migrating_from_slack_to/",
          "publishedOn": "2021-07-26T12:06:13.000Z",
          "wordCount": 211,
          "title": "PureScript Community Migrating from Slack to Discord"
        },
        {
          "id": "https://www.reddit.com/r/purescript/comments/opfj95/newtype_conversion/",
          "author": null,
          "description": "I am extremely new to purescript and I am getting quite frustrated trying to find answers to simple questions online. I was hired to managed an existing codebase in purescript so I already have tons of existing code I need to work around. I have a newtype called ContentKey that derives from String. I then have a FFI returning a string. How if possible do I convert that string from a string to a ContentKey?\n Thanks in advance.\n    submitted by    /u/anybody226  \n [link]   [comments]",
          "link": "https://www.reddit.com/r/purescript/comments/opfj95/newtype_conversion/",
          "publishedOn": "2021-07-22T15:00:00.000Z",
          "wordCount": 439,
          "title": "Newtype conversion"
        }
      ]
    },
    {
      "title": "Serokell Blog",
      "feedUrl": "https://serokell.io/blog.rss.xml",
      "siteUrl": "https://serokell.io/blog",
      "articles": [
        {
          "id": "https://serokell.io/blog/introduction-to-convolutional-neural-networks",
          "author": "hi+yuliagavrilova@serokell.io (Yulia Gavrilova)",
          "description": "This guide for beginners will help you understand how convolution neural networks (CNNs) work and what they are useful for.",
          "link": "https://serokell.io/blog/introduction-to-convolutional-neural-networks",
          "publishedOn": "2021-08-03T00:00:00.000Z",
          "wordCount": 2355,
          "title": "Convolutional Neural Networks for Beginners"
        },
        {
          "id": "https://serokell.io/blog/serokell-icfpc-2021",
          "author": "hi@serokell.io (Serokell staff)",
          "description": "On July 9-12, three Serokellers took part in ICFPC 2021 as part of team TBD. Read this article to learn how the team solved this year's task.",
          "link": "https://serokell.io/blog/serokell-icfpc-2021",
          "publishedOn": "2021-07-30T00:00:00.000Z",
          "wordCount": 3498,
          "title": "Serokell at ICFPC 2021: Rust, TypeScript, and Brain Wall"
        },
        {
          "id": "https://serokell.io/blog/elixir-in-production-statuspal",
          "author": "hi+gintsdreimanis@serokell.io (Gints Dreimanis)",
          "description": "Read our interview with Eduardo Messuti, the founder & CEO of Statuspal, to find out the benefits of using Elixir for SaaS projects.",
          "link": "https://serokell.io/blog/elixir-in-production-statuspal",
          "publishedOn": "2021-07-20T00:00:00.000Z",
          "wordCount": 1367,
          "title": "Elixir in Production: Statuspal"
        },
        {
          "id": "https://serokell.io/blog/ai-ethics-guide",
          "author": "hi+yuliagavrilova@serokell.io (Yulia Gavrilova)",
          "description": "Everyone’s talking about the ethics of AI but what does it really mean? Read this post to find out.",
          "link": "https://serokell.io/blog/ai-ethics-guide",
          "publishedOn": "2021-07-13T00:00:00.000Z",
          "wordCount": 2363,
          "title": "Ethics in Artificial Intelligence: From A to Z"
        }
      ]
    },
    {
      "title": "Kowainik Blog",
      "feedUrl": "https://kowainik.github.io/rss.xml",
      "siteUrl": "https://kowainik.github.io",
      "articles": []
    },
    {
      "title": "Tweag - Engineering blog",
      "feedUrl": "https://www.tweag.io/rss.xml",
      "siteUrl": "https://tweag.io",
      "articles": [
        {
          "id": "https://tweag.io/blog/2021-07-28-gazelle-cabal/",
          "author": null,
          "description": "If you have a large Haskell code base, organized in multiple Cabal\npackages, with many system dependencies, and which takes very long\nto build, then this post is for you. We describe herein\ngazelle_cabal, a new tool that generates Haskell\nrules to build with the Bazel build tool. It saves the\nmaintainer the trouble of writing these rules to begin with, and\nthen keeping them synchronized with the Cabal files whenever they\nare modified.\nDeveloper teams who want to make a gradual transition to Bazel can\ncontinue to specify builds via Cabal files while still using Bazel to\nbuild their artifacts.\nWhy Bazel?\nBazel is known to offer caching for builds of multi-language projects.\nOnce the cache is hot, builds can avoid rebuilding many intermediate artifacts,\nshortening the overall build times. Thi…",
          "link": "https://tweag.io/blog/2021-07-28-gazelle-cabal/",
          "publishedOn": "2021-07-28T00:00:00.000Z",
          "wordCount": 1260,
          "title": "Convert Cabal-based projects to Bazel automatically"
        },
        {
          "id": "https://tweag.io/blog/2021-07-21-qcheck2-integrated-shrinking/",
          "author": null,
          "description": "In Property Based Testing (PBT) the programmer specifies desirable properties or invariants for the code under test, and uses a test framework to generate random inputs to find counter-examples.\nFor example, “a reversed list has the same size as the original list” which can be written as:\nfun l -> List.length (List.reverse l) = List.length l\n\nImagine this test fails for the list [42; 9079086709; -148; 9; -9876543210].\nDoes this counter-example fail the test because there are 5 elements? Or because there are negative numbers? Or maybe due to the big numbers?\nMany reasons are possible.\nTo help narrow down the cause of test failures, most PBT libraries provide a feature called shrinking.\nThe idea is that once a test fails for a given input, the test engine will try less complex inputs, to fin…",
          "link": "https://tweag.io/blog/2021-07-21-qcheck2-integrated-shrinking/",
          "publishedOn": "2021-07-21T00:00:00.000Z",
          "wordCount": 1930,
          "title": "Integrated shrinking in QCheck"
        },
        {
          "id": "https://tweag.io/blog/2021-07-14-metabolic-networks/",
          "author": null,
          "description": "As part of my Tweag fellowship, I developed dingo,\na Python package to analyze metabolic networks. dingo provides three methods\nthat complement the openCOBRA project. The main\nadvantage of dingo is the efficient implementation\nof new sampling algorithms that generate steady states of metabolic networks.\nIn this post, I’ll explain what this all means and even discuss how\nwe can use this tool to discover new COVID-19 treatments.\nAlso check out the audio interview with Apostolos about dingo on the Compositional podcast!\nMetabolic networks and COVID-19\nEvery moment, in every cell of our body, thousands of chemical reactions are\ntaking place. In cells infected with a virus, some of these reactions benefit\nthe virus by producing molecules—metabolites—that are critical for making new\nvirus partic…",
          "link": "https://tweag.io/blog/2021-07-14-metabolic-networks/",
          "publishedOn": "2021-07-14T00:00:00.000Z",
          "wordCount": 2082,
          "title": "Searching for COVID-19 treatments using metabolic networks"
        }
      ]
    },
    {
      "title": "Alexis King’s Blog",
      "feedUrl": "http://lexi-lambda.github.io/feeds/all.atom.xml",
      "siteUrl": "https://lexi-lambda.github.io/",
      "articles": []
    },
    {
      "title": "Org-mode",
      "feedUrl": "https://reddit.com/r/orgmode/.rss",
      "siteUrl": "https://www.reddit.com/r/orgmode/",
      "articles": [
        {
          "id": "https://www.reddit.com/r/orgmode/comments/p1tntt/ios_improving_org_task_rendering/",
          "author": null,
          "description": "submitted by    /u/xenodium  \n [link]   [comments]",
          "link": "https://www.reddit.com/r/orgmode/comments/p1tntt/ios_improving_org_task_rendering/",
          "publishedOn": "2021-08-10T17:13:11.000Z",
          "wordCount": 176,
          "title": "iOS: Improving org task rendering"
        },
        {
          "id": "https://www.reddit.com/r/orgmode/comments/p1raro/executable_org_file_bootstrapping/",
          "author": null,
          "description": "If you have any neat tricks to bootstrap from an org file, do share. I came up with a neat solution below, but am having a slight isssue.\n As the ideal in literate programming paradigm, org should be capable of bootstrapping arbitrary projects, without the user knowing or using emacs. After MUCH trial and error, I finally came up with a shebang that will tangle a file, though it depends on the current working directory/filename:\n #! emacs --eval=(progn (find-file \"this-file.org\") (org-mode) (org-babel-tangle)) \n However, when emacs detects itself in the magic string, it opens the document in Emacs-Lisp Mode instead of org mode. Basically, when you execute the file, it opens correctly, but when you open the file normally, you must invoke (org-mode). Anyone have a fix/other ideas?\n    submitted by    /u/Zakrahn  \n [link]   [comments]",
          "link": "https://www.reddit.com/r/orgmode/comments/p1raro/executable_org_file_bootstrapping/",
          "publishedOn": "2021-08-10T15:19:10.000Z",
          "wordCount": 291,
          "title": "Executable org file (bootstrapping)"
        },
        {
          "id": "https://www.reddit.com/r/orgmode/comments/p1g3bb/trouble_deciding_how_best_to_structure_schedule/",
          "author": null,
          "description": "I'm used to using traditional calendaring and I'm having a bit of trouble visualizing how best to lay out my schedule using org so I'd love to hear how some of you do it and see what speaks to me. All tutorials I've seen online just show small examples which is OK... I understand everyone will come up with a different workflow, but I'd love some inspiration. For instance do you all:\n 1) Use one big calendar file and just throw events into it unsorted? 2) Use some sort of sorted calendar file? If so, how do you sort it... By year, then month, then day? This is confusing because scheduled dates seem to be children of the parent title, so it doesn't seem logical to organize events this way. 3) Do you use org journal in some way for this?\n I'd also love to know how you integrate your scheduled events with scheduled to-dos... Are they one in the same place?\n Finally, is there some web resource with some example layouts or workflows?\n Really looking forward to getting into this. Appreciate any inspiration.\n    submitted by    /u/blutrients96  \n [link]   [comments]",
          "link": "https://www.reddit.com/r/orgmode/comments/p1g3bb/trouble_deciding_how_best_to_structure_schedule/",
          "publishedOn": "2021-08-10T02:22:50.000Z",
          "wordCount": 350,
          "title": "Trouble Deciding How Best To Structure Schedule"
        },
        {
          "id": "https://www.reddit.com/r/orgmode/comments/p0nv07/mark_an_important_piece_of_text_sentence_and/",
          "author": null,
          "description": "Hello!\n I've recently started using org-mode for taking down notes for my a couple of CS based courses and I'm loving it so far! Using a neat hierarchical structure. However, there's one important feature that I'd like, which I haven't been able to do in org-mode.\n As I'm typing down notes, I would like to select a particular sentence/phrase and mark it as an important \"note\" to remember. This is analogous to highlighting a piece of text. Later, I would like to retrieve/display the important notes, that I have marked.\n While I understand that having Tags in headlines solves this issue (where I can set the tag to IMPORTANT), it works only at headline level and not at a text level. Additionally, the simple formatting features like bold/italics etc do not really help/make the text stand out.\n Is there a tool/package/anything that can do something like this? Where I can essentially select a sentence/phrase from my notes, and mark as important and search later? If not, how do org-mode users highlight some text, sort of like a 'callout' block?\n I wouldn't mind the piece of text to be a separate \"block\", if it is a feasible solution as well. It need not be part of a paragraph, however, it doesn't make sense to be a headline.\n Thanks.\n ​\n A small snippet attached here. Would like the selected portion to be marked as \"important\". \n Image Query\n    submitted by    /u/ThreeForElvenKings  \n [link]   [comments]",
          "link": "https://www.reddit.com/r/orgmode/comments/p0nv07/mark_an_important_piece_of_text_sentence_and/",
          "publishedOn": "2021-08-08T21:54:13.000Z",
          "wordCount": 818,
          "title": "Mark an important piece of text (sentence) and retrieve later"
        },
        {
          "id": "https://www.reddit.com/r/orgmode/comments/p0lypl/how_to_show_a_specific_todo_in_orgagenda_week_view/",
          "author": null,
          "description": "I got a to-do like this:\n  * TODO Some really long task [0/3] ** [ ] Step 1 ** [ ] Step 2 ** [ ] Step 3  It does not have a scheduled date, nor a deadline. Since it's also not a habit, it doesn't show up in my org-agenda weekly view. How could I make the parent task show up?\n Edit: formatting\n    submitted by    /u/Ieremies  \n [link]   [comments]",
          "link": "https://www.reddit.com/r/orgmode/comments/p0lypl/how_to_show_a_specific_todo_in_orgagenda_week_view/",
          "publishedOn": "2021-08-08T20:11:13.000Z",
          "wordCount": 277,
          "title": "How to show a specific to-do in org-agenda week view?"
        },
        {
          "id": "https://www.reddit.com/r/orgmode/comments/p0a73y/how_do_i_get_the_current_time_and_not_date_in_an/",
          "author": null,
          "description": "Pressing C-c . brings up a calendar through which I can move around and place any date but no key combos seem to get me the current time.\n I am trying to use org-mode as a time tracker like I can log in specific times, say 1000 or 1300 and write what happened or what I did from the last time entry.\n    submitted by    /u/daddyodevil  \n [link]   [comments]",
          "link": "https://www.reddit.com/r/orgmode/comments/p0a73y/how_do_i_get_the_current_time_and_not_date_in_an/",
          "publishedOn": "2021-08-08T07:18:28.000Z",
          "wordCount": 466,
          "title": "How do I get the current time and not date in an org file in DoomEmacs?"
        },
        {
          "id": "https://www.reddit.com/r/orgmode/comments/ozuzwa/how_can_i_remove_blank_lines_between_year_month/",
          "author": null,
          "description": "​\n https://preview.redd.it/j63vcw7abyf71.png?width=454&format=png&auto=webp&s=3fa2f982ce9b93fe2474a81e1537fe6d7659bb1e\n I've specified :emptylines 0 in the capture template and still get this result. \n Emacs 27.4, Org 9.4.6 running on Windows 10 (GUI).\n    submitted by    /u/argtri  \n [link]   [comments]",
          "link": "https://www.reddit.com/r/orgmode/comments/ozuzwa/how_can_i_remove_blank_lines_between_year_month/",
          "publishedOn": "2021-08-07T15:10:07.000Z",
          "wordCount": 224,
          "title": "How can I remove blank lines between year, month, and date headings of a datetree?"
        },
        {
          "id": "https://www.reddit.com/r/orgmode/comments/ozrdrj/how_to_use_orgmode_to_track_log_of_hoursbilling/",
          "author": null,
          "description": "Hi,\n What would be the best way to track a log of invoicing (or hours spent) per contractor?\n I was thinking there might be a way using logging and columnview to generate tabled reports.\n Any thoughts/input on this? Anyone doing something like that? \n Thanks!\n    submitted by    /u/yashasolutions  \n [link]   [comments]",
          "link": "https://www.reddit.com/r/orgmode/comments/ozrdrj/how_to_use_orgmode_to_track_log_of_hoursbilling/",
          "publishedOn": "2021-08-07T11:12:35.000Z",
          "wordCount": 309,
          "title": "how to use orgmode to track log of hours/billing by contractors?"
        },
        {
          "id": "https://www.reddit.com/r/orgmode/comments/ozbwd2/ios_quick_org_task_input_and_search_early_days/",
          "author": null,
          "description": "submitted by    /u/xenodium  \n [link]   [comments]",
          "link": "https://www.reddit.com/r/orgmode/comments/ozbwd2/ios_quick_org_task_input_and_search_early_days/",
          "publishedOn": "2021-08-06T17:56:34.000Z",
          "wordCount": 145,
          "title": "iOS: Quick org task input and search [early days]"
        },
        {
          "id": "https://www.reddit.com/r/orgmode/comments/oz7h31/interacting_with_attachments/",
          "author": null,
          "description": "I asked over in r/emacs weekly thread, but maybe I'll have more luck here:\n Is there a built-in function which behaves like org-attach-open but instead inserts a link to the selected attachment?\n    submitted by    /u/emacsomancer  \n [link]   [comments]",
          "link": "https://www.reddit.com/r/orgmode/comments/oz7h31/interacting_with_attachments/",
          "publishedOn": "2021-08-06T14:14:50.000Z",
          "wordCount": 223,
          "title": "Interacting with attachments?"
        },
        {
          "id": "https://www.reddit.com/r/orgmode/comments/oyy1n4/error_when_editing_org_files/",
          "author": null,
          "description": "I got this message from time to time when editing org files or when clock-in todo items: Debugger entered--Lisp error: (cl-assertion-failed ((equal filename (expand-file-name buffer-file-truename)) nil)), and the files would be locked for further edit until I restart emacs.\n I have no idea what's wrong.\n Is it anything related to the version? (I am using emacs-plus 28. I chose this version because I can't solve the CJK word-wrap problem in emacs 27.)\n    submitted by    /u/Oazyan  \n [link]   [comments]",
          "link": "https://www.reddit.com/r/orgmode/comments/oyy1n4/error_when_editing_org_files/",
          "publishedOn": "2021-08-06T02:55:44.000Z",
          "wordCount": 202,
          "title": "Error when editing org files"
        },
        {
          "id": "https://www.reddit.com/r/orgmode/comments/oyukcp/how_to_change_orgagenda_first_day_when/",
          "author": null,
          "description": "So, I'm trying to make my org-agenda view be from the beginning of the week (for me, Sunday) until the Wednesday of the next week. Doing this:\n  (setq org-agenda-span 11 org-agenda-start-on-weekday 0) ` Makes the view start on the last Monday and go to Thursday of the next week, not Sunday to Wednesday. Is there a way to solve my problem?\n    submitted by    /u/Ieremies  \n [link]   [comments]",
          "link": "https://www.reddit.com/r/orgmode/comments/oyukcp/how_to_change_orgagenda_first_day_when/",
          "publishedOn": "2021-08-05T23:29:21.000Z",
          "wordCount": 229,
          "title": "How to change org-agenda first day when org-agenda-span is not week"
        },
        {
          "id": "https://www.reddit.com/r/orgmode/comments/oybk9y/getting_the_id_of_a_fileheading_link/",
          "author": null,
          "description": "Say I have a link like so [[file:contacts.org::John Smith][John]]. Is there an easy way to get the affiliated ID in this headline? In other words:\n * John Smith :PROPERTIES: :ID: asdalksfj09322jalksdfasdf :END: \n Is there an easy way in Elisp that I can get the ID property with only the link above? I know I can do some nasty open-buffer-with-the-link-org-id-copy dance, but is there a native function like (org-get-id-for-file-link FILE_LINK)?\n    submitted by    /u/codethrasher  \n [link]   [comments]",
          "link": "https://www.reddit.com/r/orgmode/comments/oybk9y/getting_the_id_of_a_fileheading_link/",
          "publishedOn": "2021-08-05T06:12:23.000Z",
          "wordCount": 378,
          "title": "Getting the ID of a file/heading link"
        },
        {
          "id": "https://www.reddit.com/r/orgmode/comments/oy09c9/please_share_your_orglatexexport_configs/",
          "author": null,
          "description": "submitted by    /u/shaunsingh0207  \n [link]   [comments]",
          "link": "https://www.reddit.com/r/orgmode/comments/oy09c9/please_share_your_orglatexexport_configs/",
          "publishedOn": "2021-08-04T19:26:07.000Z",
          "wordCount": 466,
          "title": "Please share your org-latex-export configs!"
        },
        {
          "id": "https://www.reddit.com/r/orgmode/comments/oxtumt/set_visible_only_toggled_on_as_default_in_export/",
          "author": null,
          "description": "I'm using EMACS in a terminal, in WSL1 in Windows Terminal, in a TMUX session. When I summon the Export Dispatcher, C-v to toggle on Visible only the keybinding is not recognized. The single character keybindings work fine, and I can export but just not with Visible only toggled on.\n Question: is there way for me to permanently set Visible only to always be on? My intention here is just to bypass the problematic keybinding.\n    submitted by    /u/xwfwuerbt0o3z  \n [link]   [comments]",
          "link": "https://www.reddit.com/r/orgmode/comments/oxtumt/set_visible_only_toggled_on_as_default_in_export/",
          "publishedOn": "2021-08-04T14:28:20.000Z",
          "wordCount": 230,
          "title": "Set `Visible only` toggled on as default in Export Dispatcher?"
        },
        {
          "id": "https://www.reddit.com/r/orgmode/comments/oxd03x/sum_values_from_tree_items/",
          "author": null,
          "description": "Is there a (simple!) way to accomplish what I want ... to explain a bit, I have a tree of items:\n  \nhome stuff \n living room [1/3] \n TODO mirror 100\n TODO cabinet 45\n TODO wash carpet\n DONE cabinet 130\n \n home office [1/2] \n TODO headphones 59\n DONE desk 250\n \n \n  \nWith these, the completion ratio thing was as easy to get as typing in \"[/]\", even picking up things recursively only required one rather clumsy, but not too bothersome, :PROPERTIES: definition. Now, the numbers after some of the items are prices of those things. I'd like a sum of those not yet DONE to show up on the higher level heading, i.e. \"bedroom [1/3] 145\" and \"home office [1/2] 59\". What would be the simplest way to achieve this? Ideally, the summing would work recursively for deeper trees and could be toggled to include either DONE or TODO, or both.\n I tried lazily searching on the Internet for something that does this, but perhaps I had the wrong keywords ... all I found was table mode things, which seemed fancy, but neither very easy to use, nor compatible with my way of doing things---that is, lazily.\n (I'm a software developer by trade and could probably conjure up some lisp to do this, but I'd like to think that something close enough to what I want already exists in a usable form, somewhere. And possibly made by someone who is a robust professional, not a lazy hack like me.)\n I'm using Doom Emacs, in case that makes any difference.\n    submitted by    /u/taneli_v  \n [link]   [comments]",
          "link": "https://www.reddit.com/r/orgmode/comments/oxd03x/sum_values_from_tree_items/",
          "publishedOn": "2021-08-03T21:09:08.000Z",
          "wordCount": 597,
          "title": "Sum values from tree items"
        },
        {
          "id": "https://www.reddit.com/r/orgmode/comments/ox6bed/agenda_view_repeating_todo_bug/",
          "author": null,
          "description": "I'm using version 9.4.6 and still experiencing the bug described in this thread, where some TODO items get marked done when I don't want them to (and vice versa). Has anyone found a fix for this? I've already fallen behind schedule on important things on several occasions when the Entry repeats message didn't show up in the minibuffer and I didn't notice the change until it was too late.\n    submitted by    /u/No-Command-791  \n [link]   [comments]",
          "link": "https://www.reddit.com/r/orgmode/comments/ox6bed/agenda_view_repeating_todo_bug/",
          "publishedOn": "2021-08-03T15:52:44.000Z",
          "wordCount": 431,
          "title": "Agenda view repeating TODO bug"
        },
        {
          "id": "https://www.reddit.com/r/orgmode/comments/ox4e5p/orgsettagscommand_doesnt_allocate_enough_vertical/",
          "author": null,
          "description": "Anyone run into the issue of org-set-tags-command not allocating enough vertical space for the minibuffer contents? It seems like the command works as expected the first time I run the command, and then every time afterwards (even across buffers) it instead looks like this.\n Not a big problem, just kind of annoying to not know why it's doing this.\n    submitted by    /u/summetria  \n [link]   [comments]",
          "link": "https://www.reddit.com/r/orgmode/comments/ox4e5p/orgsettagscommand_doesnt_allocate_enough_vertical/",
          "publishedOn": "2021-08-03T14:16:20.000Z",
          "wordCount": 180,
          "title": "org-set-tags-command doesn't allocate enough vertical space for minibuffer?"
        },
        {
          "id": "https://www.reddit.com/r/orgmode/comments/owjddp/scheduled_tasks_showing_up_repeatedly_in_agenda/",
          "author": null,
          "description": "Whenever I schedule something with org-schedule I noticed that it will show up in every week's agenda unless I delete it. I'm positive I'm not understanding something about them correctly, but I would just like to see them if they're marked for some future time/date, and not other times after that. Do I need to mark them as done or something?\n  \nobligatory, \"I'm using Doom Emacs\"\n  \nEDIT: solved my own problem (see below) by reading the docs\n    submitted by    /u/codethrasher  \n [link]   [comments]",
          "link": "https://www.reddit.com/r/orgmode/comments/owjddp/scheduled_tasks_showing_up_repeatedly_in_agenda/",
          "publishedOn": "2021-08-02T17:28:59.000Z",
          "wordCount": 285,
          "title": "Scheduled tasks showing up repeatedly in agenda"
        },
        {
          "id": "https://www.reddit.com/r/orgmode/comments/ow7npa/org_protocol_firefox_isnt_passing_links_to/",
          "author": null,
          "description": "I essentially followed the setup described here:\n https://jingsi.space/post/2017/04/30/org-protocol/ \n I'm not using the browser extension though, I took my bookmarklet from the manual:\n https://orgmode.org/manual/The-capture-protocol.html#The-capture-protocol\n This sort of works, except for two things:\n 1) When I try to use the expansions %l or %:link to get the url from the bookmarklet, nothing shows up. Even %a only gives the page name.\n 2) The expansion %d expands to the last block of highlighted text on a clipboard if nothing is currently highlighted\n Has anyone experienced this?\n    submitted by    /u/AblatedSprocket  \n [link]   [comments]",
          "link": "https://www.reddit.com/r/orgmode/comments/ow7npa/org_protocol_firefox_isnt_passing_links_to/",
          "publishedOn": "2021-08-02T04:46:16.000Z",
          "wordCount": 196,
          "title": "[Org Protocol] Firefox isn't passing links to template"
        },
        {
          "id": "https://www.reddit.com/r/orgmode/comments/ovw41z/this_month_in_org_july_2021_citations/",
          "author": null,
          "description": "submitted by    /u/tecosaur  \n [link]   [comments]",
          "link": "https://www.reddit.com/r/orgmode/comments/ovw41z/this_month_in_org_july_2021_citations/",
          "publishedOn": "2021-08-01T17:14:31.000Z",
          "wordCount": 165,
          "title": "This Month in Org: July 2021 — Citations!"
        },
        {
          "id": "https://www.reddit.com/r/orgmode/comments/ovtu9q/insert_timestamps_in_natural_language/",
          "author": null,
          "description": "I create timestamps in orgmode with C-c ., which opens up a prompt wherre I can enter dates in ISO8601. I have a distant memory that it once was possible to enter something like \"tomorow\" or \"next friday\", but it seems this doesn't work anymore. I didn't find anything about it in the documentation.\n Does anyone know if this was possible at some point and why it is not anymore?\n    submitted by    /u/Kaligule  \n [link]   [comments]",
          "link": "https://www.reddit.com/r/orgmode/comments/ovtu9q/insert_timestamps_in_natural_language/",
          "publishedOn": "2021-08-01T15:11:10.000Z",
          "wordCount": 332,
          "title": "Insert timestamps in natural language?"
        },
        {
          "id": "https://www.reddit.com/r/orgmode/comments/ovsyw9/latex_export_of/",
          "author": null,
          "description": "When I put the latex command \\, into an org document it gets exported to $\\backslash$, . How can I make it be exported to \\, (latex for \"narrow non-breaking space\")?\n I suspect this has to do with the fact, that it's a one-letter command. Other latex stuff works as expected.\n    submitted by    /u/Gallipo  \n [link]   [comments]",
          "link": "https://www.reddit.com/r/orgmode/comments/ovsyw9/latex_export_of/",
          "publishedOn": "2021-08-01T14:20:46.000Z",
          "wordCount": 267,
          "title": "latex export of \\,"
        },
        {
          "id": "https://www.reddit.com/r/orgmode/comments/ovk4kw/org_clock_in_include_plain_timestamped_meetings/",
          "author": null,
          "description": "Anyone know the best way to include plain timestamped (Tagged) events, marked as done in clock table report, without having to manually add clock in, after the event?\n Thanks in advance!\n    submitted by    /u/Cactus_Chaos  \n [link]   [comments]",
          "link": "https://www.reddit.com/r/orgmode/comments/ovk4kw/org_clock_in_include_plain_timestamped_meetings/",
          "publishedOn": "2021-08-01T02:36:40.000Z",
          "wordCount": 198,
          "title": "Org Clock In, include plain timestamped (Meetings) in clock table report"
        },
        {
          "id": "https://www.reddit.com/r/orgmode/comments/ovbb72/orgroamui_a_frontend_for_orgroam/",
          "author": null,
          "description": "submitted by    /u/Tommerd  \n [link]   [comments]",
          "link": "https://www.reddit.com/r/orgmode/comments/ovbb72/orgroamui_a_frontend_for_orgroam/",
          "publishedOn": "2021-07-31T17:31:38.000Z",
          "wordCount": 155,
          "title": "Org-Roam-UI: A frontend for org-roam"
        }
      ]
    },
    {
      "title": "MELPA package updates",
      "feedUrl": "https://melpa.org/updates.rss",
      "siteUrl": "https://melpa.org",
      "articles": [
        {
          "id": "https://melpa.org/packages/org-autolist-20210810.2215.el",
          "author": null,
          "description": "The org-autolist package has been updated to version 20210810.2215.",
          "link": "https://melpa.org/#/org-autolist",
          "publishedOn": "2021-08-10T22:15:00.000Z",
          "wordCount": 105,
          "title": "org-autolist (20210810.2215) --- Improved list management in org-mode"
        },
        {
          "id": "https://melpa.org/packages/fennel-mode-20210810.2141.el",
          "author": null,
          "description": "The fennel-mode package has been updated to version 20210810.2141.",
          "link": "https://melpa.org/#/fennel-mode",
          "publishedOn": "2021-08-10T21:41:00.000Z",
          "wordCount": 105,
          "title": "fennel-mode (20210810.2141) --- A major-mode for editing Fennel code"
        },
        {
          "id": "https://melpa.org/packages/elpher-20210810.2020.tar",
          "author": null,
          "description": "The elpher package has been updated to version 20210810.2020.",
          "link": "https://melpa.org/#/elpher",
          "publishedOn": "2021-08-10T20:20:00.000Z",
          "wordCount": 105,
          "title": "elpher (20210810.2020) --- A friendly gopher and gemini client"
        },
        {
          "id": "https://melpa.org/packages/fanyi-20210810.1956.el",
          "author": null,
          "description": "The fanyi package has been updated to version 20210810.1956.",
          "link": "https://melpa.org/#/fanyi",
          "publishedOn": "2021-08-10T19:56:00.000Z",
          "wordCount": 105,
          "title": "fanyi (20210810.1956) --- English-Chinese translator"
        },
        {
          "id": "https://melpa.org/packages/bibtex-actions-20210810.1842.tar",
          "author": null,
          "description": "The bibtex-actions package has been updated to version 20210810.1842.",
          "link": "https://melpa.org/#/bibtex-actions",
          "publishedOn": "2021-08-10T18:42:00.000Z",
          "wordCount": 105,
          "title": "bibtex-actions (20210810.1842) --- Biblographic commands based on completing-read"
        },
        {
          "id": "https://melpa.org/packages/standoff-mode-20210810.1814.tar",
          "author": null,
          "description": "The standoff-mode package has been updated to version 20210810.1814.",
          "link": "https://melpa.org/#/standoff-mode",
          "publishedOn": "2021-08-10T18:14:00.000Z",
          "wordCount": 105,
          "title": "standoff-mode (20210810.1814) --- Create stand-off markup, also called external markup."
        },
        {
          "id": "https://melpa.org/packages/spdx-20210810.1723.tar",
          "author": null,
          "description": "The spdx package has been updated to version 20210810.1723.",
          "link": "https://melpa.org/#/spdx",
          "publishedOn": "2021-08-10T17:23:00.000Z",
          "wordCount": 105,
          "title": "spdx (20210810.1723) --- Insert SPDX license and copyright headers"
        },
        {
          "id": "https://melpa.org/packages/apdl-mode-20210810.1718.tar",
          "author": null,
          "description": "The apdl-mode package has been updated to version 20210810.1718.",
          "link": "https://melpa.org/#/apdl-mode",
          "publishedOn": "2021-08-10T17:18:00.000Z",
          "wordCount": 105,
          "title": "apdl-mode (20210810.1718) --- Major mode for the APDL programming language."
        },
        {
          "id": "https://melpa.org/packages/evil-collection-20210810.1715.tar",
          "author": null,
          "description": "The evil-collection package has been updated to version 20210810.1715.",
          "link": "https://melpa.org/#/evil-collection",
          "publishedOn": "2021-08-10T17:15:00.000Z",
          "wordCount": 105,
          "title": "evil-collection (20210810.1715) --- A set of keybindings for Evil mode"
        },
        {
          "id": "https://melpa.org/packages/org-index-20210810.1629.el",
          "author": null,
          "description": "The org-index package has been updated to version 20210810.1629.",
          "link": "https://melpa.org/#/org-index",
          "publishedOn": "2021-08-10T16:29:00.000Z",
          "wordCount": 105,
          "title": "org-index (20210810.1629) --- A personal adaptive index for org"
        },
        {
          "id": "https://melpa.org/packages/org-roam-bibtex-20210810.1626.tar",
          "author": null,
          "description": "The org-roam-bibtex package has been updated to version 20210810.1626.",
          "link": "https://melpa.org/#/org-roam-bibtex",
          "publishedOn": "2021-08-10T16:26:00.000Z",
          "wordCount": 105,
          "title": "org-roam-bibtex (20210810.1626) --- Org Roam meets BibTeX"
        },
        {
          "id": "https://melpa.org/packages/list-environment-20210810.1612.el",
          "author": null,
          "description": "The list-environment package has been updated to version 20210810.1612.",
          "link": "https://melpa.org/#/list-environment",
          "publishedOn": "2021-08-10T16:12:00.000Z",
          "wordCount": 105,
          "title": "list-environment (20210810.1612) --- A tabulated process environment editor"
        },
        {
          "id": "https://melpa.org/packages/org-re-reveal-20210810.1542.tar",
          "author": null,
          "description": "The org-re-reveal package has been updated to version 20210810.1542.",
          "link": "https://melpa.org/#/org-re-reveal",
          "publishedOn": "2021-08-10T15:42:00.000Z",
          "wordCount": 105,
          "title": "org-re-reveal (20210810.1542) --- Org export to reveal.js presentations"
        },
        {
          "id": "https://melpa.org/packages/citeproc-20210810.1511.tar",
          "author": null,
          "description": "The citeproc package has been updated to version 20210810.1511.",
          "link": "https://melpa.org/#/citeproc",
          "publishedOn": "2021-08-10T15:11:00.000Z",
          "wordCount": 105,
          "title": "citeproc (20210810.1511) --- A CSL 1.0.1 Citation Processor"
        },
        {
          "id": "https://melpa.org/packages/flymake-proselint-20210810.1449.el",
          "author": null,
          "description": "The flymake-proselint package has been updated to version 20210810.1449.",
          "link": "https://melpa.org/#/flymake-proselint",
          "publishedOn": "2021-08-10T14:49:00.000Z",
          "wordCount": 105,
          "title": "flymake-proselint (20210810.1449) --- Flymake backend for proselint"
        },
        {
          "id": "https://melpa.org/packages/crux-20210810.1448.el",
          "author": null,
          "description": "The crux package has been updated to version 20210810.1448.",
          "link": "https://melpa.org/#/crux",
          "publishedOn": "2021-08-10T14:48:00.000Z",
          "wordCount": 105,
          "title": "crux (20210810.1448) --- A Collection of Ridiculously Useful eXtensions"
        },
        {
          "id": "https://melpa.org/packages/find-file-in-project-20210810.1410.el",
          "author": null,
          "description": "The find-file-in-project package has been updated to version 20210810.1410.",
          "link": "https://melpa.org/#/find-file-in-project",
          "publishedOn": "2021-08-10T14:10:00.000Z",
          "wordCount": 105,
          "title": "find-file-in-project (20210810.1410) --- Find file/directory and review Diff/Patch/Commit efficiently everywhere"
        },
        {
          "id": "https://melpa.org/packages/consult-20210810.1324.tar",
          "author": null,
          "description": "The consult package has been updated to version 20210810.1324.",
          "link": "https://melpa.org/#/consult",
          "publishedOn": "2021-08-10T13:24:00.000Z",
          "wordCount": 105,
          "title": "consult (20210810.1324) --- Consulting completing-read"
        },
        {
          "id": "https://melpa.org/packages/projectile-rails-20210810.1303.el",
          "author": null,
          "description": "The projectile-rails package has been updated to version 20210810.1303.",
          "link": "https://melpa.org/#/projectile-rails",
          "publishedOn": "2021-08-10T13:03:00.000Z",
          "wordCount": 105,
          "title": "projectile-rails (20210810.1303) --- Minor mode for Rails projects based on projectile-mode"
        },
        {
          "id": "https://melpa.org/packages/projectile-20210810.1011.el",
          "author": null,
          "description": "The projectile package has been updated to version 20210810.1011.",
          "link": "https://melpa.org/#/projectile",
          "publishedOn": "2021-08-10T10:11:00.000Z",
          "wordCount": 105,
          "title": "projectile (20210810.1011) --- Manage and navigate projects in Emacs easily"
        },
        {
          "id": "https://melpa.org/packages/evil-20210810.844.tar",
          "author": null,
          "description": "The evil package has been updated to version 20210810.844.",
          "link": "https://melpa.org/#/evil",
          "publishedOn": "2021-08-10T08:44:00.000Z",
          "wordCount": 105,
          "title": "evil (20210810.844) --- Extensible Vi layer for Emacs."
        },
        {
          "id": "https://melpa.org/packages/affe-20210810.823.tar",
          "author": null,
          "description": "The affe package has been updated to version 20210810.823.",
          "link": "https://melpa.org/#/affe",
          "publishedOn": "2021-08-10T08:23:00.000Z",
          "wordCount": 105,
          "title": "affe (20210810.823) --- Asynchronous Fuzzy Finder for Emacs"
        },
        {
          "id": "https://melpa.org/packages/sniem-20210810.804.tar",
          "author": null,
          "description": "The sniem package has been updated to version 20210810.804.",
          "link": "https://melpa.org/#/sniem",
          "publishedOn": "2021-08-10T08:04:00.000Z",
          "wordCount": 105,
          "title": "sniem (20210810.804) --- Simple united editing method"
        },
        {
          "id": "https://melpa.org/packages/magit-20210810.800.tar",
          "author": null,
          "description": "The magit package has been updated to version 20210810.800.",
          "link": "https://melpa.org/#/magit",
          "publishedOn": "2021-08-10T08:00:00.000Z",
          "wordCount": 105,
          "title": "magit (20210810.800) --- A Git porcelain inside Emacs."
        },
        {
          "id": "https://melpa.org/packages/swift-mode-20210810.757.tar",
          "author": null,
          "description": "The swift-mode package has been updated to version 20210810.757.",
          "link": "https://melpa.org/#/swift-mode",
          "publishedOn": "2021-08-10T07:57:00.000Z",
          "wordCount": 105,
          "title": "swift-mode (20210810.757) --- Major-mode for Apple's Swift programming language"
        },
        {
          "id": "https://melpa.org/packages/org-roam-20210810.602.tar",
          "author": null,
          "description": "The org-roam package has been updated to version 20210810.602.",
          "link": "https://melpa.org/#/org-roam",
          "publishedOn": "2021-08-10T06:02:00.000Z",
          "wordCount": 105,
          "title": "org-roam (20210810.602) --- A database abstraction layer for Org-mode"
        },
        {
          "id": "https://melpa.org/packages/loopy-dash-20210810.307.el",
          "author": null,
          "description": "The loopy-dash package has been updated to version 20210810.307.",
          "link": "https://melpa.org/#/loopy-dash",
          "publishedOn": "2021-08-10T03:07:00.000Z",
          "wordCount": 105,
          "title": "loopy-dash (20210810.307) --- Dash destructuring for `loopy'"
        },
        {
          "id": "https://melpa.org/packages/loopy-20210810.307.tar",
          "author": null,
          "description": "The loopy package has been updated to version 20210810.307.",
          "link": "https://melpa.org/#/loopy",
          "publishedOn": "2021-08-10T03:07:00.000Z",
          "wordCount": 105,
          "title": "loopy (20210810.307) --- A looping macro"
        },
        {
          "id": "https://melpa.org/packages/xah-fly-keys-20210810.227.el",
          "author": null,
          "description": "The xah-fly-keys package has been updated to version 20210810.227.",
          "link": "https://melpa.org/#/xah-fly-keys",
          "publishedOn": "2021-08-10T02:27:00.000Z",
          "wordCount": 105,
          "title": "xah-fly-keys (20210810.227) --- ergonomic modal keybinding minor mode."
        },
        {
          "id": "https://melpa.org/packages/syslog-mode-20210810.203.el",
          "author": null,
          "description": "The syslog-mode package has been updated to version 20210810.203.",
          "link": "https://melpa.org/#/syslog-mode",
          "publishedOn": "2021-08-10T02:03:00.000Z",
          "wordCount": 105,
          "title": "syslog-mode (20210810.203) --- Major-mode for viewing log files"
        },
        {
          "id": "https://melpa.org/packages/git-link-20210810.120.el",
          "author": null,
          "description": "The git-link package has been updated to version 20210810.120.",
          "link": "https://melpa.org/#/git-link",
          "publishedOn": "2021-08-10T01:20:00.000Z",
          "wordCount": 105,
          "title": "git-link (20210810.120) --- Get the GitHub/Bitbucket/GitLab URL for a buffer location"
        },
        {
          "id": "https://melpa.org/packages/meow-20210809.2347.tar",
          "author": null,
          "description": "The meow package has been updated to version 20210809.2347.",
          "link": "https://melpa.org/#/meow",
          "publishedOn": "2021-08-09T23:47:00.000Z",
          "wordCount": 105,
          "title": "meow (20210809.2347) --- Modal Editing On Wheel"
        },
        {
          "id": "https://melpa.org/packages/verb-20210809.2140.tar",
          "author": null,
          "description": "The verb package has been updated to version 20210809.2140.",
          "link": "https://melpa.org/#/verb",
          "publishedOn": "2021-08-09T21:40:00.000Z",
          "wordCount": 105,
          "title": "verb (20210809.2140) --- Organize and send HTTP requests"
        },
        {
          "id": "https://melpa.org/packages/ein-20210809.2101.tar",
          "author": null,
          "description": "The ein package has been updated to version 20210809.2101.",
          "link": "https://melpa.org/#/ein",
          "publishedOn": "2021-08-09T21:01:00.000Z",
          "wordCount": 105,
          "title": "ein (20210809.2101) --- Emacs IPython Notebook"
        },
        {
          "id": "https://melpa.org/packages/parsebib-20210809.2049.el",
          "author": null,
          "description": "The parsebib package has been updated to version 20210809.2049.",
          "link": "https://melpa.org/#/parsebib",
          "publishedOn": "2021-08-09T20:49:00.000Z",
          "wordCount": 105,
          "title": "parsebib (20210809.2049) --- A library for parsing bib files"
        },
        {
          "id": "https://melpa.org/packages/emms-20210809.2032.tar",
          "author": null,
          "description": "The emms package has been updated to version 20210809.2032.",
          "link": "https://melpa.org/#/emms",
          "publishedOn": "2021-08-09T20:32:00.000Z",
          "wordCount": 105,
          "title": "emms (20210809.2032) --- The Emacs Multimedia System"
        },
        {
          "id": "https://melpa.org/packages/timu-spacegrey-theme-20210809.2028.el",
          "author": null,
          "description": "The timu-spacegrey-theme package has been updated to version 20210809.2028.",
          "link": "https://melpa.org/#/timu-spacegrey-theme",
          "publishedOn": "2021-08-09T20:28:00.000Z",
          "wordCount": 105,
          "title": "timu-spacegrey-theme (20210809.2028) --- Color theme inspired by the Spacegray theme in Sublime Text"
        },
        {
          "id": "https://melpa.org/packages/apropospriate-theme-20210809.1934.tar",
          "author": null,
          "description": "The apropospriate-theme package has been updated to version 20210809.1934.",
          "link": "https://melpa.org/#/apropospriate-theme",
          "publishedOn": "2021-08-09T19:34:00.000Z",
          "wordCount": 105,
          "title": "apropospriate-theme (20210809.1934) --- A colorful, low-contrast, light & dark theme set for Emacs with a fun name."
        },
        {
          "id": "https://melpa.org/packages/python-mode-20210809.1849.tar",
          "author": null,
          "description": "The python-mode package has been updated to version 20210809.1849.",
          "link": "https://melpa.org/#/python-mode",
          "publishedOn": "2021-08-09T18:49:00.000Z",
          "wordCount": 105,
          "title": "python-mode (20210809.1849) --- Python major mode"
        },
        {
          "id": "https://melpa.org/packages/org-evil-20210809.1724.tar",
          "author": null,
          "description": "The org-evil package has been updated to version 20210809.1724.",
          "link": "https://melpa.org/#/org-evil",
          "publishedOn": "2021-08-09T17:24:00.000Z",
          "wordCount": 105,
          "title": "org-evil (20210809.1724) --- Evil extensions for Org."
        },
        {
          "id": "https://melpa.org/packages/nix-mode-20210809.1724.tar",
          "author": null,
          "description": "The nix-mode package has been updated to version 20210809.1724.",
          "link": "https://melpa.org/#/nix-mode",
          "publishedOn": "2021-08-09T17:24:00.000Z",
          "wordCount": 105,
          "title": "nix-mode (20210809.1724) --- Major mode for editing .nix files"
        },
        {
          "id": "https://melpa.org/packages/frog-jump-buffer-20210809.1702.el",
          "author": null,
          "description": "The frog-jump-buffer package has been updated to version 20210809.1702.",
          "link": "https://melpa.org/#/frog-jump-buffer",
          "publishedOn": "2021-08-09T17:02:00.000Z",
          "wordCount": 105,
          "title": "frog-jump-buffer (20210809.1702) --- The fastest buffer-jumping Emacs lisp package around."
        },
        {
          "id": "https://melpa.org/packages/editorconfig-20210809.1523.tar",
          "author": null,
          "description": "The editorconfig package has been updated to version 20210809.1523.",
          "link": "https://melpa.org/#/editorconfig",
          "publishedOn": "2021-08-09T15:23:00.000Z",
          "wordCount": 105,
          "title": "editorconfig (20210809.1523) --- EditorConfig Emacs Plugin"
        },
        {
          "id": "https://melpa.org/packages/worf-20210809.1409.tar",
          "author": null,
          "description": "The worf package has been updated to version 20210809.1409.",
          "link": "https://melpa.org/#/worf",
          "publishedOn": "2021-08-09T14:09:00.000Z",
          "wordCount": 105,
          "title": "worf (20210809.1409) --- A warrior does not press so many keys! (in org-mode)"
        },
        {
          "id": "https://melpa.org/packages/orca-20210809.1401.el",
          "author": null,
          "description": "The orca package has been updated to version 20210809.1401.",
          "link": "https://melpa.org/#/orca",
          "publishedOn": "2021-08-09T14:01:00.000Z",
          "wordCount": 105,
          "title": "orca (20210809.1401) --- Org Capture"
        },
        {
          "id": "https://melpa.org/packages/company-20210809.1354.tar",
          "author": null,
          "description": "The company package has been updated to version 20210809.1354.",
          "link": "https://melpa.org/#/company",
          "publishedOn": "2021-08-09T13:54:00.000Z",
          "wordCount": 105,
          "title": "company (20210809.1354) --- Modular text completion framework"
        },
        {
          "id": "https://melpa.org/packages/ebib-20210809.1349.tar",
          "author": null,
          "description": "The ebib package has been updated to version 20210809.1349.",
          "link": "https://melpa.org/#/ebib",
          "publishedOn": "2021-08-09T13:49:00.000Z",
          "wordCount": 105,
          "title": "ebib (20210809.1349) --- a BibTeX database manager"
        },
        {
          "id": "https://melpa.org/packages/lua-mode-20210809.1320.tar",
          "author": null,
          "description": "The lua-mode package has been updated to version 20210809.1320.",
          "link": "https://melpa.org/#/lua-mode",
          "publishedOn": "2021-08-09T13:20:00.000Z",
          "wordCount": 105,
          "title": "lua-mode (20210809.1320) --- a major-mode for editing Lua scripts"
        },
        {
          "id": "https://melpa.org/packages/org-ref-20210809.1254.tar",
          "author": null,
          "description": "The org-ref package has been updated to version 20210809.1254.",
          "link": "https://melpa.org/#/org-ref",
          "publishedOn": "2021-08-09T12:54:00.000Z",
          "wordCount": 105,
          "title": "org-ref (20210809.1254) --- citations, cross-references and bibliographies in org-mode"
        },
        {
          "id": "https://melpa.org/packages/transient-20210809.1242.tar",
          "author": null,
          "description": "The transient package has been updated to version 20210809.1242.",
          "link": "https://melpa.org/#/transient",
          "publishedOn": "2021-08-09T12:42:00.000Z",
          "wordCount": 105,
          "title": "transient (20210809.1242) --- Transient commands"
        },
        {
          "id": "https://melpa.org/packages/tree-sitter-langs-20210809.1122.tar",
          "author": null,
          "description": "The tree-sitter-langs package has been updated to version 20210809.1122.",
          "link": "https://melpa.org/#/tree-sitter-langs",
          "publishedOn": "2021-08-09T11:22:00.000Z",
          "wordCount": 105,
          "title": "tree-sitter-langs (20210809.1122) --- Grammar bundle for tree-sitter"
        },
        {
          "id": "https://melpa.org/packages/org-link-beautify-20210809.1056.el",
          "author": null,
          "description": "The org-link-beautify package has been updated to version 20210809.1056.",
          "link": "https://melpa.org/#/org-link-beautify",
          "publishedOn": "2021-08-09T10:56:00.000Z",
          "wordCount": 105,
          "title": "org-link-beautify (20210809.1056) --- Beautify Org Links"
        },
        {
          "id": "https://melpa.org/packages/lispy-20210809.1001.tar",
          "author": null,
          "description": "The lispy package has been updated to version 20210809.1001.",
          "link": "https://melpa.org/#/lispy",
          "publishedOn": "2021-08-09T10:01:00.000Z",
          "wordCount": 105,
          "title": "lispy (20210809.1001) --- vi-like Paredit"
        },
        {
          "id": "https://melpa.org/packages/mu4e-column-faces-20210809.925.el",
          "author": null,
          "description": "The mu4e-column-faces package has been updated to version 20210809.925.",
          "link": "https://melpa.org/#/mu4e-column-faces",
          "publishedOn": "2021-08-09T09:25:00.000Z",
          "wordCount": 105,
          "title": "mu4e-column-faces (20210809.925) --- Faces for individual mu4e columns"
        },
        {
          "id": "https://melpa.org/packages/evil-colemak-basics-20210809.855.el",
          "author": null,
          "description": "The evil-colemak-basics package has been updated to version 20210809.855.",
          "link": "https://melpa.org/#/evil-colemak-basics",
          "publishedOn": "2021-08-09T08:55:00.000Z",
          "wordCount": 105,
          "title": "evil-colemak-basics (20210809.855) --- Basic Colemak key bindings for evil-mode"
        },
        {
          "id": "https://melpa.org/packages/agda2-mode-20210809.721.tar",
          "author": null,
          "description": "The agda2-mode package has been updated to version 20210809.721.",
          "link": "https://melpa.org/#/agda2-mode",
          "publishedOn": "2021-08-09T07:21:00.000Z",
          "wordCount": 105,
          "title": "agda2-mode (20210809.721) --- interactive development for Agda, a dependently typed functional programming language"
        },
        {
          "id": "https://melpa.org/packages/xah-elisp-mode-20210809.420.el",
          "author": null,
          "description": "The xah-elisp-mode package has been updated to version 20210809.420.",
          "link": "https://melpa.org/#/xah-elisp-mode",
          "publishedOn": "2021-08-09T04:20:00.000Z",
          "wordCount": 105,
          "title": "xah-elisp-mode (20210809.420) --- Major mode for editing emacs lisp."
        },
        {
          "id": "https://melpa.org/packages/kubernetes-20210809.303.tar",
          "author": null,
          "description": "The kubernetes package has been updated to version 20210809.303.",
          "link": "https://melpa.org/#/kubernetes",
          "publishedOn": "2021-08-09T03:03:00.000Z",
          "wordCount": 105,
          "title": "kubernetes (20210809.303) --- Magit-like porcelain for Kubernetes."
        },
        {
          "id": "https://melpa.org/packages/markdown-mode-20210809.240.el",
          "author": null,
          "description": "The markdown-mode package has been updated to version 20210809.240.",
          "link": "https://melpa.org/#/markdown-mode",
          "publishedOn": "2021-08-09T02:40:00.000Z",
          "wordCount": 105,
          "title": "markdown-mode (20210809.240) --- Major mode for Markdown-formatted text"
        },
        {
          "id": "https://melpa.org/packages/kiwix-20210809.118.tar",
          "author": null,
          "description": "The kiwix package has been updated to version 20210809.118.",
          "link": "https://melpa.org/#/kiwix",
          "publishedOn": "2021-08-09T01:18:00.000Z",
          "wordCount": 105,
          "title": "kiwix (20210809.118) --- Searching offline Wikipedia through Kiwix."
        },
        {
          "id": "https://melpa.org/packages/lsp-mode-20210808.2036.tar",
          "author": null,
          "description": "The lsp-mode package has been updated to version 20210808.2036.",
          "link": "https://melpa.org/#/lsp-mode",
          "publishedOn": "2021-08-08T20:36:00.000Z",
          "wordCount": 105,
          "title": "lsp-mode (20210808.2036) --- LSP mode"
        },
        {
          "id": "https://melpa.org/packages/rmsbolt-20210808.2012.tar",
          "author": null,
          "description": "The rmsbolt package has been updated to version 20210808.2012.",
          "link": "https://melpa.org/#/rmsbolt",
          "publishedOn": "2021-08-08T20:12:00.000Z",
          "wordCount": 105,
          "title": "rmsbolt (20210808.2012) --- A compiler output viewer"
        },
        {
          "id": "https://melpa.org/packages/glsl-mode-20210808.1945.el",
          "author": null,
          "description": "The glsl-mode package has been updated to version 20210808.1945.",
          "link": "https://melpa.org/#/glsl-mode",
          "publishedOn": "2021-08-08T19:45:00.000Z",
          "wordCount": 105,
          "title": "glsl-mode (20210808.1945) --- major mode for Open GLSL shader files"
        },
        {
          "id": "https://melpa.org/packages/lf-20210808.1921.el",
          "author": null,
          "description": "The lf package has been updated to version 20210808.1921.",
          "link": "https://melpa.org/#/lf",
          "publishedOn": "2021-08-08T19:21:00.000Z",
          "wordCount": 105,
          "title": "lf (20210808.1921) --- A Language Features library for Emacs Lisp"
        },
        {
          "id": "https://melpa.org/packages/yasnippet-snippets-20210808.1851.tar",
          "author": null,
          "description": "The yasnippet-snippets package has been updated to version 20210808.1851.",
          "link": "https://melpa.org/#/yasnippet-snippets",
          "publishedOn": "2021-08-08T18:51:00.000Z",
          "wordCount": 105,
          "title": "yasnippet-snippets (20210808.1851) --- Collection of yasnippet snippets"
        },
        {
          "id": "https://melpa.org/packages/solarized-theme-20210808.1829.tar",
          "author": null,
          "description": "The solarized-theme package has been updated to version 20210808.1829.",
          "link": "https://melpa.org/#/solarized-theme",
          "publishedOn": "2021-08-08T18:29:00.000Z",
          "wordCount": 105,
          "title": "solarized-theme (20210808.1829) --- The Solarized color theme"
        },
        {
          "id": "https://melpa.org/packages/php-mode-20210808.1745.tar",
          "author": null,
          "description": "The php-mode package has been updated to version 20210808.1745.",
          "link": "https://melpa.org/#/php-mode",
          "publishedOn": "2021-08-08T17:45:00.000Z",
          "wordCount": 105,
          "title": "php-mode (20210808.1745) --- Major mode for editing PHP code"
        },
        {
          "id": "https://melpa.org/packages/embark-20210808.1621.tar",
          "author": null,
          "description": "The embark package has been updated to version 20210808.1621.",
          "link": "https://melpa.org/#/embark",
          "publishedOn": "2021-08-08T16:21:00.000Z",
          "wordCount": 105,
          "title": "embark (20210808.1621) --- Conveniently act on minibuffer completions"
        },
        {
          "id": "https://melpa.org/packages/frameshot-20210808.1526.el",
          "author": null,
          "description": "The frameshot package has been updated to version 20210808.1526.",
          "link": "https://melpa.org/#/frameshot",
          "publishedOn": "2021-08-08T15:26:00.000Z",
          "wordCount": 105,
          "title": "frameshot (20210808.1526) --- Take screenshots of a frame"
        },
        {
          "id": "https://melpa.org/packages/evil-numbers-20210808.1424.el",
          "author": null,
          "description": "The evil-numbers package has been updated to version 20210808.1424.",
          "link": "https://melpa.org/#/evil-numbers",
          "publishedOn": "2021-08-08T14:24:00.000Z",
          "wordCount": 105,
          "title": "evil-numbers (20210808.1424) --- Increment/decrement numbers like in VIM"
        },
        {
          "id": "https://melpa.org/packages/lsp-ltex-20210808.1349.el",
          "author": null,
          "description": "The lsp-ltex package has been updated to version 20210808.1349.",
          "link": "https://melpa.org/#/lsp-ltex",
          "publishedOn": "2021-08-08T13:49:00.000Z",
          "wordCount": 105,
          "title": "lsp-ltex (20210808.1349) --- LSP Clients for LTEX"
        },
        {
          "id": "https://melpa.org/packages/subsonic-20210808.1328.el",
          "author": null,
          "description": "The subsonic package has been updated to version 20210808.1328.",
          "link": "https://melpa.org/#/subsonic",
          "publishedOn": "2021-08-08T13:28:00.000Z",
          "wordCount": 105,
          "title": "subsonic (20210808.1328) --- Browse and play music from subsonic servers with mpv"
        },
        {
          "id": "https://melpa.org/packages/yaml-mode-20210808.1122.el",
          "author": null,
          "description": "The yaml-mode package has been updated to version 20210808.1122.",
          "link": "https://melpa.org/#/yaml-mode",
          "publishedOn": "2021-08-08T11:22:00.000Z",
          "wordCount": 105,
          "title": "yaml-mode (20210808.1122) --- Major mode for editing YAML files"
        },
        {
          "id": "https://melpa.org/packages/switch-window-20210808.742.tar",
          "author": null,
          "description": "The switch-window package has been updated to version 20210808.742.",
          "link": "https://melpa.org/#/switch-window",
          "publishedOn": "2021-08-08T07:42:00.000Z",
          "wordCount": 105,
          "title": "switch-window (20210808.742) --- A *visual* way to switch window"
        },
        {
          "id": "https://melpa.org/packages/geiser-20210808.16.tar",
          "author": null,
          "description": "The geiser package has been updated to version 20210808.16.",
          "link": "https://melpa.org/#/geiser",
          "publishedOn": "2021-08-08T00:16:00.000Z",
          "wordCount": 105,
          "title": "geiser (20210808.16) --- GNU Emacs and Scheme talk to each other"
        },
        {
          "id": "https://melpa.org/packages/graphql-doc-20210808.8.el",
          "author": null,
          "description": "The graphql-doc package has been updated to version 20210808.8.",
          "link": "https://melpa.org/#/graphql-doc",
          "publishedOn": "2021-08-08T00:08:00.000Z",
          "wordCount": 105,
          "title": "graphql-doc (20210808.8) --- GraphQL Documentation Explorer"
        },
        {
          "id": "https://melpa.org/packages/julia-snail-20210807.2030.tar",
          "author": null,
          "description": "The julia-snail package has been updated to version 20210807.2030.",
          "link": "https://melpa.org/#/julia-snail",
          "publishedOn": "2021-08-07T20:30:00.000Z",
          "wordCount": 105,
          "title": "julia-snail (20210807.2030) --- Julia Snail"
        },
        {
          "id": "https://melpa.org/packages/embark-consult-20210807.1720.el",
          "author": null,
          "description": "The embark-consult package has been updated to version 20210807.1720.",
          "link": "https://melpa.org/#/embark-consult",
          "publishedOn": "2021-08-07T17:20:00.000Z",
          "wordCount": 105,
          "title": "embark-consult (20210807.1720) --- Consult integration for Embark"
        },
        {
          "id": "https://melpa.org/packages/org-anki-20210807.1654.el",
          "author": null,
          "description": "The org-anki package has been updated to version 20210807.1654.",
          "link": "https://melpa.org/#/org-anki",
          "publishedOn": "2021-08-07T16:54:00.000Z",
          "wordCount": 105,
          "title": "org-anki (20210807.1654) --- Synchronize org-mode entries to Anki"
        },
        {
          "id": "https://melpa.org/packages/consult-recoll-20210807.1613.el",
          "author": null,
          "description": "The consult-recoll package has been updated to version 20210807.1613.",
          "link": "https://melpa.org/#/consult-recoll",
          "publishedOn": "2021-08-07T16:13:00.000Z",
          "wordCount": 105,
          "title": "consult-recoll (20210807.1613) --- Recoll queries using consult"
        },
        {
          "id": "https://melpa.org/packages/consult-notmuch-20210807.1608.el",
          "author": null,
          "description": "The consult-notmuch package has been updated to version 20210807.1608.",
          "link": "https://melpa.org/#/consult-notmuch",
          "publishedOn": "2021-08-07T16:08:00.000Z",
          "wordCount": 105,
          "title": "consult-notmuch (20210807.1608) --- Notmuch search using consult"
        },
        {
          "id": "https://melpa.org/packages/reazon-20210807.1604.tar",
          "author": null,
          "description": "The reazon package has been updated to version 20210807.1604.",
          "link": "https://melpa.org/#/reazon",
          "publishedOn": "2021-08-07T16:04:00.000Z",
          "wordCount": 105,
          "title": "reazon (20210807.1604) --- miniKanren for Emacs"
        },
        {
          "id": "https://melpa.org/packages/format-all-20210807.1513.el",
          "author": null,
          "description": "The format-all package has been updated to version 20210807.1513.",
          "link": "https://melpa.org/#/format-all",
          "publishedOn": "2021-08-07T15:13:00.000Z",
          "wordCount": 105,
          "title": "format-all (20210807.1513) --- Auto-format C, C++, JS, Python, Ruby and 50 other languages"
        },
        {
          "id": "https://melpa.org/packages/fsharp-mode-20210807.1417.tar",
          "author": null,
          "description": "The fsharp-mode package has been updated to version 20210807.1417.",
          "link": "https://melpa.org/#/fsharp-mode",
          "publishedOn": "2021-08-07T14:17:00.000Z",
          "wordCount": 105,
          "title": "fsharp-mode (20210807.1417) --- Support for the F# programming language"
        },
        {
          "id": "https://melpa.org/packages/doom-modeline-20210807.922.tar",
          "author": null,
          "description": "The doom-modeline package has been updated to version 20210807.922.",
          "link": "https://melpa.org/#/doom-modeline",
          "publishedOn": "2021-08-07T09:22:00.000Z",
          "wordCount": 105,
          "title": "doom-modeline (20210807.922) --- A minimal and modern mode-line"
        },
        {
          "id": "https://melpa.org/packages/fountain-mode-20210807.106.tar",
          "author": null,
          "description": "The fountain-mode package has been updated to version 20210807.106.",
          "link": "https://melpa.org/#/fountain-mode",
          "publishedOn": "2021-08-07T01:06:00.000Z",
          "wordCount": 105,
          "title": "fountain-mode (20210807.106) --- Major mode for screenwriting in Fountain markup"
        },
        {
          "id": "https://melpa.org/packages/hybrid-reverse-theme-20210806.1955.el",
          "author": null,
          "description": "The hybrid-reverse-theme package has been updated to version 20210806.1955.",
          "link": "https://melpa.org/#/hybrid-reverse-theme",
          "publishedOn": "2021-08-06T19:55:00.000Z",
          "wordCount": 105,
          "title": "hybrid-reverse-theme (20210806.1955) --- Emacs theme with material color scheme"
        },
        {
          "id": "https://melpa.org/packages/lsp-java-20210806.1842.tar",
          "author": null,
          "description": "The lsp-java package has been updated to version 20210806.1842.",
          "link": "https://melpa.org/#/lsp-java",
          "publishedOn": "2021-08-06T18:42:00.000Z",
          "wordCount": 105,
          "title": "lsp-java (20210806.1842) --- Java support for lsp-mode"
        },
        {
          "id": "https://melpa.org/packages/magit-section-20210806.1607.tar",
          "author": null,
          "description": "The magit-section package has been updated to version 20210806.1607.",
          "link": "https://melpa.org/#/magit-section",
          "publishedOn": "2021-08-06T16:07:00.000Z",
          "wordCount": 105,
          "title": "magit-section (20210806.1607) --- Sections for read-only buffers"
        },
        {
          "id": "https://melpa.org/packages/magit-libgit-20210806.1607.el",
          "author": null,
          "description": "The magit-libgit package has been updated to version 20210806.1607.",
          "link": "https://melpa.org/#/magit-libgit",
          "publishedOn": "2021-08-06T16:07:00.000Z",
          "wordCount": 105,
          "title": "magit-libgit (20210806.1607) --- Libgit functionality"
        },
        {
          "id": "https://melpa.org/packages/git-commit-20210806.1607.tar",
          "author": null,
          "description": "The git-commit package has been updated to version 20210806.1607.",
          "link": "https://melpa.org/#/git-commit",
          "publishedOn": "2021-08-06T16:07:00.000Z",
          "wordCount": 105,
          "title": "git-commit (20210806.1607) --- Edit Git commit messages"
        },
        {
          "id": "https://melpa.org/packages/orderless-20210806.1538.tar",
          "author": null,
          "description": "The orderless package has been updated to version 20210806.1538.",
          "link": "https://melpa.org/#/orderless",
          "publishedOn": "2021-08-06T15:38:00.000Z",
          "wordCount": 105,
          "title": "orderless (20210806.1538) --- Completion style for matching regexps in any order"
        },
        {
          "id": "https://melpa.org/packages/forge-20210806.1321.tar",
          "author": null,
          "description": "The forge package has been updated to version 20210806.1321.",
          "link": "https://melpa.org/#/forge",
          "publishedOn": "2021-08-06T13:21:00.000Z",
          "wordCount": 105,
          "title": "forge (20210806.1321) --- Access Git forges from Magit."
        },
        {
          "id": "https://melpa.org/packages/epkg-20210806.1315.tar",
          "author": null,
          "description": "The epkg package has been updated to version 20210806.1315.",
          "link": "https://melpa.org/#/epkg",
          "publishedOn": "2021-08-06T13:15:00.000Z",
          "wordCount": 105,
          "title": "epkg (20210806.1315) --- browse the Emacsmirror package database"
        },
        {
          "id": "https://melpa.org/packages/picpocket-20210806.1135.el",
          "author": null,
          "description": "The picpocket package has been updated to version 20210806.1135.",
          "link": "https://melpa.org/#/picpocket",
          "publishedOn": "2021-08-06T11:35:00.000Z",
          "wordCount": 105,
          "title": "picpocket (20210806.1135) --- Image viewer"
        },
        {
          "id": "https://melpa.org/packages/treemacs-20210806.1106.tar",
          "author": null,
          "description": "The treemacs package has been updated to version 20210806.1106.",
          "link": "https://melpa.org/#/treemacs",
          "publishedOn": "2021-08-06T11:06:00.000Z",
          "wordCount": 105,
          "title": "treemacs (20210806.1106) --- A tree style file explorer package"
        },
        {
          "id": "https://melpa.org/packages/simple-paren-20210806.1022.el",
          "author": null,
          "description": "The simple-paren package has been updated to version 20210806.1022.",
          "link": "https://melpa.org/#/simple-paren",
          "publishedOn": "2021-08-06T10:22:00.000Z",
          "wordCount": 105,
          "title": "simple-paren (20210806.1022) --- Non-electrical insert paired delimiter, wrap"
        },
        {
          "id": "https://melpa.org/packages/dired-rsync-20210806.850.tar",
          "author": null,
          "description": "The dired-rsync package has been updated to version 20210806.850.",
          "link": "https://melpa.org/#/dired-rsync",
          "publishedOn": "2021-08-06T08:50:00.000Z",
          "wordCount": 105,
          "title": "dired-rsync (20210806.850) --- Allow rsync from dired buffers"
        },
        {
          "id": "https://melpa.org/packages/olivetti-20210806.355.el",
          "author": null,
          "description": "The olivetti package has been updated to version 20210806.355.",
          "link": "https://melpa.org/#/olivetti",
          "publishedOn": "2021-08-06T03:55:00.000Z",
          "wordCount": 105,
          "title": "olivetti (20210806.355) --- Minor mode for a nice writing environment"
        },
        {
          "id": "https://melpa.org/packages/ace-pinyin-20210806.316.el",
          "author": null,
          "description": "The ace-pinyin package has been updated to version 20210806.316.",
          "link": "https://melpa.org/#/ace-pinyin",
          "publishedOn": "2021-08-06T03:16:00.000Z",
          "wordCount": 105,
          "title": "ace-pinyin (20210806.316) --- Jump to Chinese characters using avy or ace-jump-mode"
        },
        {
          "id": "https://melpa.org/packages/org-special-block-extras-20210806.154.el",
          "author": null,
          "description": "The org-special-block-extras package has been updated to version 20210806.154.",
          "link": "https://melpa.org/#/org-special-block-extras",
          "publishedOn": "2021-08-06T01:54:00.000Z",
          "wordCount": 105,
          "title": "org-special-block-extras (20210806.154) --- 30 new custom blocks & 34 link types for Org-mode"
        },
        {
          "id": "https://melpa.org/packages/w3m-20210805.2339.tar",
          "author": null,
          "description": "The w3m package has been updated to version 20210805.2339.",
          "link": "https://melpa.org/#/w3m",
          "publishedOn": "2021-08-05T23:39:00.000Z",
          "wordCount": 105,
          "title": "w3m (20210805.2339) --- an Emacs interface to w3m"
        },
        {
          "id": "https://melpa.org/packages/org-gcal-20210805.2225.tar",
          "author": null,
          "description": "The org-gcal package has been updated to version 20210805.2225.",
          "link": "https://melpa.org/#/org-gcal",
          "publishedOn": "2021-08-05T22:25:00.000Z",
          "wordCount": 105,
          "title": "org-gcal (20210805.2225) --- Org sync with Google Calendar"
        },
        {
          "id": "https://melpa.org/packages/xah-find-20210805.2124.el",
          "author": null,
          "description": "The xah-find package has been updated to version 20210805.2124.",
          "link": "https://melpa.org/#/xah-find",
          "publishedOn": "2021-08-05T21:24:00.000Z",
          "wordCount": 105,
          "title": "xah-find (20210805.2124) --- find replace in pure emacs lisp. Purpose similar to grep/sed."
        },
        {
          "id": "https://melpa.org/packages/webpaste-20210805.1931.el",
          "author": null,
          "description": "The webpaste package has been updated to version 20210805.1931.",
          "link": "https://melpa.org/#/webpaste",
          "publishedOn": "2021-08-05T19:31:00.000Z",
          "wordCount": 105,
          "title": "webpaste (20210805.1931) --- Paste to pastebin-like services"
        },
        {
          "id": "https://melpa.org/packages/rustic-20210805.1755.tar",
          "author": null,
          "description": "The rustic package has been updated to version 20210805.1755.",
          "link": "https://melpa.org/#/rustic",
          "publishedOn": "2021-08-05T17:55:00.000Z",
          "wordCount": 105,
          "title": "rustic (20210805.1755) --- Rust development environment"
        },
        {
          "id": "https://melpa.org/packages/citre-20210805.1541.tar",
          "author": null,
          "description": "The citre package has been updated to version 20210805.1541.",
          "link": "https://melpa.org/#/citre",
          "publishedOn": "2021-08-05T15:41:00.000Z",
          "wordCount": 105,
          "title": "citre (20210805.1541) --- Ctags IDE on the True Editor"
        },
        {
          "id": "https://melpa.org/packages/pcmpl-args-20210805.1537.el",
          "author": null,
          "description": "The pcmpl-args package has been updated to version 20210805.1537.",
          "link": "https://melpa.org/#/pcmpl-args",
          "publishedOn": "2021-08-05T15:37:00.000Z",
          "wordCount": 105,
          "title": "pcmpl-args (20210805.1537) --- Enhanced shell command completion"
        },
        {
          "id": "https://melpa.org/packages/elfeed-score-20210805.1535.tar",
          "author": null,
          "description": "The elfeed-score package has been updated to version 20210805.1535.",
          "link": "https://melpa.org/#/elfeed-score",
          "publishedOn": "2021-08-05T15:35:00.000Z",
          "wordCount": 105,
          "title": "elfeed-score (20210805.1535) --- Gnus-style scoring for Elfeed"
        },
        {
          "id": "https://melpa.org/packages/vline-20210805.1528.el",
          "author": null,
          "description": "The vline package has been updated to version 20210805.1528.",
          "link": "https://melpa.org/#/vline",
          "publishedOn": "2021-08-05T15:28:00.000Z",
          "wordCount": 105,
          "title": "vline (20210805.1528) --- Column highlighting (vertical line displaying) mode"
        },
        {
          "id": "https://melpa.org/packages/lsp-metals-20210805.1526.tar",
          "author": null,
          "description": "The lsp-metals package has been updated to version 20210805.1526.",
          "link": "https://melpa.org/#/lsp-metals",
          "publishedOn": "2021-08-05T15:26:00.000Z",
          "wordCount": 105,
          "title": "lsp-metals (20210805.1526) --- Scala Client settings"
        },
        {
          "id": "https://melpa.org/packages/base16-theme-20210805.1401.tar",
          "author": null,
          "description": "The base16-theme package has been updated to version 20210805.1401.",
          "link": "https://melpa.org/#/base16-theme",
          "publishedOn": "2021-08-05T14:01:00.000Z",
          "wordCount": 105,
          "title": "base16-theme (20210805.1401) --- Collection of themes built on combinations of 16 base colors"
        },
        {
          "id": "https://melpa.org/packages/auto-rename-tag-20210805.1344.el",
          "author": null,
          "description": "The auto-rename-tag package has been updated to version 20210805.1344.",
          "link": "https://melpa.org/#/auto-rename-tag",
          "publishedOn": "2021-08-05T13:44:00.000Z",
          "wordCount": 105,
          "title": "auto-rename-tag (20210805.1344) --- Automatically rename paired HTML/XML tag"
        },
        {
          "id": "https://melpa.org/packages/notmuch-20210805.1158.tar",
          "author": null,
          "description": "The notmuch package has been updated to version 20210805.1158.",
          "link": "https://melpa.org/#/notmuch",
          "publishedOn": "2021-08-05T11:58:00.000Z",
          "wordCount": 105,
          "title": "notmuch (20210805.1158) --- run notmuch within emacs"
        },
        {
          "id": "https://melpa.org/packages/iedit-20210805.723.tar",
          "author": null,
          "description": "The iedit package has been updated to version 20210805.723.",
          "link": "https://melpa.org/#/iedit",
          "publishedOn": "2021-08-05T07:23:00.000Z",
          "wordCount": 105,
          "title": "iedit (20210805.723) --- Edit multiple regions in the same way simultaneously."
        },
        {
          "id": "https://melpa.org/packages/rutils-20210805.608.tar",
          "author": null,
          "description": "The rutils package has been updated to version 20210805.608.",
          "link": "https://melpa.org/#/rutils",
          "publishedOn": "2021-08-05T06:08:00.000Z",
          "wordCount": 105,
          "title": "rutils (20210805.608) --- R utilities with transient"
        },
        {
          "id": "https://melpa.org/packages/xah-css-mode-20210805.445.el",
          "author": null,
          "description": "The xah-css-mode package has been updated to version 20210805.445.",
          "link": "https://melpa.org/#/xah-css-mode",
          "publishedOn": "2021-08-05T04:45:00.000Z",
          "wordCount": 105,
          "title": "xah-css-mode (20210805.445) --- Major mode for editing CSS code."
        },
        {
          "id": "https://melpa.org/packages/org-jira-20210804.2307.tar",
          "author": null,
          "description": "The org-jira package has been updated to version 20210804.2307.",
          "link": "https://melpa.org/#/org-jira",
          "publishedOn": "2021-08-04T23:07:00.000Z",
          "wordCount": 105,
          "title": "org-jira (20210804.2307) --- Syncing between Jira and Org-mode."
        },
        {
          "id": "https://melpa.org/packages/tango-plus-theme-20210804.1943.el",
          "author": null,
          "description": "The tango-plus-theme package has been updated to version 20210804.1943.",
          "link": "https://melpa.org/#/tango-plus-theme",
          "publishedOn": "2021-08-04T19:43:00.000Z",
          "wordCount": 105,
          "title": "tango-plus-theme (20210804.1943) --- A color theme based on the tango palette"
        },
        {
          "id": "https://melpa.org/packages/telega-20210804.1516.tar",
          "author": null,
          "description": "The telega package has been updated to version 20210804.1516.",
          "link": "https://melpa.org/#/telega",
          "publishedOn": "2021-08-04T15:16:00.000Z",
          "wordCount": 105,
          "title": "telega (20210804.1516) --- Telegram client (unofficial)"
        },
        {
          "id": "https://melpa.org/packages/modus-themes-20210804.1453.tar",
          "author": null,
          "description": "The modus-themes package has been updated to version 20210804.1453.",
          "link": "https://melpa.org/#/modus-themes",
          "publishedOn": "2021-08-04T14:53:00.000Z",
          "wordCount": 105,
          "title": "modus-themes (20210804.1453) --- Highly accessible themes (WCAG AAA)"
        },
        {
          "id": "https://melpa.org/packages/bazel-20210804.1431.el",
          "author": null,
          "description": "The bazel package has been updated to version 20210804.1431.",
          "link": "https://melpa.org/#/bazel",
          "publishedOn": "2021-08-04T14:31:00.000Z",
          "wordCount": 105,
          "title": "bazel (20210804.1431) --- Bazel support for Emacs"
        },
        {
          "id": "https://melpa.org/packages/docker-20210804.1308.tar",
          "author": null,
          "description": "The docker package has been updated to version 20210804.1308.",
          "link": "https://melpa.org/#/docker",
          "publishedOn": "2021-08-04T13:08:00.000Z",
          "wordCount": 105,
          "title": "docker (20210804.1308) --- Emacs interface to Docker"
        },
        {
          "id": "https://melpa.org/packages/helm-core-20210804.1141.tar",
          "author": null,
          "description": "The helm-core package has been updated to version 20210804.1141.",
          "link": "https://melpa.org/#/helm-core",
          "publishedOn": "2021-08-04T11:41:00.000Z",
          "wordCount": 105,
          "title": "helm-core (20210804.1141) --- Development files for Helm"
        },
        {
          "id": "https://melpa.org/packages/all-the-icons-ivy-rich-20210804.904.el",
          "author": null,
          "description": "The all-the-icons-ivy-rich package has been updated to version 20210804.904.",
          "link": "https://melpa.org/#/all-the-icons-ivy-rich",
          "publishedOn": "2021-08-04T09:04:00.000Z",
          "wordCount": 105,
          "title": "all-the-icons-ivy-rich (20210804.904) --- Better experience with icons for ivy"
        },
        {
          "id": "https://melpa.org/packages/erc-matterircd-20210804.504.el",
          "author": null,
          "description": "The erc-matterircd package has been updated to version 20210804.504.",
          "link": "https://melpa.org/#/erc-matterircd",
          "publishedOn": "2021-08-04T05:04:00.000Z",
          "wordCount": 105,
          "title": "erc-matterircd (20210804.504) --- Integrate matterircd with ERC"
        },
        {
          "id": "https://melpa.org/packages/cdlatex-20210804.452.el",
          "author": null,
          "description": "The cdlatex package has been updated to version 20210804.452.",
          "link": "https://melpa.org/#/cdlatex",
          "publishedOn": "2021-08-04T04:52:00.000Z",
          "wordCount": 105,
          "title": "cdlatex (20210804.452) --- Fast input methods for LaTeX environments and math"
        },
        {
          "id": "https://melpa.org/packages/prism-20210804.417.el",
          "author": null,
          "description": "The prism package has been updated to version 20210804.417.",
          "link": "https://melpa.org/#/prism",
          "publishedOn": "2021-08-04T04:17:00.000Z",
          "wordCount": 105,
          "title": "prism (20210804.417) --- Customizable, depth-based syntax coloring"
        },
        {
          "id": "https://melpa.org/packages/vterm-20210804.405.tar",
          "author": null,
          "description": "The vterm package has been updated to version 20210804.405.",
          "link": "https://melpa.org/#/vterm",
          "publishedOn": "2021-08-04T04:05:00.000Z",
          "wordCount": 105,
          "title": "vterm (20210804.405) --- Fully-featured terminal emulator"
        },
        {
          "id": "https://melpa.org/packages/zetteldeft-20210803.1751.tar",
          "author": null,
          "description": "The zetteldeft package has been updated to version 20210803.1751.",
          "link": "https://melpa.org/#/zetteldeft",
          "publishedOn": "2021-08-03T17:51:00.000Z",
          "wordCount": 105,
          "title": "zetteldeft (20210803.1751) --- Turn deft into a zettelkasten system"
        },
        {
          "id": "https://melpa.org/packages/futhark-mode-20210803.1401.tar",
          "author": null,
          "description": "The futhark-mode package has been updated to version 20210803.1401.",
          "link": "https://melpa.org/#/futhark-mode",
          "publishedOn": "2021-08-03T14:01:00.000Z",
          "wordCount": 105,
          "title": "futhark-mode (20210803.1401) --- major mode for editing Futhark source files"
        },
        {
          "id": "https://melpa.org/packages/marginalia-20210803.1251.el",
          "author": null,
          "description": "The marginalia package has been updated to version 20210803.1251.",
          "link": "https://melpa.org/#/marginalia",
          "publishedOn": "2021-08-03T12:51:00.000Z",
          "wordCount": 105,
          "title": "marginalia (20210803.1251) --- Enrich existing commands with completion annotations"
        },
        {
          "id": "https://melpa.org/packages/rainbow-fart-20210803.922.tar",
          "author": null,
          "description": "The rainbow-fart package has been updated to version 20210803.922.",
          "link": "https://melpa.org/#/rainbow-fart",
          "publishedOn": "2021-08-03T09:22:00.000Z",
          "wordCount": 105,
          "title": "rainbow-fart (20210803.922) --- Checks the keywords of code to play suitable sounds"
        },
        {
          "id": "https://melpa.org/packages/ess-20210803.912.tar",
          "author": null,
          "description": "The ess package has been updated to version 20210803.912.",
          "link": "https://melpa.org/#/ess",
          "publishedOn": "2021-08-03T09:12:00.000Z",
          "wordCount": 105,
          "title": "ess (20210803.912) --- Emacs Speaks Statistics"
        },
        {
          "id": "https://melpa.org/packages/pyim-20210803.226.tar",
          "author": null,
          "description": "The pyim package has been updated to version 20210803.226.",
          "link": "https://melpa.org/#/pyim",
          "publishedOn": "2021-08-03T02:26:00.000Z",
          "wordCount": 105,
          "title": "pyim (20210803.226) --- A Chinese input method support quanpin, shuangpin, wubi, cangjie and rime."
        },
        {
          "id": "https://melpa.org/packages/shfmt-20210803.222.el",
          "author": null,
          "description": "The shfmt package has been updated to version 20210803.222.",
          "link": "https://melpa.org/#/shfmt",
          "publishedOn": "2021-08-03T02:22:00.000Z",
          "wordCount": 105,
          "title": "shfmt (20210803.222) --- Reformat shell scripts using shfmt"
        },
        {
          "id": "https://melpa.org/packages/znc-20210803.159.el",
          "author": null,
          "description": "The znc package has been updated to version 20210803.159.",
          "link": "https://melpa.org/#/znc",
          "publishedOn": "2021-08-03T01:59:00.000Z",
          "wordCount": 105,
          "title": "znc (20210803.159) --- ZNC + ERC"
        },
        {
          "id": "https://melpa.org/packages/cliphist-20210803.57.tar",
          "author": null,
          "description": "The cliphist package has been updated to version 20210803.57.",
          "link": "https://melpa.org/#/cliphist",
          "publishedOn": "2021-08-03T00:57:00.000Z",
          "wordCount": 105,
          "title": "cliphist (20210803.57) --- paste from clipboard managers"
        },
        {
          "id": "https://melpa.org/packages/weyland-yutani-theme-20210802.2251.el",
          "author": null,
          "description": "The weyland-yutani-theme package has been updated to version 20210802.2251.",
          "link": "https://melpa.org/#/weyland-yutani-theme",
          "publishedOn": "2021-08-02T22:51:00.000Z",
          "wordCount": 105,
          "title": "weyland-yutani-theme (20210802.2251) --- Emacs theme based off Alien movie franchise"
        },
        {
          "id": "https://melpa.org/packages/slime-20210802.2231.tar",
          "author": null,
          "description": "The slime package has been updated to version 20210802.2231.",
          "link": "https://melpa.org/#/slime",
          "publishedOn": "2021-08-02T22:31:00.000Z",
          "wordCount": 105,
          "title": "slime (20210802.2231) --- Superior Lisp Interaction Mode for Emacs"
        },
        {
          "id": "https://melpa.org/packages/alan-mode-20210802.1950.el",
          "author": null,
          "description": "The alan-mode package has been updated to version 20210802.1950.",
          "link": "https://melpa.org/#/alan-mode",
          "publishedOn": "2021-08-02T19:50:00.000Z",
          "wordCount": 105,
          "title": "alan-mode (20210802.1950) --- Major mode for editing Alan files"
        },
        {
          "id": "https://melpa.org/packages/epkg-marginalia-20210802.1740.el",
          "author": null,
          "description": "The epkg-marginalia package has been updated to version 20210802.1740.",
          "link": "https://melpa.org/#/epkg-marginalia",
          "publishedOn": "2021-08-02T17:40:00.000Z",
          "wordCount": 105,
          "title": "epkg-marginalia (20210802.1740) --- Show Epkg information in completion annotations"
        },
        {
          "id": "https://melpa.org/packages/applescript-mode-20210802.1715.el",
          "author": null,
          "description": "The applescript-mode package has been updated to version 20210802.1715.",
          "link": "https://melpa.org/#/applescript-mode",
          "publishedOn": "2021-08-02T17:15:00.000Z",
          "wordCount": 105,
          "title": "applescript-mode (20210802.1715) --- major mode for editing AppleScript source"
        },
        {
          "id": "https://melpa.org/packages/pkg-overview-20210802.1509.el",
          "author": null,
          "description": "The pkg-overview package has been updated to version 20210802.1509.",
          "link": "https://melpa.org/#/pkg-overview",
          "publishedOn": "2021-08-02T15:09:00.000Z",
          "wordCount": 105,
          "title": "pkg-overview (20210802.1509) --- Make org documentation from elisp source file"
        },
        {
          "id": "https://melpa.org/packages/org-working-set-20210802.1435.el",
          "author": null,
          "description": "The org-working-set package has been updated to version 20210802.1435.",
          "link": "https://melpa.org/#/org-working-set",
          "publishedOn": "2021-08-02T14:35:00.000Z",
          "wordCount": 105,
          "title": "org-working-set (20210802.1435) --- Manage and visit a small set of org-nodes."
        },
        {
          "id": "https://melpa.org/packages/counsel-20210802.931.el",
          "author": null,
          "description": "The counsel package has been updated to version 20210802.931.",
          "link": "https://melpa.org/#/counsel",
          "publishedOn": "2021-08-02T09:31:00.000Z",
          "wordCount": 105,
          "title": "counsel (20210802.931) --- Various completion functions using Ivy"
        },
        {
          "id": "https://melpa.org/packages/lsp-ui-20210802.305.tar",
          "author": null,
          "description": "The lsp-ui package has been updated to version 20210802.305.",
          "link": "https://melpa.org/#/lsp-ui",
          "publishedOn": "2021-08-02T03:05:00.000Z",
          "wordCount": 105,
          "title": "lsp-ui (20210802.305) --- UI modules for lsp-mode"
        },
        {
          "id": "https://melpa.org/packages/templatel-20210802.249.el",
          "author": null,
          "description": "The templatel package has been updated to version 20210802.249.",
          "link": "https://melpa.org/#/templatel",
          "publishedOn": "2021-08-02T02:49:00.000Z",
          "wordCount": 105,
          "title": "templatel (20210802.249) --- Templating language;"
        },
        {
          "id": "https://melpa.org/packages/ts-20210801.2230.el",
          "author": null,
          "description": "The ts package has been updated to version 20210801.2230.",
          "link": "https://melpa.org/#/ts",
          "publishedOn": "2021-08-01T22:30:00.000Z",
          "wordCount": 105,
          "title": "ts (20210801.2230) --- Timestamp and date/time library"
        },
        {
          "id": "https://melpa.org/packages/swift-helpful-20210801.2036.tar",
          "author": null,
          "description": "The swift-helpful package has been updated to version 20210801.2036.",
          "link": "https://melpa.org/#/swift-helpful",
          "publishedOn": "2021-08-01T20:36:00.000Z",
          "wordCount": 105,
          "title": "swift-helpful (20210801.2036) --- Show documentation for Swift programs."
        },
        {
          "id": "https://melpa.org/packages/tubestatus-20210801.1522.el",
          "author": null,
          "description": "The tubestatus package has been updated to version 20210801.1522.",
          "link": "https://melpa.org/#/tubestatus",
          "publishedOn": "2021-08-01T15:22:00.000Z",
          "wordCount": 105,
          "title": "tubestatus (20210801.1522) --- Get the London Tube service status"
        },
        {
          "id": "https://melpa.org/packages/cask-20210801.1509.tar",
          "author": null,
          "description": "The cask package has been updated to version 20210801.1509.",
          "link": "https://melpa.org/#/cask",
          "publishedOn": "2021-08-01T15:09:00.000Z",
          "wordCount": 105,
          "title": "cask (20210801.1509) --- Cask: Project management for package development"
        },
        {
          "id": "https://melpa.org/packages/eacl-20210801.843.el",
          "author": null,
          "description": "The eacl package has been updated to version 20210801.843.",
          "link": "https://melpa.org/#/eacl",
          "publishedOn": "2021-08-01T08:43:00.000Z",
          "wordCount": 105,
          "title": "eacl (20210801.843) --- Auto-complete lines by grepping project"
        },
        {
          "id": "https://melpa.org/packages/docstr-20210801.643.tar",
          "author": null,
          "description": "The docstr package has been updated to version 20210801.643.",
          "link": "https://melpa.org/#/docstr",
          "publishedOn": "2021-08-01T06:43:00.000Z",
          "wordCount": 105,
          "title": "docstr (20210801.643) --- A document string minor mode"
        },
        {
          "id": "https://melpa.org/packages/xhair-20210801.222.el",
          "author": null,
          "description": "The xhair package has been updated to version 20210801.222.",
          "link": "https://melpa.org/#/xhair",
          "publishedOn": "2021-08-01T02:22:00.000Z",
          "wordCount": 105,
          "title": "xhair (20210801.222) --- Highlight the current line and column"
        },
        {
          "id": "https://melpa.org/packages/xah-lookup-20210801.102.el",
          "author": null,
          "description": "The xah-lookup package has been updated to version 20210801.102.",
          "link": "https://melpa.org/#/xah-lookup",
          "publishedOn": "2021-08-01T01:02:00.000Z",
          "wordCount": 105,
          "title": "xah-lookup (20210801.102) --- look up word on internet."
        },
        {
          "id": "https://melpa.org/packages/inf-elixir-20210731.2030.el",
          "author": null,
          "description": "The inf-elixir package has been updated to version 20210731.2030.",
          "link": "https://melpa.org/#/inf-elixir",
          "publishedOn": "2021-07-31T20:30:00.000Z",
          "wordCount": 105,
          "title": "inf-elixir (20210731.2030) --- Run an interactive Elixir shell"
        },
        {
          "id": "https://melpa.org/packages/company-math-20210731.2019.el",
          "author": null,
          "description": "The company-math package has been updated to version 20210731.2019.",
          "link": "https://melpa.org/#/company-math",
          "publishedOn": "2021-07-31T20:19:00.000Z",
          "wordCount": 105,
          "title": "company-math (20210731.2019) --- Completion backends for unicode math symbols and latex tags"
        },
        {
          "id": "https://melpa.org/packages/equake-20210731.2016.el",
          "author": null,
          "description": "The equake package has been updated to version 20210731.2016.",
          "link": "https://melpa.org/#/equake",
          "publishedOn": "2021-07-31T20:16:00.000Z",
          "wordCount": 105,
          "title": "equake (20210731.2016) --- Drop-down console for (e)shell & terminal emulation"
        },
        {
          "id": "https://melpa.org/packages/perspective-20210731.1825.el",
          "author": null,
          "description": "The perspective package has been updated to version 20210731.1825.",
          "link": "https://melpa.org/#/perspective",
          "publishedOn": "2021-07-31T18:25:00.000Z",
          "wordCount": 105,
          "title": "perspective (20210731.1825) --- switch between named \"perspectives\" of the editor"
        },
        {
          "id": "https://melpa.org/packages/eslintd-fix-20210731.1649.el",
          "author": null,
          "description": "The eslintd-fix package has been updated to version 20210731.1649.",
          "link": "https://melpa.org/#/eslintd-fix",
          "publishedOn": "2021-07-31T16:49:00.000Z",
          "wordCount": 105,
          "title": "eslintd-fix (20210731.1649) --- use eslint_d to automatically fix js files"
        },
        {
          "id": "https://melpa.org/packages/evil-tex-20210731.927.el",
          "author": null,
          "description": "The evil-tex package has been updated to version 20210731.927.",
          "link": "https://melpa.org/#/evil-tex",
          "publishedOn": "2021-07-31T09:27:00.000Z",
          "wordCount": 105,
          "title": "evil-tex (20210731.927) --- Useful features for editing LaTeX in evil-mode"
        },
        {
          "id": "https://melpa.org/packages/hotfuzz-20210731.821.el",
          "author": null,
          "description": "The hotfuzz package has been updated to version 20210731.821.",
          "link": "https://melpa.org/#/hotfuzz",
          "publishedOn": "2021-07-31T08:21:00.000Z",
          "wordCount": 105,
          "title": "hotfuzz (20210731.821) --- Fuzzy completion style"
        },
        {
          "id": "https://melpa.org/packages/doom-themes-20210731.818.tar",
          "author": null,
          "description": "The doom-themes package has been updated to version 20210731.818.",
          "link": "https://melpa.org/#/doom-themes",
          "publishedOn": "2021-07-31T08:18:00.000Z",
          "wordCount": 105,
          "title": "doom-themes (20210731.818) --- an opinionated pack of modern color-themes"
        },
        {
          "id": "https://melpa.org/packages/atl-markup-20210731.609.el",
          "author": null,
          "description": "The atl-markup package has been updated to version 20210731.609.",
          "link": "https://melpa.org/#/atl-markup",
          "publishedOn": "2021-07-31T06:09:00.000Z",
          "wordCount": 105,
          "title": "atl-markup (20210731.609) --- Automatically truncate lines for markup languages"
        },
        {
          "id": "https://melpa.org/packages/tuareg-20210730.2027.tar",
          "author": null,
          "description": "The tuareg package has been updated to version 20210730.2027.",
          "link": "https://melpa.org/#/tuareg",
          "publishedOn": "2021-07-30T20:27:00.000Z",
          "wordCount": 105,
          "title": "tuareg (20210730.2027) --- OCaml mode for Emacs."
        },
        {
          "id": "https://melpa.org/packages/evil-mc-20210730.1752.tar",
          "author": null,
          "description": "The evil-mc package has been updated to version 20210730.1752.",
          "link": "https://melpa.org/#/evil-mc",
          "publishedOn": "2021-07-30T17:52:00.000Z",
          "wordCount": 105,
          "title": "evil-mc (20210730.1752) --- Multiple cursors for evil-mode"
        },
        {
          "id": "https://melpa.org/packages/ivy-20210730.1743.tar",
          "author": null,
          "description": "The ivy package has been updated to version 20210730.1743.",
          "link": "https://melpa.org/#/ivy",
          "publishedOn": "2021-07-30T17:43:00.000Z",
          "wordCount": 105,
          "title": "ivy (20210730.1743) --- Incremental Vertical completYon"
        },
        {
          "id": "https://melpa.org/packages/dracula-theme-20210730.1158.tar",
          "author": null,
          "description": "The dracula-theme package has been updated to version 20210730.1158.",
          "link": "https://melpa.org/#/dracula-theme",
          "publishedOn": "2021-07-30T11:58:00.000Z",
          "wordCount": 105,
          "title": "dracula-theme (20210730.1158) --- Dracula Theme"
        },
        {
          "id": "https://melpa.org/packages/language-id-20210730.1122.el",
          "author": null,
          "description": "The language-id package has been updated to version 20210730.1122.",
          "link": "https://melpa.org/#/language-id",
          "publishedOn": "2021-07-30T11:22:00.000Z",
          "wordCount": 105,
          "title": "language-id (20210730.1122) --- Library to work with programming language identifiers"
        },
        {
          "id": "https://melpa.org/packages/csharp-mode-20210730.1117.tar",
          "author": null,
          "description": "The csharp-mode package has been updated to version 20210730.1117.",
          "link": "https://melpa.org/#/csharp-mode",
          "publishedOn": "2021-07-30T11:17:00.000Z",
          "wordCount": 105,
          "title": "csharp-mode (20210730.1117) --- C# mode derived mode"
        },
        {
          "id": "https://melpa.org/packages/git-identity-20210730.1037.el",
          "author": null,
          "description": "The git-identity package has been updated to version 20210730.1037.",
          "link": "https://melpa.org/#/git-identity",
          "publishedOn": "2021-07-30T10:37:00.000Z",
          "wordCount": 105,
          "title": "git-identity (20210730.1037) --- Identity management for (ma)git"
        },
        {
          "id": "https://melpa.org/packages/ros-20210730.844.el",
          "author": null,
          "description": "The ros package has been updated to version 20210730.844.",
          "link": "https://melpa.org/#/ros",
          "publishedOn": "2021-07-30T08:44:00.000Z",
          "wordCount": 105,
          "title": "ros (20210730.844) --- Description"
        },
        {
          "id": "https://melpa.org/packages/git-gutter-20210730.429.el",
          "author": null,
          "description": "The git-gutter package has been updated to version 20210730.429.",
          "link": "https://melpa.org/#/git-gutter",
          "publishedOn": "2021-07-30T04:29:00.000Z",
          "wordCount": 105,
          "title": "git-gutter (20210730.429) --- Port of Sublime Text plugin GitGutter"
        },
        {
          "id": "https://melpa.org/packages/yaml-20210730.143.el",
          "author": null,
          "description": "The yaml package has been updated to version 20210730.143.",
          "link": "https://melpa.org/#/yaml",
          "publishedOn": "2021-07-30T01:43:00.000Z",
          "wordCount": 105,
          "title": "yaml (20210730.143) --- YAML parser for Elisp"
        },
        {
          "id": "https://melpa.org/packages/org-msg-20210729.2144.el",
          "author": null,
          "description": "The org-msg package has been updated to version 20210729.2144.",
          "link": "https://melpa.org/#/org-msg",
          "publishedOn": "2021-07-29T21:44:00.000Z",
          "wordCount": 105,
          "title": "org-msg (20210729.2144) --- Org mode to send and reply to email in HTML."
        },
        {
          "id": "https://melpa.org/packages/math-preview-20210729.1842.el",
          "author": null,
          "description": "The math-preview package has been updated to version 20210729.1842.",
          "link": "https://melpa.org/#/math-preview",
          "publishedOn": "2021-07-29T18:42:00.000Z",
          "wordCount": 105,
          "title": "math-preview (20210729.1842) --- Preview TeX math equations inline"
        },
        {
          "id": "https://melpa.org/packages/lexic-20210729.1808.el",
          "author": null,
          "description": "The lexic package has been updated to version 20210729.1808.",
          "link": "https://melpa.org/#/lexic",
          "publishedOn": "2021-07-29T18:08:00.000Z",
          "wordCount": 105,
          "title": "lexic (20210729.1808) --- A major mode to find out more about words"
        },
        {
          "id": "https://melpa.org/packages/parseedn-20210729.1657.el",
          "author": null,
          "description": "The parseedn package has been updated to version 20210729.1657.",
          "link": "https://melpa.org/#/parseedn",
          "publishedOn": "2021-07-29T16:57:00.000Z",
          "wordCount": 105,
          "title": "parseedn (20210729.1657) --- Clojure/EDN parser"
        },
        {
          "id": "https://melpa.org/packages/sly-20210729.1613.tar",
          "author": null,
          "description": "The sly package has been updated to version 20210729.1613.",
          "link": "https://melpa.org/#/sly",
          "publishedOn": "2021-07-29T16:13:00.000Z",
          "wordCount": 105,
          "title": "sly (20210729.1613) --- Sylvester the Cat's Common Lisp IDE"
        },
        {
          "id": "https://melpa.org/packages/helm-20210729.1510.tar",
          "author": null,
          "description": "The helm package has been updated to version 20210729.1510.",
          "link": "https://melpa.org/#/helm",
          "publishedOn": "2021-07-29T15:10:00.000Z",
          "wordCount": 105,
          "title": "helm (20210729.1510) --- Helm is an Emacs incremental and narrowing framework"
        },
        {
          "id": "https://melpa.org/packages/moody-20210729.1215.el",
          "author": null,
          "description": "The moody package has been updated to version 20210729.1215.",
          "link": "https://melpa.org/#/moody",
          "publishedOn": "2021-07-29T12:15:00.000Z",
          "wordCount": 105,
          "title": "moody (20210729.1215) --- Tabs and ribbons for the mode line"
        },
        {
          "id": "https://melpa.org/packages/mu4e-views-20210729.1158.el",
          "author": null,
          "description": "The mu4e-views package has been updated to version 20210729.1158.",
          "link": "https://melpa.org/#/mu4e-views",
          "publishedOn": "2021-07-29T11:58:00.000Z",
          "wordCount": 105,
          "title": "mu4e-views (20210729.1158) --- View emails in mu4e using xwidget-webkit"
        },
        {
          "id": "https://melpa.org/packages/php-cs-fixer-20210729.1022.el",
          "author": null,
          "description": "The php-cs-fixer package has been updated to version 20210729.1022.",
          "link": "https://melpa.org/#/php-cs-fixer",
          "publishedOn": "2021-07-29T10:22:00.000Z",
          "wordCount": 105,
          "title": "php-cs-fixer (20210729.1022) --- php-cs-fixer wrapper."
        },
        {
          "id": "https://melpa.org/packages/nnhackernews-20210729.953.el",
          "author": null,
          "description": "The nnhackernews package has been updated to version 20210729.953.",
          "link": "https://melpa.org/#/nnhackernews",
          "publishedOn": "2021-07-29T09:53:00.000Z",
          "wordCount": 105,
          "title": "nnhackernews (20210729.953) --- Gnus backend for Hacker News"
        },
        {
          "id": "https://melpa.org/packages/org-tag-beautify-20210729.929.el",
          "author": null,
          "description": "The org-tag-beautify package has been updated to version 20210729.929.",
          "link": "https://melpa.org/#/org-tag-beautify",
          "publishedOn": "2021-07-29T09:29:00.000Z",
          "wordCount": 105,
          "title": "org-tag-beautify (20210729.929) --- Beautify Org Mode tags"
        },
        {
          "id": "https://melpa.org/packages/helm-ls-git-20210729.911.el",
          "author": null,
          "description": "The helm-ls-git package has been updated to version 20210729.911.",
          "link": "https://melpa.org/#/helm-ls-git",
          "publishedOn": "2021-07-29T09:11:00.000Z",
          "wordCount": 105,
          "title": "helm-ls-git (20210729.911) --- list git files."
        },
        {
          "id": "https://melpa.org/packages/string-inflection-20210729.658.el",
          "author": null,
          "description": "The string-inflection package has been updated to version 20210729.658.",
          "link": "https://melpa.org/#/string-inflection",
          "publishedOn": "2021-07-29T06:58:00.000Z",
          "wordCount": 105,
          "title": "string-inflection (20210729.658) --- underscore -> UPCASE -> CamelCase -> lowerCamelCase conversion of names"
        },
        {
          "id": "https://melpa.org/packages/cider-20210729.521.tar",
          "author": null,
          "description": "The cider package has been updated to version 20210729.521.",
          "link": "https://melpa.org/#/cider",
          "publishedOn": "2021-07-29T05:21:00.000Z",
          "wordCount": 105,
          "title": "cider (20210729.521) --- Clojure Interactive Development Environment that Rocks"
        },
        {
          "id": "https://melpa.org/packages/docker-tramp-20210729.508.tar",
          "author": null,
          "description": "The docker-tramp package has been updated to version 20210729.508.",
          "link": "https://melpa.org/#/docker-tramp",
          "publishedOn": "2021-07-29T05:08:00.000Z",
          "wordCount": 105,
          "title": "docker-tramp (20210729.508) --- TRAMP integration for docker containers"
        },
        {
          "id": "https://melpa.org/packages/all-the-icons-20210728.2330.tar",
          "author": null,
          "description": "The all-the-icons package has been updated to version 20210728.2330.",
          "link": "https://melpa.org/#/all-the-icons",
          "publishedOn": "2021-07-28T23:30:00.000Z",
          "wordCount": 105,
          "title": "all-the-icons (20210728.2330) --- A library for inserting Developer icons"
        },
        {
          "id": "https://melpa.org/packages/all-the-icons-completion-20210728.2119.el",
          "author": null,
          "description": "The all-the-icons-completion package has been updated to version 20210728.2119.",
          "link": "https://melpa.org/#/all-the-icons-completion",
          "publishedOn": "2021-07-28T21:19:00.000Z",
          "wordCount": 105,
          "title": "all-the-icons-completion (20210728.2119) --- Add icons to completion candidates"
        },
        {
          "id": "https://melpa.org/packages/auto-compile-20210728.2054.el",
          "author": null,
          "description": "The auto-compile package has been updated to version 20210728.2054.",
          "link": "https://melpa.org/#/auto-compile",
          "publishedOn": "2021-07-28T20:54:00.000Z",
          "wordCount": 105,
          "title": "auto-compile (20210728.2054) --- automatically compile Emacs Lisp libraries"
        },
        {
          "id": "https://melpa.org/packages/daemons-20210728.1514.tar",
          "author": null,
          "description": "The daemons package has been updated to version 20210728.1514.",
          "link": "https://melpa.org/#/daemons",
          "publishedOn": "2021-07-28T15:14:00.000Z",
          "wordCount": 105,
          "title": "daemons (20210728.1514) --- UI for managing init system daemons (services)"
        },
        {
          "id": "https://melpa.org/packages/magik-mode-20210728.1354.tar",
          "author": null,
          "description": "The magik-mode package has been updated to version 20210728.1354.",
          "link": "https://melpa.org/#/magik-mode",
          "publishedOn": "2021-07-28T13:54:00.000Z",
          "wordCount": 105,
          "title": "magik-mode (20210728.1354) --- mode for editing Magik + some utils."
        },
        {
          "id": "https://melpa.org/packages/idris-mode-20210728.846.tar",
          "author": null,
          "description": "The idris-mode package has been updated to version 20210728.846.",
          "link": "https://melpa.org/#/idris-mode",
          "publishedOn": "2021-07-28T08:46:00.000Z",
          "wordCount": 105,
          "title": "idris-mode (20210728.846) --- Major mode for editing Idris code"
        },
        {
          "id": "https://melpa.org/packages/call-graph-20210728.802.tar",
          "author": null,
          "description": "The call-graph package has been updated to version 20210728.802.",
          "link": "https://melpa.org/#/call-graph",
          "publishedOn": "2021-07-28T08:02:00.000Z",
          "wordCount": 105,
          "title": "call-graph (20210728.802) --- Library to generate call graph for c/c++ functions"
        },
        {
          "id": "https://melpa.org/packages/lsp-dart-20210728.201.tar",
          "author": null,
          "description": "The lsp-dart package has been updated to version 20210728.201.",
          "link": "https://melpa.org/#/lsp-dart",
          "publishedOn": "2021-07-28T02:01:00.000Z",
          "wordCount": 105,
          "title": "lsp-dart (20210728.201) --- Dart support lsp-mode"
        },
        {
          "id": "https://melpa.org/packages/which-key-20210728.150.el",
          "author": null,
          "description": "The which-key package has been updated to version 20210728.150.",
          "link": "https://melpa.org/#/which-key",
          "publishedOn": "2021-07-28T01:50:00.000Z",
          "wordCount": 105,
          "title": "which-key (20210728.150) --- Display available keybindings in popup"
        },
        {
          "id": "https://melpa.org/packages/all-the-icons-ibuffer-20210727.808.el",
          "author": null,
          "description": "The all-the-icons-ibuffer package has been updated to version 20210727.808.",
          "link": "https://melpa.org/#/all-the-icons-ibuffer",
          "publishedOn": "2021-07-27T08:08:00.000Z",
          "wordCount": 105,
          "title": "all-the-icons-ibuffer (20210727.808) --- Display icons for all buffers in ibuffer"
        },
        {
          "id": "https://melpa.org/packages/elfeed-dashboard-20210727.603.el",
          "author": null,
          "description": "The elfeed-dashboard package has been updated to version 20210727.603.",
          "link": "https://melpa.org/#/elfeed-dashboard",
          "publishedOn": "2021-07-27T06:03:00.000Z",
          "wordCount": 105,
          "title": "elfeed-dashboard (20210727.603) --- An extensible frontend for elfeed using org-mode"
        }
      ]
    },
    {
      "title": "M-x emacs-reddit",
      "feedUrl": "https://reddit.com/r/emacs/.rss",
      "siteUrl": "https://www.reddit.com/r/emacs/",
      "articles": [
        {
          "id": "https://www.reddit.com/r/emacs/comments/p1ycf2/unpackagedcustomtoggleallmorehide_expand_all/",
          "author": null,
          "description": "submitted by    /u/github-alphapapa  \n [link]   [comments]",
          "link": "https://www.reddit.com/r/emacs/comments/p1ycf2/unpackagedcustomtoggleallmorehide_expand_all/",
          "publishedOn": "2021-08-10T21:08:06.000Z",
          "wordCount": 162,
          "title": "unpackaged/custom-toggle-all-more-hide: Expand all options’ documentation"
        },
        {
          "id": "https://www.reddit.com/r/emacs/comments/p1y8gs/comp_ide_for_emacs_an_emacs_package_for/",
          "author": null,
          "description": "Hi,\n I have written a package called comp-ide. This package is for competitive programming. Here's a quick demo: https://www.youtube.com/watch?v=zY0gr3Tv3hU\n Disclaimer\n This was the first package like thing :P i wrote for emacs and i didn't bother to update it much since it just worked for me. But now i am trying to make it more accessible. And there is a lot of bad code in this. So I am looking for contributions as well. In any cases, if you have any idea which can make this package more beneficial for people. Please feel free to open pull requests/issues for the same or comment here or maybe message me. I will gladly check them out.\n Thank You.\n    submitted by    /u/SidharthArya-  \n [link]   [comments]",
          "link": "https://www.reddit.com/r/emacs/comments/p1y8gs/comp_ide_for_emacs_an_emacs_package_for/",
          "publishedOn": "2021-08-10T21:01:57.000Z",
          "wordCount": 231,
          "title": "Comp IDE for Emacs. An Emacs package for competitive programming."
        },
        {
          "id": "https://www.reddit.com/r/emacs/comments/p1tii6/ios_improving_org_task_rendering/",
          "author": null,
          "description": "submitted by    /u/xenodium  \n [link]   [comments]",
          "link": "https://www.reddit.com/r/emacs/comments/p1tii6/ios_improving_org_task_rendering/",
          "publishedOn": "2021-08-10T17:06:03.000Z",
          "wordCount": 163,
          "title": "iOS: Improving org task rendering"
        },
        {
          "id": "https://www.reddit.com/r/emacs/comments/p1ryvn/indentunindent_shortcuts/",
          "author": null,
          "description": "Hi all,\n Are there any shortcut for:\n  \nEdit > Text Properties > Indentation > Indent More\n Edit > Text Properties > Indentation > Indent Less\n  \n----------------------------------\n EDIT\n In Org Mode, if that matters.\n    submitted by    /u/reditoro  \n [link]   [comments]",
          "link": "https://www.reddit.com/r/emacs/comments/p1ryvn/indentunindent_shortcuts/",
          "publishedOn": "2021-08-10T15:52:17.000Z",
          "wordCount": 127,
          "title": "Indent/Unindent shortcuts?"
        },
        {
          "id": "https://www.reddit.com/r/emacs/comments/p1piic/evilmodeelisp_run_multiple_substitution_commands/",
          "author": null,
          "description": "Is it possible to do multiple substitution commands at the same time in evil-mode? In Vim you can group multiple ex commands with the bar \"|\" command separator and it works like magic:\n  \n :%s/Ford/Lamborghini/ | :%s/mouse/Tyrannosaurus/ | :%s/vim/emacs/\n  \n If you are doing 10 substitutions at a time and then repeating the same substitutions in different files then this can be a major time saver. There doesn't seem to a bar separator in evil though. Am I missing something? I couldn't find anything online except an open issue on evil-mode's github and this Emacs Stack Exchange post from 5 years ago that doesn't have any replies. The reply to the github issue mentions that bar \"|\" might mess up search regexps but you could just use some other character as the command separator.\n  \n If it's not possible, would someone here be able to give me tips on how to do the same thing using evil commands or emacs commands? I know I could just go through the ex command history and redo the commands one by one but there has to be a better way.\n  \n As a last resort are there any elisp pros here who could help me out with how I would go about writing something like this for evil-mode? Any tips would be greatly appreciated.\n    submitted by    /u/stargazing_dolphins  \n [link]   [comments]",
          "link": "https://www.reddit.com/r/emacs/comments/p1piic/evilmodeelisp_run_multiple_substitution_commands/",
          "publishedOn": "2021-08-10T13:47:24.000Z",
          "wordCount": 468,
          "title": "Evil-mode/elisp: run multiple substitution commands at the same time? Or how to write an elisp function that does the same thing?"
        },
        {
          "id": "https://www.reddit.com/r/emacs/comments/p1oqkg/capturing_notes_efficiently_with_org_roam/",
          "author": null,
          "description": "submitted by    /u/daviwil  \n [link]   [comments]",
          "link": "https://www.reddit.com/r/emacs/comments/p1oqkg/capturing_notes_efficiently_with_org_roam/",
          "publishedOn": "2021-08-10T13:03:02.000Z",
          "wordCount": 199,
          "title": "Capturing Notes Efficiently with Org Roam"
        },
        {
          "id": "https://www.reddit.com/r/emacs/comments/p1ocvu/penel_running_with_a_dockerized_gui_in_spacemacs/",
          "author": null,
          "description": "https://semiosis.github.io/posts/gui-spacemacs-support-for-dockerized-pen-el/\n Pen.el is a free (libre) copilot in emacs, and so much more. It's more featureful than copilot (has many more functions than merely generate code), is completely transparent and lets you design your own functions to the language model, supports more APIs and Language Models outside of OpenAI. Codex works in theory but you would need a key from OpenAI to take advantage of it for generating code.\n Codex demo is being demo'd in about an hour here.\n https://www.twitch.tv/openai\n    submitted by    /u/mullikine  \n [link]   [comments]",
          "link": "https://www.reddit.com/r/emacs/comments/p1ocvu/penel_running_with_a_dockerized_gui_in_spacemacs/",
          "publishedOn": "2021-08-10T12:39:28.000Z",
          "wordCount": 190,
          "title": "Pen.el running with a Dockerized GUI in Spacemacs"
        },
        {
          "id": "https://www.reddit.com/r/emacs/comments/p1nhq7/windows_or_macos_which_is_a_better_bet_for_emacs/",
          "author": null,
          "description": "Hello all,\n I'd be grateful for your help with a question about the \"Emacs experience\" on non-Linux systems. Currently, I use Emacs on an old laptop running Xubuntu, and the experience is of course great. Now my employer is offering to get me a laptop -- but because of the supply shortage, the choice is restricted to laptop PCs with spotty Linux support or an Intel MacBook Pro. If you had to choose between using Emacs on Windows or macOS at this point, which would you pick? (Or is the best bet to just run a VM?) Normally I would lean toward macOS because of its Unix base, but sometimes I use my wife's Mac and it feels so restrictive it's almost comical -- not at all what I remember OS X being like back in the late 2000s/early 2010s.\n Thank you in advance for any help/advice about this.\n    submitted by    /u/NeatSea7  \n [link]   [comments]",
          "link": "https://www.reddit.com/r/emacs/comments/p1nhq7/windows_or_macos_which_is_a_better_bet_for_emacs/",
          "publishedOn": "2021-08-10T11:42:42.000Z",
          "wordCount": 933,
          "title": "Windows or macOS: which is a better bet for Emacs?"
        },
        {
          "id": "https://www.reddit.com/r/emacs/comments/p1m32w/what_is_the_best_way_to_manage_startup/",
          "author": null,
          "description": "I use Emacs for certain tasks in my workflow: - Git client via magit - Task manager via org-mode - Python editor All of that is managed via Doom Emacs config I want to be able to shortcut to the certain mode and window configuration at the startup. For example, typing magit . in the terminal should open current directory's magit status. And typing org-agenda should open emacs with agenda, calendar, note capture, etc.\n Should I use some kind of package or is it possible in vanilla/doom emacs already? Any manuals on that?\n    submitted by    /u/Mishkun  \n [link]   [comments]",
          "link": "https://www.reddit.com/r/emacs/comments/p1m32w/what_is_the_best_way_to_manage_startup/",
          "publishedOn": "2021-08-10T09:55:13.000Z",
          "wordCount": 321,
          "title": "What is the best way to manage startup configurations in Emacs?"
        },
        {
          "id": "https://www.reddit.com/r/emacs/comments/p1lcgv/companymode_posframe_icons/",
          "author": null,
          "description": "I love the icons showing up in my auto-completion posframe, but because of no space between the icon and text sometimes it's hard to read. Any idea how to make this space wider?\n https://preview.redd.it/kvi3n8gavhg71.png?width=682&format=png&auto=webp&s=f6be2f4f0e1c3df277d743a14ff5d9c35cf39728\n    submitted by    /u/haksior  \n [link]   [comments]",
          "link": "https://www.reddit.com/r/emacs/comments/p1lcgv/companymode_posframe_icons/",
          "publishedOn": "2021-08-10T08:50:58.000Z",
          "wordCount": 206,
          "title": "company-mode posframe icons"
        },
        {
          "id": "https://www.reddit.com/r/emacs/comments/p1izzc/how_do_i_make_cp_an_cn_move_up_and_down_actual/",
          "author": null,
          "description": "How do i make c-p and c-n move up and down actual lines, that is sequence of characters ending with '\\n', as opposed to what looks like a line when soft wrapping is enabled?\n    submitted by    /u/olavfosse  \n [link]   [comments]",
          "link": "https://www.reddit.com/r/emacs/comments/p1izzc/how_do_i_make_cp_an_cn_move_up_and_down_actual/",
          "publishedOn": "2021-08-10T05:37:14.000Z",
          "wordCount": 187,
          "title": "How do I make c-p an c-n move up and down actual lines even when soft line wrapping is enabled?"
        },
        {
          "id": "https://www.reddit.com/r/emacs/comments/p1hxk0/magit_magitdiffsectionfileargs_in_magit_30/",
          "author": null,
          "description": "Hello, in magit 2.0, I used to filter directory using this variable. (I know only Emacs basic movements, not it's lisp). How do I ask magit 3.0 to limit it's view to only a particular subset of directories?\n    submitted by    /u/aoe2map  \n [link]   [comments]",
          "link": "https://www.reddit.com/r/emacs/comments/p1hxk0/magit_magitdiffsectionfileargs_in_magit_30/",
          "publishedOn": "2021-08-10T04:20:30.000Z",
          "wordCount": 137,
          "title": "[magit] magit-diff-section-file-args in magit 3.0"
        },
        {
          "id": "https://www.reddit.com/r/emacs/comments/p1hlzp/exwm_tips/",
          "author": null,
          "description": "I loved exwm, but I'm not an elisp monk, so I didn't figure out some things: 1. How to bind keys properly to work in emacs and other standard programs? (I tried exwm-input-set-key) 2. How to make a good window and workspace management ? (I tried perspective but wasn't so good) 3. Any other tips/tricks/ideas to improve the exwm experience .\n Btw : I use bspwm, so I'm more used to tiling windows and the hole comcept of workspaces, keyboard centrism and that fun stuff\n    submitted by    /u/Qardat  \n [link]   [comments]",
          "link": "https://www.reddit.com/r/emacs/comments/p1hlzp/exwm_tips/",
          "publishedOn": "2021-08-10T03:59:19.000Z",
          "wordCount": 731,
          "title": "EXWM Tips"
        },
        {
          "id": "https://www.reddit.com/r/emacs/comments/p181d3/is_there_any_plan_to_move_evil_to_nongnu_elpa/",
          "author": null,
          "description": "With Magit and other popular packages being moved to NonGNU elpa recently, is there any plan for evil to do the same?\n    submitted by    /u/ixlxixl  \n [link]   [comments]",
          "link": "https://www.reddit.com/r/emacs/comments/p181d3/is_there_any_plan_to_move_evil_to_nongnu_elpa/",
          "publishedOn": "2021-08-09T19:02:31.000Z",
          "wordCount": 232,
          "title": "Is there any plan to move evil to (non)GNU elpa repos?"
        },
        {
          "id": "https://www.reddit.com/r/emacs/comments/p17g72/how_to_enable_yasnippet_as_company_backend_in/",
          "author": null,
          "description": "Looking at company-diag I don't see company-yasnippets loaded anywhere in python-mode.\n Used backend: company-capf \n In the working org mode I get this:\n Used backend: (company-capf :with company-yasnippet) \n ~/.spacemacs.d/init.el\n (auto-completion :variables auto-completion-enable-snippets-in-popup t) (python :variables python-backend 'lsp python-lsp-server 'pyright ) \n  \nTried these variable settings as well. They seem completely ignored looking at company-diag:\n (setq company-backends-python-mode '((company-capf :with company-yasnippet) (company-dabbrev-code company-gtags company-etags company-keywords :with company-yasnippet) (company-files :with company-yasnippet) (company-dabbrev :with company-yasnippet))) \n  \nTried as well @Voleking's suggestions:\n  '(lsp-completion-provider :none) (setq company-backends '((company-files :with company-yasnippet) (company-capf :with company-yasnippet) (company-dabbrev-code company-gtags company-etags company-keywords))) (add-hook 'python-mode-hook '(lambda () (set (make-local-variable 'company-backends) '((company-capf :with company-yasnippet) (company-dabbrev-code company-gtags company-etags company-keywords :with company-yasnippet) (company-files :with company-yasnippet) (company-dabbrev :with company-yasnippet))))) \n Now company-diag returns:\n company-backends: (company-capf (company-capf :with company-yasnippet) (company-dabbrev-code company-gtags company-etags company-keywords :with company-yasnippet) (company-files :with company-yasnippet) (company-dabbrev :with company-yasnippet)) Used backend: company-capf Value of c-a-p-f: (lsp-completion-at-point) Major mode: python-mode \n Screenshot: ![picture](https://i.imgur.com/7JiG1l1.png)\n    submitted by    /u/aaaaaabaaba  \n [link]   [comments]",
          "link": "https://www.reddit.com/r/emacs/comments/p17g72/how_to_enable_yasnippet_as_company_backend_in/",
          "publishedOn": "2021-08-09T18:33:13.000Z",
          "wordCount": 404,
          "title": "How to enable yasnippet as company backend in python mode?"
        },
        {
          "id": "https://www.reddit.com/r/emacs/comments/p16b2t/julia_kernel_unresponsive_in_emacs_ipython/",
          "author": null,
          "description": "I am trying to set up Emacs IPython Notebook (EIN) in order to be able to work with ipynb files directly in emacs. When I initially install the package, there is no lag after running the command \"ein:run\" and the Julia kernel works just as well as the Python kernel. However, if I then restart emacs and input \"ein:run\", now there is a lag of several seconds prior to the prompt to specify a notebook directory, and more concerningly the Julia kernel simply does not respond anymore (the Python and my Matlab kernels still work fine). Does anyone have any idea what the issue might be here, and if so how to fix it? Any help would be greatly appreciated!\n    submitted by    /u/daemonritus  \n [link]   [comments]",
          "link": "https://www.reddit.com/r/emacs/comments/p16b2t/julia_kernel_unresponsive_in_emacs_ipython/",
          "publishedOn": "2021-08-09T17:37:52.000Z",
          "wordCount": 549,
          "title": "Julia kernel unresponsive in Emacs IPython Notebook"
        },
        {
          "id": "https://www.reddit.com/r/emacs/comments/p0ynlj/ann_new_package_mu4ecolumnfaces/",
          "author": null,
          "description": "submitted by    /u/DasEwigeLicht  \n [link]   [comments]",
          "link": "https://www.reddit.com/r/emacs/comments/p0ynlj/ann_new_package_mu4ecolumnfaces/",
          "publishedOn": "2021-08-09T10:17:58.000Z",
          "wordCount": 359,
          "title": "[ANN] New package: mu4e-column-faces"
        },
        {
          "id": "https://www.reddit.com/r/emacs/comments/p0yl87/projectilediscoverprojectsindirectory_option_not/",
          "author": null,
          "description": "Good evening! First: I'm a complete emacs nub. Following along with the doom emacs playlist on YouTube by Zaiste Programming. (Under the impression that having some pre-installed plugins initially will make it a bit easier to get used to emacs coming from VS Code).\n In projectile, I'm trying to find the \"projectile-discover-projects-in-directory\" option to set my project directory. The only one I'm getting though is \"projectile-discover-projects-in-search-path\". After looking online I can't find anything about the option being missing and I can't really find anything in the documentation. Am I just doing something stupid here and missing the blindingly obvious?\n ​\n EDIT: If I set the path in my config file, it only finds some of my projects as well. I'm tracking my \"~/Coding/\" folder. In it, I have \"personal-projects\" and within that I have 2. \"gradebook\" and \"learning-rust\". Both I have set up with git etc but it's only finding \"gradebook\" and not \"learning-rust\"\n    submitted by    /u/Ni4mh  \n [link]   [comments]",
          "link": "https://www.reddit.com/r/emacs/comments/p0yl87/projectilediscoverprojectsindirectory_option_not/",
          "publishedOn": "2021-08-09T10:12:51.000Z",
          "wordCount": 264,
          "title": "projectile-discover-projects-in-directory option not showing up with projectile plugin."
        },
        {
          "id": "https://www.reddit.com/r/emacs/comments/p0yibz/problem_with_mu4e_error_mu4e_expected/",
          "author": null,
          "description": "Hello, I have been successfully using emacs and mu4e for my mail for some months.\n Yesterday, I got this error, that seems to be related to mu4e. \n I updated emacs, my packages, mu4e (emacs and mu4e are installed on Void with guix) and my Void installation.\n The following commands did not help:\n mu init --maildir ~/mymail --my-address=xxxxxxxxxxxxxxxxx mu index \n Both ended without any errors.\n I started emacs with the --debug-init option, I do not see anything related to mu or mu4e.\n As anyone any idea?? Thanks in advance.\n    submitted by    /u/fmou67  \n [link]   [comments]",
          "link": "https://www.reddit.com/r/emacs/comments/p0yibz/problem_with_mu4e_error_mu4e_expected/",
          "publishedOn": "2021-08-09T10:06:30.000Z",
          "wordCount": 246,
          "title": "Problem with mu4e: Error (mu4e): expected schema-version expected schema-version %s, but got %s; please use 'mu init', but got 452"
        },
        {
          "id": "https://www.reddit.com/r/emacs/comments/p0y6o9/définitions_de_balises_omegat_en_regex_pour/",
          "author": null,
          "description": "submitted by    /u/brandelune  \n [link]   [comments]",
          "link": "https://www.reddit.com/r/emacs/comments/p0y6o9/définitions_de_balises_omegat_en_regex_pour/",
          "publishedOn": "2021-08-09T09:40:10.000Z",
          "wordCount": 126,
          "title": "Définitions de balises OmegaT en regex pour traduire les manuels texinfo d'Emacs."
        },
        {
          "id": "https://www.reddit.com/r/emacs/comments/p0y40o/autorevertmode_and_manually_calling_rever_buffer/",
          "author": null,
          "description": "Hey, I'm compiling emacs from master, my current build's emacs-version is:\n GNU Emacs 28.0.50 (build 5, x86_64-pc-linux-gnu, GTK+ Version 3.24.30, cairo version 1.17.4)\n of 2021-07-23\n ​\n I've recently noticed that gloal-auto-revert-mode and interactive revert-buffer stopped working for me, but I don't know after which HEAD commit it became a thing. Emacs definitely catches external edits because it posts \"reverting buffer...\" into the *Messages*, but it doesn't update the buffer with the changed contents. Is there any place I should look at apart from just going through the code with stepping debugger? Here's my emacs config in case I messed something up there: https://github.com/valignatev/dotemacs\n    submitted by    /u/valignatev  \n [link]   [comments]",
          "link": "https://www.reddit.com/r/emacs/comments/p0y40o/autorevertmode_and_manually_calling_rever_buffer/",
          "publishedOn": "2021-08-09T09:33:52.000Z",
          "wordCount": 268,
          "title": "auto-revert-mode and manually calling rever buffer doesn't work"
        },
        {
          "id": "https://www.reddit.com/r/emacs/comments/p0vqrq/basic_wysiwyg_printing_in_gnu_emacs_arabic_hebrew/",
          "author": null,
          "description": "​\n https://preview.redd.it/0qvmsb3qy9g71.png?width=938&format=png&auto=webp&s=060ea9def093cf34fedf045b04d1035ad3231ecd\n Here is my next iteration on basic WYSIWYG printing in GNU Emacs for printing RTL languages like Arabic and Hebrew.\n  \nRun M-x ps-print-buffer-with-faces to send output to printer.\n Run C-u M-x ps-print-buffer-with-faces to send output to file (PS format).\n  \nCode: https://gitlab.com/atamariya/emacs/tree/dev\n More details: https://lifeofpenguin.blogspot.com/2021/06/basic-wysiwyg-printing-in-gnu-emacs.html\n    submitted by    /u/atamariya  \n [link]   [comments]",
          "link": "https://www.reddit.com/r/emacs/comments/p0vqrq/basic_wysiwyg_printing_in_gnu_emacs_arabic_hebrew/",
          "publishedOn": "2021-08-09T06:21:16.000Z",
          "wordCount": 143,
          "title": "Basic WYSIWYG printing in GNU Emacs (Arabic & Hebrew)"
        },
        {
          "id": "https://www.reddit.com/r/emacs/comments/p0u1zp/open_lange_zip_file_in_emacs/",
          "author": null,
          "description": "Suppose I just want to see what files are inside a ZIP file, on the command line I can do unzip -l file.ZIP, this command finishes quickly no matter how large the ZIP file is. \n I thought opening a ZIP file in emacs would not be very different from running unzip -l file.ZIP, so it should work on very large files, but seems it doesn't. Trying to open a large ZIP file in dired would choke emacs. \n Why does this happen and is there a way to let emacs handle large ZIP files?\n    submitted by    /u/whudwl  \n [link]   [comments]",
          "link": "https://www.reddit.com/r/emacs/comments/p0u1zp/open_lange_zip_file_in_emacs/",
          "publishedOn": "2021-08-09T04:14:10.000Z",
          "wordCount": 489,
          "title": "Open lange ZIP file in emacs?"
        },
        {
          "id": "https://www.reddit.com/r/emacs/comments/p0tj75/using_jetbrains_language_server_in_emacs/",
          "author": null,
          "description": "I have C# working great with Doom Emacs basically out of the box with (csharp +lsp). \n It understands everything fine except for .cshtml and .razor files. These are sort of a mixed HTML and C# file that function similar to a JSX file in React.\n Rider understands these very well and has intellisense for them. Closest I can come with Emacs is to use web-mode which works okay for the html bits and basically seems to ignore the C# bits. That is actually okay but I would still like to figure out how to get it all working in Emacs.\n Made me wonder if there is a way to somehow use Rider like a language server for Emacs or a tip that could point me in that direction.\n    submitted by    /u/olepunchy  \n [link]   [comments]",
          "link": "https://www.reddit.com/r/emacs/comments/p0tj75/using_jetbrains_language_server_in_emacs/",
          "publishedOn": "2021-08-09T03:38:50.000Z",
          "wordCount": 284,
          "title": "Using Jetbrains language server in Emacs?"
        },
        {
          "id": "https://www.reddit.com/r/emacs/comments/p0kkxy/i_just_discovered_the_capslock_key_has_a_slight/",
          "author": null,
          "description": "I've remapped the capslock key as a control for Emacs (since forever I think) and the slight delay never bothered me until quite recently. I had a hard time finding the reason since I was thinking Emacs was the culprit. But it's actually a \"feature\" of OSX. The only way I found to disable it was to install karabiner (https://karabiner-elements.pqrs.org/). If you have another and more straightforward way to disable it, I would like very much to know it.\n    submitted by    /u/Nicolas-Rougier  \n [link]   [comments]",
          "link": "https://www.reddit.com/r/emacs/comments/p0kkxy/i_just_discovered_the_capslock_key_has_a_slight/",
          "publishedOn": "2021-08-08T18:58:19.000Z",
          "wordCount": 532,
          "title": "I just discovered the capslock key has a slight delay on OSX"
        },
        {
          "id": "https://www.reddit.com/r/emacs/comments/oyl40m/emacsconf_2021_call_for_proposals/",
          "author": null,
          "description": "submitted by    /u/bandali  \n [link]   [comments]",
          "link": "https://www.reddit.com/r/emacs/comments/oyl40m/emacsconf_2021_call_for_proposals/",
          "publishedOn": "2021-08-05T15:45:49.000Z",
          "wordCount": 159,
          "title": "EmacsConf 2021 Call for Proposals"
        },
        {
          "id": "https://www.reddit.com/r/emacs/comments/oxo1xh/weekly_tips_tricks_c_thread/",
          "author": null,
          "description": "This is a thread for smaller, miscellaneous items that might not warrant a full post. \n Don't feel constrained in regards to what you post, just keep your post vaguely, generally on the topic of emacs.\n    submitted by    /u/AutoModerator  \n [link]   [comments]",
          "link": "https://www.reddit.com/r/emacs/comments/oxo1xh/weekly_tips_tricks_c_thread/",
          "publishedOn": "2021-08-04T08:15:17.000Z",
          "wordCount": 1088,
          "title": "Weekly Tips, Tricks, &c. Thread"
        }
      ]
    },
    {
      "title": "Zettelkasten Forum",
      "feedUrl": "https://forum.zettelkasten.de/discussions/feed.rss",
      "siteUrl": "https://forum.zettelkasten.de/",
      "articles": [
        {
          "id": "1920@/discussions",
          "author": "System",
          "description": "System Crafters Answered org-roam and Zettelkasten Questions in Livestream\n                   \nA Zettelkasten is a personal tool for thinking and writing that creates an interconnected web of thought. Its emphasis is on connection and not mere collection of ideas.\nRead the full story here",
          "link": "https://forum.zettelkasten.de/discussion/1920/system-crafters-answered-org-roam-and-zettelkasten-questions-in-livestream",
          "publishedOn": "2021-08-10T16:55:29.000Z",
          "wordCount": 187,
          "title": "System Crafters Answered org-roam and Zettelkasten Questions in Livestream"
        },
        {
          "id": "1919@/discussions",
          "author": "Nick",
          "description": "I am very interested in this topic/question, so I thought to spin it out to its own post instead of talking about it in a post where it isn't as relevant\n\n  \nI'm afraid I have to disagree. There is a difference, a sliding scale, a spectrum in ZK work focused on literature, just as there is a spectrum of other types of \"X-driven ZK work.\" Moving my skills \"up\" the scales is a goal, and it is always possible to move on the scale. I have to be vigilant that I don't backslide. Thinking and writing about the processes used in ZK work help clarify meaning. Some processes are counterproductive to our goals and there is a good chance we are blind to this - from @Will comment here\n\n\nHow would you rank the different tasks in terms of their utility to your zettelkasten? Here is my current ranking from top (highest utility) to bottom\nCreating Combinations of Ideas\nCreating Variations of Ideas\nCreating Nonobvious Connections (e.g. conceptual connections)\nReformulating Ideas from Literature\nAdding Notes to a Structure Note\nCreating Connections based on Keywords (Obvious Connections)\nCopying and Pasting Ideas from Literature\nUnsure: \n* Creating Metacognitive Knowledge not for yourself, but for the zettelkasten\n* Clarifying Notes\n* Organizing Old Notes",
          "link": "https://forum.zettelkasten.de/discussion/1919/how-do-you-value-your-zettelkasten-tasks",
          "publishedOn": "2021-08-10T15:40:19.000Z",
          "wordCount": 429,
          "title": "How do you Value your Zettelkasten Tasks?"
        },
        {
          "id": "1918@/discussions",
          "author": "Nick",
          "description": "I'm curious for people using the Archives. How big do your structure notes tend to get (e.g. how many bullet points)? Also how deep does it typically get for you (tabs)? How big are your biggest structure notes?",
          "link": "https://forum.zettelkasten.de/discussion/1918/nature-of-your-structure-notes",
          "publishedOn": "2021-08-05T05:27:47.000Z",
          "wordCount": 720,
          "title": "Nature of your Structure Notes"
        },
        {
          "id": "1917@/discussions",
          "author": "ctietze",
          "description": "How to get v1.7.x\nOn the Cutting Edge update channel, v1.7.0 just hit, and it brings the new MultiMarkdown-aware editor.\nWhat's different?\nIf everything goes well, then at the end of this testing phase, everything should look exactly like it did before.\nBut everything should be so much faster now.\nIf everything should look the same, what's different?!\nThe editor now recognized Markdown better. Less unhandled edge cases. Less styling surprises.\nBut since applying theme styles is different, there are the occasional visual quirks, like the bracket colors in link definitions being color of links instead of being the color of link definitions. Please report anything you notice via email or here. I'll be patching these mostly in the upcoming days.\nSome things also look different, but on purpose:…",
          "link": "https://forum.zettelkasten.de/discussion/1917/the-archive-v1-7-0-brings-multimarkdown-to-the-masses",
          "publishedOn": "2021-08-04T19:37:23.000Z",
          "wordCount": 704,
          "title": "The Archive v1.7.0 Brings MultiMarkdown to the Masses 🎉"
        },
        {
          "id": "1916@/discussions",
          "author": "Will",
          "description": "When searching my archive for a term, the first instance of a term in a note will have a \"backgroundColor\" that doesn't seem to respond to the \"backgroundColor\" or the \"unfocusedBackgroundColor\". As soon as it is selected it becomes focused and changes to the \"backgroundColor\".\nIs there a way to get the initial instance of the hit to match the highlighted backgroundColor?\nHere are two screenshots showing the behavior. This is using @Basil's PrettyFunctional theme.\n\n\nAfter selection the first instance.",
          "link": "https://forum.zettelkasten.de/discussion/1916/can-you-help-with-a-theming-dilemma",
          "publishedOn": "2021-08-04T14:58:13.000Z",
          "wordCount": 366,
          "title": "Can you help with a theming dilemma?"
        },
        {
          "id": "1914@/discussions",
          "author": "System",
          "description": "Live Zettelkasten Session on Aug 13th\n                   \nTune in on 2021-08-13, 7 p.m. CEST\nRead the full story here",
          "link": "https://forum.zettelkasten.de/discussion/1914/live-zettelkasten-session-on-aug-13th",
          "publishedOn": "2021-08-04T06:36:27.000Z",
          "wordCount": 159,
          "title": "Live Zettelkasten Session on Aug 13th"
        },
        {
          "id": "1912@/discussions",
          "author": "daeq0",
          "description": "I am quite new to Zettelkasten.\nI still have a doubt though.. Should notes link only to older ones? If yes, they are connected like a directed acyclic graph.\nThe argument for it would be:\nneed to change, they are just linked to from new ones\nCounterarguments:\nAlso I am not sure what the implications would be for links between literature and permanent notes.\nLike.. Literature note can link to previous permanent notes that are useful for the idea. But what for permanent notes created just to explain something in the literature note? I guess we treat them as if they were older than the literature note, even if the UID is more recent (timestamp) breaking a bit the rule. This means: create the new permanent note but linking to it from the older literature note. As for permanent notes that then emerge from literature note review — meaning after finishing the literature note — I guess they link the literature note that inspired their creation.",
          "link": "https://forum.zettelkasten.de/discussion/1912/links-and-dag",
          "publishedOn": "2021-08-03T13:13:09.000Z",
          "wordCount": 778,
          "title": "Links and DAG"
        },
        {
          "id": "1911@/discussions",
          "author": "qiansheng",
          "description": "The image preview didn't work when I wrote it looks like the photos\n\n\nHow can I resolve this problem?",
          "link": "https://forum.zettelkasten.de/discussion/1911/the-image-preview-doesnt-works-when-the-image-path-is-an-url",
          "publishedOn": "2021-07-30T11:50:23.000Z",
          "wordCount": 284,
          "title": "The image preview doesn't works when the image path is an url"
        },
        {
          "id": "1910@/discussions",
          "author": "System",
          "description": "org-roam (Emacs Zettelkasten Package) Version 2 Released\n                   \nA Zettelkasten is a personal tool for thinking and writing that creates an interconnected web of thought. Its emphasis is on connection and not mere collection of ideas.\nRead the full story here",
          "link": "https://forum.zettelkasten.de/discussion/1910/org-roam-emacs-zettelkasten-package-version-2-released",
          "publishedOn": "2021-07-29T17:23:34.000Z",
          "wordCount": 969,
          "title": "org-roam (Emacs Zettelkasten Package) Version 2 Released"
        },
        {
          "id": "1909@/discussions",
          "author": "Odyssian_Voyager",
          "description": "Greetings! I am a doctoral student hoping to gain insights about the Zettelkasten system. It is my hope to develop a system that allows me to write productively for my field and accrue a vast body of knowledge along the way. From what I have read thus far on the forum, articles about the Luhmann's numerical system have piqued my interested because I do want to use it in my system; however, I am still trying to grasp exactly how the new UID, aside from Luhmann's numerical one, is used for linking to other notes in the digital slip-box. I am currently deepening my understanding of this system by reading How To Take Smart Notes.\nPertaining to software, I am in need of advice. I have both Obsidian and Zettlr downloaded, having used Obsidian in the past for note taking but not as well organized as I would have liked. The latter software is a recent find; I have no experience with it. Yet I am open to suggestions concerning other applications available for Linux.\nWith regard to my studies, I am in the midst of my coursework and trying to figure out my niche, but I do have an affinity for Plato and Spinoza. What led me to the field in the first place was the Islamic philosophers, namely Al-Farabi and Ibn-Rushd (Averroes). Anyhow, I look forward to perusing the forum for past insights and discussions.",
          "link": "https://forum.zettelkasten.de/discussion/1909/aspiring-political-philosopher-needs-a-better-note-taking-system",
          "publishedOn": "2021-07-28T21:44:53.000Z",
          "wordCount": 1098,
          "title": "Aspiring political philosopher needs a better note-taking system."
        },
        {
          "id": "1908@/discussions",
          "author": "Nick",
          "description": "I have my head wrapped around taking notes from your typical nonfiction books and feeding them into my zettelkasten. I'm not sure though what is the best way to take notes from a textbook if you are learning a topic for the very first time (psychology 101, history 101, neuroscience 101, etc.)?\nIf you were to be incredibly systematic with it, I imagine it'd take an incredibly long time because they tend to be information dense. So what level of note-taking is the right one? At the most abstract, you could reduce the textbook down to a paragraph summary. You could reduce it down into a set of notes based on the key concept of each chapter. Or you could be extremely detailed and create a note for every concept you come across. The advantage of that is it might help you see how everything is connected and you have a large set of notes to hook new notes from. The disadvantage would be that it is an incredible time sink and that a lot of the concepts aren't worth having notes on because you will internalize them as you do with common words.",
          "link": "https://forum.zettelkasten.de/discussion/1908/how-do-you-approach-learning-from-textbooks-with-the-zettelkasten-method",
          "publishedOn": "2021-07-28T04:32:58.000Z",
          "wordCount": 951,
          "title": "How do you approach learning from textbooks with the zettelkasten method?"
        },
        {
          "id": "1907@/discussions",
          "author": "bradfordfournier",
          "description": "(new to zk)\nGiven all the discussion of how L-style ID's can be association-brittle relative to using just links, I was wondering if the following has an implementation in any digital system.\nI'd like the following:  an L-style ref to \"position-sequence\" extended to differentiate between paths through the sequence --based on context --  in which one context path may share some im/proper subset of the other.\nExample: given say \nHere we have the shared edge (xa,xb) = (1b,1ba). And indeed it would be stultifying to assume that the meaning in context2 is partially identical to context1 simply because of the shared referential sub-structure.\nQuestion: for the advocates of links only: is there a simple way to differentiate multiple referential contexts. I.e., to allow for the same edge/link to be given different meaning.\nThis could be via named links -- not just links named for their nodes, or multi-links, or some in-note context to mimic this behavior.\nDoes such a thing exist?",
          "link": "https://forum.zettelkasten.de/discussion/1907/multi-edges-named-links-sub-graph-a-means-of-capturing-fluid-associations",
          "publishedOn": "2021-07-27T01:48:04.000Z",
          "wordCount": 3893,
          "title": "Multi-edges / Named Links / Sub-graph : a means of capturing fluid associations"
        },
        {
          "id": "1906@/discussions",
          "author": "thomasteepe",
          "description": "I find @Will's idea of sharing zettels great - so here comes my  latest example, with a number of remarks. \n\n\nRemarks:\nThe 2013 Zettelkasten Exhibition in the Literaturmuseum der Moderne in Marbach/Germany was titled \"Zettelkästen. Maschinen der Phantasie\" (perhaps roughly \"Zettelkästen. Machines of Imagination\"). I'm fascinated by the question how a zettelkasten can support creative processes. My zettel shows one of the approaches I am experimenting with.\nThe basic idea is the following: I collect ideas triggered by the question \"How can inventive principles from the TRIZ method be used to make zettelkasten work more interesting, successful or effective?\" Background: TRIZ is the \"theory of inventive problem solving\", and one of its key components is a list of 40 (or so) inventive principl…",
          "link": "https://forum.zettelkasten.de/discussion/1906/sharing-a-zettel-ideas-from-triz-principles",
          "publishedOn": "2021-07-23T22:06:32.000Z",
          "wordCount": 1067,
          "title": "Sharing a zettel: Ideas from TRIZ principles"
        },
        {
          "id": "1905@/discussions",
          "author": "reidjs",
          "description": "Hello, I keep all my notes in a version controlled fork of foam: https://foambubble.github.io/foam/\nI have a lot of ebooks on my computer in .epub, .mobi, and .pdf formats. I read most of these on a kindle and I sync books to my kindle using calibre (https://calibre-ebook.com/). I highlight a lot of things and take a lot of notes while reading on the kindle.\nDoes anyone have a workflow for syncing highlights and notes taken on the kindle to markdown files?\nThank you",
          "link": "https://forum.zettelkasten.de/discussion/1905/ebooks-and-kindle-notes",
          "publishedOn": "2021-07-22T23:53:23.000Z",
          "wordCount": 936,
          "title": "ebooks and kindle notes"
        },
        {
          "id": "1903@/discussions",
          "author": "rhaynes",
          "description": "Hi folks, I am quite smitten with some of the features in auratikum.  Being able to search for and link notes to notes, or references to notes, or notes to references without having to \"manually\" link the items in markdown (for example).  Also it nicely takes care of the storage of notes and references in projects.   Any other similar self-hosted / open source software available?   And I forgot - mathjax (or similar) is essential.",
          "link": "https://forum.zettelkasten.de/discussion/1903/alernatives-to-auratikum",
          "publishedOn": "2021-07-21T19:49:04.000Z",
          "wordCount": 279,
          "title": "alernatives to auratikum ?"
        },
        {
          "id": "1902@/discussions",
          "author": "System",
          "description": "RE: Backlinks Should Be Context-Rich\r\n                   \nJared Gorski wrote a response to my article “Backlinks are bad links”. Since it’s a short and concise response, a re-response is warranted. He summarised my point fairly and sufficiently, so I don’t need to repeat myself here. If you are not familiar, please read the article linked above. I’ll reply to Jared’s post point by point.\n\r\n                   \nRead the full story here",
          "link": "https://forum.zettelkasten.de/discussion/1902/re-backlinks-should-be-context-rich",
          "publishedOn": "2021-07-20T07:51:39.000Z",
          "wordCount": 917,
          "title": "RE: Backlinks Should Be Context-Rich"
        }
      ]
    }
  ],
  "cliVersion": "1.11.0"
}