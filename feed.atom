<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://nimor111.github.io/feeds/index.html</id>
    <title>osmos::feed</title>
    <updated>2021-09-23T20:41:32.406Z</updated>
    <generator>osmosfeed 1.11.1</generator>
    <link rel="alternate" href="https://nimor111.github.io/feeds/index.html"/>
    <link rel="self" href="https://nimor111.github.io/feeds/feed.atom"/>
    <entry>
        <title type="html"><![CDATA[Moldable Emacs: extending the Playground powers via hooks (to include Dired)]]></title>
        <id>https://www.reddit.com/r/emacs/comments/pu3v7r/moldable_emacs_extending_the_playground_powers/</id>
        <link href="https://www.reddit.com/r/emacs/comments/pu3v7r/moldable_emacs_extending_the_playground_powers/"/>
        <updated>2021-09-23T20:23:50.000Z</updated>
        <summary type="html"><![CDATA[submitted by    /u/AndreaSomePostfix  
 [link]   [comments]]]></summary>
        <author>
            <name>M-x emacs-reddit</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Announcing experimental support for Janet programming language in PEL]]></title>
        <id>https://www.reddit.com/r/emacs/comments/pu3mtc/announcing_experimental_support_for_janet/</id>
        <link href="https://www.reddit.com/r/emacs/comments/pu3mtc/announcing_experimental_support_for_janet/"/>
        <updated>2021-09-23T20:12:03.000Z</updated>
        <summary type="html"><![CDATA[I just added experimental support for Janet in PEL. Details in the Janet PDF which is better viewed with a browser, like Firefox, that can render PDF.
    submitted by    /u/prouleau001  
 [link]   [comments]]]></summary>
        <author>
            <name>M-x emacs-reddit</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Yaml parsing with preserved line numbers]]></title>
        <id>https://www.reddit.com/r/haskell/comments/pu3c9j/yaml_parsing_with_preserved_line_numbers/</id>
        <link href="https://www.reddit.com/r/haskell/comments/pu3c9j/yaml_parsing_with_preserved_line_numbers/"/>
        <updated>2021-09-23T19:56:54.000Z</updated>
        <summary type="html"><![CDATA[Hi, I need yaml parsing library that preserves line number, and column number of each parsed token. I checked yaml and HsSyck libraries, and couldn't find any solution. Do you know anything with that capabilities or I have to write it myself from scratch?
    submitted by    /u/t4ccer  
 [link]   [comments]]]></summary>
        <author>
            <name>Haskell :: Reddit</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Recursively delete JSON keys]]></title>
        <id>https://www.reddit.com/r/haskell/comments/pu2r7r/recursively_delete_json_keys/</id>
        <link href="https://www.reddit.com/r/haskell/comments/pu2r7r/recursively_delete_json_keys/"/>
        <updated>2021-09-23T19:27:30.000Z</updated>
        <summary type="html"><![CDATA[I'm currently working on a project that relies JSON comparison for tests instead of standard equality (yeah, I know). For particular reasons, we ignore part of the JSON when comparing between the expected and the actual value. Currently, the code is something like this: 
 ```haskell import qualified Data.HashMap.Strict as H
 deleteValues (Object o) = Object $ H.delete "values" -- Currently removed "values" key. deleteValues _ = Object H.empty ```
 We had to change our JSON and we added a new key, which we don't want to consider when testing. This key can appear on several positions, not only at the top level like values.
 For example, we have something like this:
 json { "values": [], "info": "ok", "key_to_remove": 0, "details": null } 
 Here the key_to_remove is only at the top level. But we could have something like:
  { "values": [], "info": "ok", "key_to_remove": 1, "details": { "info": "ok", "key_to_remove": 2 } } 
 The nesting can keep going on, and I really would like to avoid manually traversing the object looking and deleting the key.
 The idea is to remove all key_to_remove from the JSON object, independent of the position or value that it holds.
  
Edit: solution:
 haskell deleteKey :: Text -> Value -> Value deleteKey k (Object o) = Object $ H.delete k (deleteKey k <$> o) deleteKey k (Array arr) = Array (deleteKey k <$> arr) deleteKey _ v = v 
    submitted by    /u/valcron1000  
 [link]   [comments]]]></summary>
        <author>
            <name>Haskell :: Reddit</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[License terms for ReadTheOrg]]></title>
        <id>https://www.reddit.com/r/orgmode/comments/pu2m53/license_terms_for_readtheorg/</id>
        <link href="https://www.reddit.com/r/orgmode/comments/pu2m53/license_terms_for_readtheorg/"/>
        <updated>2021-09-23T19:21:07.000Z</updated>
        <summary type="html"><![CDATA[I recently discovered exporting your org files to html. Someone developed a very helpful theme package [here](https://github.com/fniessen/org-html-themes] which renders just like ReadTheDocs.
 I'm trying to be better about code documentation and would like to use this for my current contract. It needs to be hosted locally. I was thinking of using this to convert my literate programming org docs into something my client can browse.
 The license here is GPL3
 Can I use this project to render the documentation for my client's commercial, proprietary code? How can I comply with this license and is there any possibility that it can interfere with my client's IP or legal responsibilities in any way?
 I'm an open-source guy but unfortunately that's not how I make my living. If I cannot use this, can anyone point me to the typical workflow?
    submitted by    /u/tonicinhibition  
 [link]   [comments]]]></summary>
        <author>
            <name>Org-mode</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[vim vs emacs aside but how does emacs stack up against the terminal itself]]></title>
        <id>https://www.reddit.com/r/emacs/comments/pu2j5q/vim_vs_emacs_aside_but_how_does_emacs_stack_up/</id>
        <link href="https://www.reddit.com/r/emacs/comments/pu2j5q/vim_vs_emacs_aside_but_how_does_emacs_stack_up/"/>
        <updated>2021-09-23T19:17:16.000Z</updated>
        <summary type="html"><![CDATA[I'm a few days into learning emacs and as an editor I feel that vim is right for me but since everybody says that emacs is more than just a text editor and videos on youtube about emacs showing off the emacs capabilities like reading emails, browsing files, viewing images, playing tetris, github..... but does a terminal emulator not do that well? For files I use ranger, ueberzug and sxiv for images, neomutt for emails, tmux for tabs and sessions, and there's so many other terminal applications that do the job that is never supposed to be done by vim. Vim is just a great text editor. How can it be said that vim can't view images or browse github or reply to emails but emacs can... I mean there's a tonne of terminal applications that do those jobs.
 I have no grudge against emacs but I'm a terminal user, I use dwm to manage windows, most of the fancy terminal applications that do emails and stuff.... So to move forward with emacs, I wish to know the benefits I'd have. To make it more simple I'll break it down into two parts :
  
emacs as editor or vim
 emacs as not an editor or the terminal
  
For the first part IG everyone would agree upon vim. Isn't that the reason why we have evil mode? and IDK the answer to the second part and I can't even say because I've used terminal applications but haven't explored the 'other than text editor' capabilities of emacs. So I want y'all to point out where the simplest tool(the terminal) fails to do the job that emacs can.
    submitted by    /u/zim0369  
 [link]   [comments]]]></summary>
        <author>
            <name>M-x emacs-reddit</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[treemacs (20210923.1901) --- A tree style file explorer package]]></title>
        <id>https://melpa.org/packages/treemacs-20210923.1901.tar</id>
        <link href="https://melpa.org/#/treemacs"/>
        <updated>2021-09-23T19:01:00.000Z</updated>
        <summary type="html"><![CDATA[The treemacs package has been updated to version 20210923.1901.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[[ANN] dank-mode, a major mode for browsing Reddit]]></title>
        <id>https://www.reddit.com/r/emacs/comments/pu232y/ann_dankmode_a_major_mode_for_browsing_reddit/</id>
        <link href="https://www.reddit.com/r/emacs/comments/pu232y/ann_dankmode_a_major_mode_for_browsing_reddit/"/>
        <updated>2021-09-23T18:56:22.000Z</updated>
        <summary type="html"><![CDATA[https://github.com/john2x/dank-mode
    submitted by    /u/ares623  
 [link]   [comments]]]></summary>
        <author>
            <name>M-x emacs-reddit</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[xah-elisp-mode (20210923.1847) --- Major mode for editing emacs lisp.]]></title>
        <id>https://melpa.org/packages/xah-elisp-mode-20210923.1847.el</id>
        <link href="https://melpa.org/#/xah-elisp-mode"/>
        <updated>2021-09-23T18:47:00.000Z</updated>
        <summary type="html"><![CDATA[The xah-elisp-mode package has been updated to version 20210923.1847.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Anybody using a digital Zettelkasten without backlinks? Would love to hear your experience]]></title>
        <id>1981@/discussions</id>
        <link href="https://forum.zettelkasten.de/discussion/1981/anybody-using-a-digital-zettelkasten-without-backlinks-would-love-to-hear-your-experience"/>
        <updated>2021-09-23T17:18:28.000Z</updated>
        <summary type="html"><![CDATA[Greetings,
So this solution would take me back to the old Zettelkasten concept: each note has a UID, and I refer to the note by that UID. Period.
Anybody using a digital Zettelkasten without backlinks?
Thank you!]]></summary>
        <author>
            <name>IvanFerrero</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Diehl's comments on Haskell numbers confuse...]]></title>
        <id>https://www.reddit.com/r/haskell/comments/ptzzwg/diehls_comments_on_haskell_numbers_confuse/</id>
        <link href="https://www.reddit.com/r/haskell/comments/ptzzwg/diehls_comments_on_haskell_numbers_confuse/"/>
        <updated>2021-09-23T17:17:33.000Z</updated>
        <summary type="html"><![CDATA[Can someone maybe explain/elaborate a bit what S. Diehl is saying here (What I...):
 To add to the confusion numerical literals in Haskell are desugared into a function from a numeric typeclass which yields a polymorphic value that can be instantiated to any instance of the Num or Fractional typeclass at the call-site, depending on the inferred type.
 To use a blunt metaphor, we’re effectively placing an object in a hole and the size and shape of the hole defines the object you place there. This is very different than in other languages where a numeric literal like 2.718 is hard coded in the compiler to be a specific type ( double or something ) and you cast the value at runtime to be something smaller or larger as needed.
 42 :: Num a => a fromInteger (42 :: Integer) 2.71 :: Fractional a => a fromRational (2.71 :: Rational) 
    submitted by    /u/teilchen010  
 [link]   [comments]]]></summary>
        <author>
            <name>Haskell :: Reddit</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Any suggestions on how to get emacs to expand $ALIAS directory names in the minibuffer?]]></title>
        <id>https://www.reddit.com/r/emacs/comments/ptzm1y/any_suggestions_on_how_to_get_emacs_to_expand/</id>
        <link href="https://www.reddit.com/r/emacs/comments/ptzm1y/any_suggestions_on_how_to_get_emacs_to_expand/"/>
        <updated>2021-09-23T17:00:01.000Z</updated>
        <summary type="html"><![CDATA[Hey r/emacs!
 On previous installs of emacs, when opening a directory defined as an alias such as:
 export DIRNAME=/some/dir/name
 emacs would allow me to expand the alias in the minibuffer so that I can go back a level or two if necessary. If I recall correctly, I might have had to do a Double-Escape Double-Tab to make it expand. Is there anything I can set in my profile to allow emacs to expand out these aliases again? I looked online, but cannot seem to find any info.
 Thank you everyone!
    submitted by    /u/Ralph_S_Mouse  
 [link]   [comments]]]></summary>
        <author>
            <name>M-x emacs-reddit</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Scala3 typeclassery with graphs]]></title>
        <id>https://www.reddit.com/r/scala/comments/ptzlh2/scala3_typeclassery_with_graphs/</id>
        <link href="https://www.reddit.com/r/scala/comments/ptzlh2/scala3_typeclassery_with_graphs/"/>
        <updated>2021-09-23T16:59:13.000Z</updated>
        <summary type="html"><![CDATA[Here is how I think a graph library using the new Scala3 typeclasses could look
 https://fabianmurariu.github.io/posts/scala3-typeclassery-graphs/
    submitted by    /u/codecoinbot  
 [link]   [comments]]]></summary>
        <author>
            <name>Scala</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Modify the SRC Blocks markers to much more eyes appealing ones]]></title>
        <id>https://www.reddit.com/r/orgmode/comments/ptzcbj/modify_the_src_blocks_markers_to_much_more_eyes/</id>
        <link href="https://www.reddit.com/r/orgmode/comments/ptzcbj/modify_the_src_blocks_markers_to_much_more_eyes/"/>
        <updated>2021-09-23T16:47:22.000Z</updated>
        <summary type="html"><![CDATA[Hi,
 Just tried org mode and it's taking over my life .
 I am writing every documentation with it.
 I am trying to replace the markers with `o` to get something like this:
 ​
 markers replaced
 And sometimes I just want to insert a single line of code and I hope to get this approach:
 ​
 markers line return omitted
 Any Idea please?
    submitted by    /u/cuore-e4-e5  
 [link]   [comments]]]></summary>
        <author>
            <name>Org-mode</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Please explain this syntax]]></title>
        <id>https://www.reddit.com/r/haskell/comments/ptyvuo/please_explain_this_syntax/</id>
        <link href="https://www.reddit.com/r/haskell/comments/ptyvuo/please_explain_this_syntax/"/>
        <updated>2021-09-23T16:25:40.000Z</updated>
        <summary type="html"><![CDATA[inputParameters :: QuantityDictionary
 inputParameters = impVariab "inputParameters" (nounPhrase
 "these values" "holding values")
 (Actor "InputParameters") (label "inputParameters")
 ​
 function declaration is at top, then for the function definition:
 why are there three ()'s?
    submitted by    /u/jamesjean2001  
 [link]   [comments]]]></summary>
        <author>
            <name>Haskell :: Reddit</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[helm-ls-git (20210923.1604) --- list git files.]]></title>
        <id>https://melpa.org/packages/helm-ls-git-20210923.1604.el</id>
        <link href="https://melpa.org/#/helm-ls-git"/>
        <updated>2021-09-23T16:04:00.000Z</updated>
        <summary type="html"><![CDATA[The helm-ls-git package has been updated to version 20210923.1604.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[ghub (20210923.1538) --- Minuscule client libraries for Git forge APIs.]]></title>
        <id>https://melpa.org/packages/ghub-20210923.1538.tar</id>
        <link href="https://melpa.org/#/ghub"/>
        <updated>2021-09-23T15:38:00.000Z</updated>
        <summary type="html"><![CDATA[The ghub package has been updated to version 20210923.1538.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[evil-collection (20210923.1521) --- A set of keybindings for Evil mode]]></title>
        <id>https://melpa.org/packages/evil-collection-20210923.1521.tar</id>
        <link href="https://melpa.org/#/evil-collection"/>
        <updated>2021-09-23T15:21:00.000Z</updated>
        <summary type="html"><![CDATA[The evil-collection package has been updated to version 20210923.1521.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[ocamlformat (20210923.1348) --- Utility functions to format ocaml code]]></title>
        <id>https://melpa.org/packages/ocamlformat-20210923.1348.el</id>
        <link href="https://melpa.org/#/ocamlformat"/>
        <updated>2021-09-23T13:48:00.000Z</updated>
        <summary type="html"><![CDATA[The ocamlformat package has been updated to version 20210923.1348.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[annotate (20210923.1338) --- annotate files without changing them]]></title>
        <id>https://melpa.org/packages/annotate-20210923.1338.el</id>
        <link href="https://melpa.org/#/annotate"/>
        <updated>2021-09-23T13:38:00.000Z</updated>
        <summary type="html"><![CDATA[The annotate package has been updated to version 20210923.1338.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Maintainer for ox-pandoc!]]></title>
        <id>https://www.reddit.com/r/emacs/comments/ptvd5q/maintainer_for_oxpandoc/</id>
        <link href="https://www.reddit.com/r/emacs/comments/ptvd5q/maintainer_for_oxpandoc/"/>
        <updated>2021-09-23T13:33:07.000Z</updated>
        <summary type="html"><![CDATA[We need someone to maintain ox-pandoc https://github.com/kawabata/ox-pandoc/issues/78#issuecomment-925115525. Anyone interested?
    submitted by    /u/FormerAct  
 [link]   [comments]]]></summary>
        <author>
            <name>M-x emacs-reddit</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Is it possible to make this behavior while typing...]]></title>
        <id>https://www.reddit.com/r/emacs/comments/ptv0hl/is_it_possible_to_make_this_behavior_while_typing/</id>
        <link href="https://www.reddit.com/r/emacs/comments/ptv0hl/is_it_possible_to_make_this_behavior_while_typing/"/>
        <updated>2021-09-23T13:14:41.000Z</updated>
        <summary type="html"><![CDATA[Is it possible to make a command :
  
When I press some combination with Control, it types a specific word in the document where my cursor is?
  
Like for example, C-x C-w = Word
  
Or even Is it possible to make it that way: if I am typing in the text for example "jjj" it changes "jjj" on the fly to the word I need?
  
   submitted by    /u/Dimimimitriks  
 [link]   [comments]]]></summary>
        <author>
            <name>M-x emacs-reddit</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How to programmatically run avy-goto-char-timer]]></title>
        <id>https://www.reddit.com/r/emacs/comments/ptuvsq/how_to_programmatically_run_avygotochartimer/</id>
        <link href="https://www.reddit.com/r/emacs/comments/ptuvsq/how_to_programmatically_run_avygotochartimer/"/>
        <updated>2021-09-23T13:08:06.000Z</updated>
        <summary type="html"><![CDATA[I would like to write a function that can serve as a "fall-back" when evil-ex-search returns too many results. To do this I need a function that starts an avy selection interface (e.g., like avy-goto-char-timer) but uses the prior evil-ex-search-pattern.
 ​
 I have this function but it doesn't work because I am using the avy functions incorrectly. Could someone give me a hand? I feel like there must be a simple way.
 ​
 (defun jds/evil-search-convert-avy-goto-char-timer () "Repeat the last evil-search but this time using avy-goto-char-timer." (interactive) (let ((lsearch (car evil-ex-search-pattern))) (avy-with avy-goto-char-timer (avy-process lsearch))))) 
 ​
    submitted by    /u/JustinSilverman  
 [link]   [comments]]]></summary>
        <author>
            <name>M-x emacs-reddit</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[I would like some input on my code if anybody have time. I recently discovered that i can use variables in Haskell (thought one could not use them for some reason). Would just like some input on how i have done it.]]></title>
        <id>https://www.reddit.com/r/haskell/comments/pttsx6/i_would_like_some_input_on_my_code_if_anybody/</id>
        <link href="https://www.reddit.com/r/haskell/comments/pttsx6/i_would_like_some_input_on_my_code_if_anybody/"/>
        <updated>2021-09-23T12:09:23.000Z</updated>
        <summary type="html"><![CDATA[count = 0 altMap _ _ [] _ = [] altMap func1 func2 (x:xs) count = if (even count) then func1 x : altMap func1 func2 xs (count+1) else func2 x : altMap func1 func2 xs (count+1) 
    submitted by    /u/Hadse  
 [link]   [comments]]]></summary>
        <author>
            <name>Haskell :: Reddit</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Issue 282]]></title>
        <id>https://haskellweekly.news/issue/282.html</id>
        <link href="https://haskellweekly.news/issue/282.html"/>
        <updated>2021-09-23T12:00:00.000Z</updated>
        <summary type="html"><![CDATA[Welcome to another issue of Haskell Weekly!
Haskell is a safe, purely functional programming language with a fast, concurrent runtime.
This is a weekly summary of what’s going on in its community.
Featured
Aeson Object Design (Part 4) by Travis Cardwell
In Aeson Object Design (Part 2), I explored the cost of representing objects with various data structures. Today, I created the benchmarks for the normal scenario.
Automatically updated, cached views with lens by Brent Yorgey
Recently I discovered a nice way to deal with records where certain fields of the record cache some expensive function of other fields, using the lens library.
Browse Hackage from the terminal by Marcelo Lazaroni
The Haskell ecosystem has great facilities for searching and navigating package documentation using the bro…]]></summary>
        <author>
            <name>Haskell Weekly</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Issue 282 :: Haskell Weekly newsletter]]></title>
        <id>https://www.reddit.com/r/haskell/comments/pttc6c/issue_282_haskell_weekly_newsletter/</id>
        <link href="https://www.reddit.com/r/haskell/comments/pttc6c/issue_282_haskell_weekly_newsletter/"/>
        <updated>2021-09-23T11:41:13.000Z</updated>
        <summary type="html"><![CDATA[submitted by    /u/haskellweekly  
 [link]   [comments]]]></summary>
        <author>
            <name>Haskell :: Reddit</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[bibtex-actions (20210923.1102) --- Bibliographic commands based on completing-read]]></title>
        <id>https://melpa.org/packages/bibtex-actions-20210923.1102.tar</id>
        <link href="https://melpa.org/#/bibtex-actions"/>
        <updated>2021-09-23T11:02:00.000Z</updated>
        <summary type="html"><![CDATA[The bibtex-actions package has been updated to version 20210923.1102.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[EWW fails to render sometimes]]></title>
        <id>https://www.reddit.com/r/emacs/comments/ptsrg0/eww_fails_to_render_sometimes/</id>
        <link href="https://www.reddit.com/r/emacs/comments/ptsrg0/eww_fails_to_render_sometimes/"/>
        <updated>2021-09-23T11:01:34.000Z</updated>
        <summary type="html"><![CDATA[I have noticed certain websites that _should_ work in EWW but do not, for example libera.chat website. It displays a mostly blank page -- just window header and a "Skip to content" link that reloads page with same issue. Strangely, if I view source then `M-x shr-render-buffer` the page is rendered successfully.
 EWW prints the following in `*Messages*`:
  
Contacting host: libera.chat:80
 uncompressing publicsuffix.txt.gz...done
 error in process filter: image-type: Invalid image type ‘svg’
 error in process filter: Invalid image type ‘svg’
  
So yeah, I don't have SVG support, and the page contains a SVG image, but shouldn't EWW still proceed past that? After all, SHR could render the source just fine on its own (it skipped the SVG image).
 Any tips on how I can get this to work?
 Cygwin NTEmacs 27.2 (with -Q flag)
 (image-type-available-p 'svg) --> nil
    submitted by    /u/JibStyle209  
 [link]   [comments]]]></summary>
        <author>
            <name>M-x emacs-reddit</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[abl-mode (20210923.950) --- Python TDD minor mode]]></title>
        <id>https://melpa.org/packages/abl-mode-20210923.950.el</id>
        <link href="https://melpa.org/#/abl-mode"/>
        <updated>2021-09-23T09:50:00.000Z</updated>
        <summary type="html"><![CDATA[The abl-mode package has been updated to version 20210923.950.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[evil-matchit (20210923.931) --- Vim matchit ported to Evil]]></title>
        <id>https://melpa.org/packages/evil-matchit-20210923.931.tar</id>
        <link href="https://melpa.org/#/evil-matchit"/>
        <updated>2021-09-23T09:31:00.000Z</updated>
        <summary type="html"><![CDATA[The evil-matchit package has been updated to version 20210923.931.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[vulpea (20210923.806) --- A collection of org-roam note-taking functions]]></title>
        <id>https://melpa.org/packages/vulpea-20210923.806.tar</id>
        <link href="https://melpa.org/#/vulpea"/>
        <updated>2021-09-23T08:06:00.000Z</updated>
        <summary type="html"><![CDATA[The vulpea package has been updated to version 20210923.806.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[What is the emacs way to simulate the tmux behavior and is there a kind of fuzzy finder for M-x commands?]]></title>
        <id>https://www.reddit.com/r/emacs/comments/ptqa2g/what_is_the_emacs_way_to_simulate_the_tmux/</id>
        <link href="https://www.reddit.com/r/emacs/comments/ptqa2g/what_is_the_emacs_way_to_simulate_the_tmux/"/>
        <updated>2021-09-23T07:50:16.000Z</updated>
        <summary type="html"><![CDATA[Hey, guys, I'm switching from Vim and trying to set up behavior I'm currently familiar with. For my Django + React workflow I created the script which instantiated 3 tmux windows:
 in one I had my django related stuff (automatically initiate virtual env, navigate to project folder, start server);
 in second I had things related to running npm related things (again navigate to the project folder, run server)
 finally third - navigate to the project and start nvim there.
 So basically with one keypress I had my working setup running.
 I wanted to know what is the proper way to achieve this with emacs - with one keybinding start development setup with panes or buffers for multiple terminal instances and send specific commands for each instance and of course opening the editor. 
 The second thing is that I'm overwhelmed with the amount of commands for M-x. Naturally, I don't remember their names, and I thought that there should be something like fuzzy search. So if I need to jump to definition of a function - I can fuzzy-search for word definition, because right now it will show only the commands which start from word definition
    submitted by    /u/zajasu  
 [link]   [comments]]]></summary>
        <author>
            <name>M-x emacs-reddit</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Can you embed Emacs Lisp in other projects?]]></title>
        <id>https://www.reddit.com/r/emacs/comments/ptq8qb/can_you_embed_emacs_lisp_in_other_projects/</id>
        <link href="https://www.reddit.com/r/emacs/comments/ptq8qb/can_you_embed_emacs_lisp_in_other_projects/"/>
        <updated>2021-09-23T07:47:07.000Z</updated>
        <summary type="html"><![CDATA[Is it possible?
 Is any project doing it? 
 Are there any case studies or repositories to look at?
    submitted by    /u/BlessedXChilde  
 [link]   [comments]]]></summary>
        <author>
            <name>M-x emacs-reddit</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[php-cs-fixer (20210923.718) --- php-cs-fixer wrapper.]]></title>
        <id>https://melpa.org/packages/php-cs-fixer-20210923.718.el</id>
        <link href="https://melpa.org/#/php-cs-fixer"/>
        <updated>2021-09-23T07:18:00.000Z</updated>
        <summary type="html"><![CDATA[The php-cs-fixer package has been updated to version 20210923.718.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[What are some things that we ought to know about developing ideas but aren't talking about?]]></title>
        <id>1980@/discussions</id>
        <link href="https://forum.zettelkasten.de/discussion/1980/what-are-some-things-that-we-ought-to-know-about-developing-ideas-but-arent-talking-about"/>
        <updated>2021-09-23T07:09:16.000Z</updated>
        <summary type="html"><![CDATA[Since building your zettelkasten, what are some things you've learned about developing ideas (or/and coming up with insights) that you think are not being talked about enough?]]></summary>
        <author>
            <name>jellis</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[18 year-olds today grew up with search, and files and folders are foreign concepts]]></title>
        <id>1979@/discussions</id>
        <link href="https://forum.zettelkasten.de/discussion/1979/18-year-olds-today-grew-up-with-search-and-files-and-folders-are-foreign-concepts"/>
        <updated>2021-09-23T06:49:24.000Z</updated>
        <summary type="html"><![CDATA[This article discusses a current generational shift in the way people interact with computers:
https://www.theverge.com/22684730/students-file-folder-directory-structure-education-gen-z
Adapting an example from the article: Where 30 years ago the professors wouldn't understand how students could use a computer without knowing how to solder their own boards, nowadays professors don't understand how students came this far without organizing files, and understanding "the file system" at all.
I'm sharing this here because I do wonder what that means long-term for Zettelkasten software 
I have a couple anecdotes of friends and family that match. I bet some of you have heard similar stories.
Some teens doing internships (mandatory in Germany during your school years) at a design firm weren't acc…]]></summary>
        <author>
            <name>ctietze</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[What is the best book on problem solving? At least enlist 1 and also suggest the way to polish problem solving skills in programming?]]></title>
        <id>https://www.reddit.com/r/scala/comments/ptpeet/what_is_the_best_book_on_problem_solving_at_least/</id>
        <link href="https://www.reddit.com/r/scala/comments/ptpeet/what_is_the_best_book_on_problem_solving_at_least/"/>
        <updated>2021-09-23T06:41:23.000Z</updated>
        <summary type="html"><![CDATA[submitted by    /u/Dexter_4202021  
 [link]   [comments]]]></summary>
        <author>
            <name>Scala</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[modus-themes (20210923.636) --- Highly accessible themes (WCAG AAA)]]></title>
        <id>https://melpa.org/packages/modus-themes-20210923.636.tar</id>
        <link href="https://melpa.org/#/modus-themes"/>
        <updated>2021-09-23T06:36:00.000Z</updated>
        <summary type="html"><![CDATA[The modus-themes package has been updated to version 20210923.636.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Connecting to Azure SQL database.]]></title>
        <id>https://www.reddit.com/r/emacs/comments/ptoenb/connecting_to_azure_sql_database/</id>
        <link href="https://www.reddit.com/r/emacs/comments/ptoenb/connecting_to_azure_sql_database/"/>
        <updated>2021-09-23T05:27:37.000Z</updated>
        <summary type="html"><![CDATA[I have to work with an Azure SQL database for school. I was wondering if anyone here has an Emacs solution for running queries and *.sql files in connection to a Microsoft Azure SQL sever?
    submitted by    /u/scribe36  
 [link]   [comments]]]></summary>
        <author>
            <name>M-x emacs-reddit</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[multi-compile (20210923.233) --- Multi target interface to compile.]]></title>
        <id>https://melpa.org/packages/multi-compile-20210923.233.el</id>
        <link href="https://melpa.org/#/multi-compile"/>
        <updated>2021-09-23T02:33:00.000Z</updated>
        <summary type="html"><![CDATA[The multi-compile package has been updated to version 20210923.233.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Format specifier doesn’t match argument type]]></title>
        <id>https://www.reddit.com/r/orgmode/comments/ptk252/format_specifier_doesnt_match_argument_type/</id>
        <link href="https://www.reddit.com/r/orgmode/comments/ptk252/format_specifier_doesnt_match_argument_type/"/>
        <updated>2021-09-23T00:55:58.000Z</updated>
        <summary type="html"><![CDATA[I am trying to do a simple markdown export of my org file. I am getting the error
  
Format specifier doesn’t match argument type
  
I cleared all the contents just left a barebone file with just one heading as below
 * Heading 1
 I get the same error. Please let me know what are the pre-requisites for exporting into markdown and how do I fix this error.
 I am using function org-md-export-to-markdown function.
    submitted by    /u/GeekSync  
 [link]   [comments]]]></summary>
        <author>
            <name>Org-mode</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Functional data pipelines with funflow2]]></title>
        <id>https://tweag.io/blog/2021-09-23-funflow2-intro/</id>
        <link href="https://tweag.io/blog/2021-09-23-funflow2-intro/"/>
        <updated>2021-09-23T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[As the data science and machine learning fields have grown over the past decade,
so has the number of data pipelining frameworks. What started out largely as a
set of tools for extract-transform-load (ETL) processes has expanded into a
diverse ecosystem of libraries, all of which aim to provide data teams with the
ability to move and process their data. Apache Airflow, Beam, Luigi, Azkaban — the list goes on and
on.
As users of several of the above frameworks, Tweag has a special interest in
data pipelines. While working with them, we have observed a few common
shortcomings which make writing and debugging data pipelines more complex than
it needs to be. These shortcomings include limited
composability of pipeline components, as well as minimal
support for static analysis of pipelines. Thi…]]></summary>
        <author>
            <name>Tweag - Engineering blog</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[kubel-evil (20210922.2325) --- extension for kubel to provide evil keybindings]]></title>
        <id>https://melpa.org/packages/kubel-evil-20210922.2325.el</id>
        <link href="https://melpa.org/#/kubel-evil"/>
        <updated>2021-09-22T23:25:00.000Z</updated>
        <summary type="html"><![CDATA[The kubel-evil package has been updated to version 20210922.2325.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[kubel (20210922.2325) --- Control Kubernetes with limited permissions]]></title>
        <id>https://melpa.org/packages/kubel-20210922.2325.el</id>
        <link href="https://melpa.org/#/kubel"/>
        <updated>2021-09-22T23:25:00.000Z</updated>
        <summary type="html"><![CDATA[The kubel package has been updated to version 20210922.2325.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Life of an Emacser]]></title>
        <id>https://www.reddit.com/r/emacs/comments/pti06k/life_of_an_emacser/</id>
        <link href="https://www.reddit.com/r/emacs/comments/pti06k/life_of_an_emacser/"/>
        <updated>2021-09-22T22:59:30.000Z</updated>
        <summary type="html"><![CDATA[submitted by    /u/johnboudewijn  
 [link]   [comments]]]></summary>
        <author>
            <name>M-x emacs-reddit</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[todoist (20210922.2254) --- Extension for interacting and managing todoist tasks]]></title>
        <id>https://melpa.org/packages/todoist-20210922.2254.el</id>
        <link href="https://melpa.org/#/todoist"/>
        <updated>2021-09-22T22:54:00.000Z</updated>
        <summary type="html"><![CDATA[The todoist package has been updated to version 20210922.2254.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Just out of curiosity, how many bytes/kilobytes/megabytes does your dot file weight?]]></title>
        <id>https://www.reddit.com/r/emacs/comments/pthma9/just_out_of_curiosity_how_many/</id>
        <link href="https://www.reddit.com/r/emacs/comments/pthma9/just_out_of_curiosity_how_many/"/>
        <updated>2021-09-22T22:39:19.000Z</updated>
        <summary type="html"><![CDATA[Just out of curiosity, how many bytes/kilobyte/megabyte does your dot file weight? I am new to Emacs, my .emacs is only 17kb, 370 lines most of which are probably my commentaries not to get lost in what I've done there lol I am asking because I am curious how could it be look like in a few years.
    submitted by    /u/Dimimimitriks  
 [link]   [comments]]]></summary>
        <author>
            <name>M-x emacs-reddit</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[magit (20210922.2141) --- A Git porcelain inside Emacs.]]></title>
        <id>https://melpa.org/packages/magit-20210922.2141.tar</id>
        <link href="https://melpa.org/#/magit"/>
        <updated>2021-09-22T21:41:00.000Z</updated>
        <summary type="html"><![CDATA[The magit package has been updated to version 20210922.2141.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Now you can real-ly view your org files]]></title>
        <id>https://www.reddit.com/r/orgmode/comments/ptgfhs/now_you_can_really_view_your_org_files/</id>
        <link href="https://www.reddit.com/r/orgmode/comments/ptgfhs/now_you_can_really_view_your_org_files/"/>
        <updated>2021-09-22T21:11:21.000Z</updated>
        <summary type="html"><![CDATA[submitted by    /u/tjgrinn  
 [link]   [comments]]]></summary>
        <author>
            <name>Org-mode</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Building ZIO from Scratch - Fiber Context and Error Handling with Kit and Adam September 24th at 7 pm BST - Zymposium]]></title>
        <id>https://www.reddit.com/r/scala/comments/ptgco0/building_zio_from_scratch_fiber_context_and_error/</id>
        <link href="https://www.reddit.com/r/scala/comments/ptgco0/building_zio_from_scratch_fiber_context_and_error/"/>
        <updated>2021-09-22T21:05:04.000Z</updated>
        <summary type="html"><![CDATA[submitted by    /u/tornadolobo  
 [link]   [comments]]]></summary>
        <author>
            <name>Scala</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[fanyi (20210922.1909) --- Not only English-Chinese translator]]></title>
        <id>https://melpa.org/packages/fanyi-20210922.1909.tar</id>
        <link href="https://melpa.org/#/fanyi"/>
        <updated>2021-09-22T19:09:00.000Z</updated>
        <summary type="html"><![CDATA[The fanyi package has been updated to version 20210922.1909.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[timu-spacegrey-theme (20210922.1859) --- Color theme inspired by the Spacegray theme in Sublime Text]]></title>
        <id>https://melpa.org/packages/timu-spacegrey-theme-20210922.1859.el</id>
        <link href="https://melpa.org/#/timu-spacegrey-theme"/>
        <updated>2021-09-22T18:59:00.000Z</updated>
        <summary type="html"><![CDATA[The timu-spacegrey-theme package has been updated to version 20210922.1859.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[immaterial-theme (20210922.1826) --- A flexible theme based on material design principles]]></title>
        <id>https://melpa.org/packages/immaterial-theme-20210922.1826.tar</id>
        <link href="https://melpa.org/#/immaterial-theme"/>
        <updated>2021-09-22T18:26:00.000Z</updated>
        <summary type="html"><![CDATA[The immaterial-theme package has been updated to version 20210922.1826.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Why mark buffers for deletion (or saving)?]]></title>
        <id>https://www.reddit.com/r/emacs/comments/ptcmbt/why_mark_buffers_for_deletion_or_saving/</id>
        <link href="https://www.reddit.com/r/emacs/comments/ptcmbt/why_mark_buffers_for_deletion_or_saving/"/>
        <updated>2021-09-22T17:34:45.000Z</updated>
        <summary type="html"><![CDATA[Hey :)
 I'm getting myself familiar with Emacs and BufferList and ibuffer and what I don't understand is: why do we ever need to mark buffer for deletion?
 What's the real-life scenario behind the idea of first marking some buffers for deletion with one keystroke per instance and then deleting them in bulk with another one?
 I mean - why just not to have "d" key in buffer mode to delete a buffer?
    submitted by    /u/Zestyclose-Painter-3  
 [link]   [comments]]]></summary>
        <author>
            <name>M-x emacs-reddit</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[[REQUEST] Auto populate note ID as a heading in new notes]]></title>
        <id>1978@/discussions</id>
        <link href="https://forum.zettelkasten.de/discussion/1978/request-auto-populate-note-id-as-a-heading-in-new-notes"/>
        <updated>2021-09-22T17:19:00.000Z</updated>
        <summary type="html"><![CDATA[Simple but confounding question: Some of my notes do not show the unique ID and title in red at the top of the text of the note, why? I thought that was supposed to populate automatically.
I'm just getting started with the archive here and found this odd. I'd prefer to have the ID's there always. Couldn't find an answer with a number of searches and preferences don't seem to have an option for this.
THanks!]]></summary>
        <author>
            <name>christo</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Ignore several directories in counsel-find-file]]></title>
        <id>https://www.reddit.com/r/emacs/comments/ptc8tk/ignore_several_directories_in_counselfindfile/</id>
        <link href="https://www.reddit.com/r/emacs/comments/ptc8tk/ignore_several_directories_in_counselfindfile/"/>
        <updated>2021-09-22T17:16:56.000Z</updated>
        <summary type="html"><![CDATA[I am trying to ignore directories in counsel-find-file. From what I undertsood, it is possible with the counsel-find-file-ignore-regexp variable.
 Let us say I want to ignore the directories abc and def, and their subdirectories, from the root of the directory I am.
 I tried:
 (setq counsel-find-file-ignore-regexp "abc.*")
 It indeed ignores the abc directory and its subdirectories/files.
 I adjusted the regexp to:
 (setq counsel-find-file-ignore-regexp "abc.*|def.*")
 Now, it does not ignore anything. I also tried:
 (setq counsel-find-file-ignore-regexp "abc.*\|def.*")
 but the result is the same. Nothing is ignored.
 If I try online the regexp, it looks like it works: https://regex101.com/r/8w1i1b/1
 What am I doing wrong?
    submitted by    /u/Mat-R  
 [link]   [comments]]]></summary>
        <author>
            <name>M-x emacs-reddit</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[New to PureScript, but I started to build a Cheatsheet for it - any suggestions on what it must cover?]]></title>
        <id>https://www.reddit.com/r/purescript/comments/ptbw3f/new_to_purescript_but_i_started_to_build_a/</id>
        <link href="https://www.reddit.com/r/purescript/comments/ptbw3f/new_to_purescript_but_i_started_to_build_a/"/>
        <updated>2021-09-22T17:00:26.000Z</updated>
        <summary type="html"><![CDATA[submitted by    /u/OnkelJulez  
 [link]   [comments]]]></summary>
        <author>
            <name>PureScript</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[SGML skeletons driving me crazy]]></title>
        <id>https://www.reddit.com/r/emacs/comments/ptb6fy/sgml_skeletons_driving_me_crazy/</id>
        <link href="https://www.reddit.com/r/emacs/comments/ptb6fy/sgml_skeletons_driving_me_crazy/"/>
        <updated>2021-09-22T16:26:47.000Z</updated>
        <summary type="html"><![CDATA[Every time I go to edit something in the HTML family, emacs drops me into a mode called sgml-mode. It includes a very aggressive completion layer using skeletons, that as soon as you open a < it picks a list of html tags to use, then allowed attributes for each. The problem is, I cannot figure out how to get out of the freaking menu. It wants to keep adding attributes until the cows come home. Then, when I manage to escape it, any manual editing HTML-encodes any special characters like " and >.
 The really maddening thing is that I seem to be the only person who struggles with this. What am I missing? Is there a proper user's guide to sgml-mode? Can I just disable it? How do I leave this cursed place? None of the official manuals/docs seem to address this.
    submitted by    /u/flylikeabanana  
 [link]   [comments]]]></summary>
        <author>
            <name>M-x emacs-reddit</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[lsp-mode (20210922.1614) --- LSP mode]]></title>
        <id>https://melpa.org/packages/lsp-mode-20210922.1614.tar</id>
        <link href="https://melpa.org/#/lsp-mode"/>
        <updated>2021-09-22T16:14:00.000Z</updated>
        <summary type="html"><![CDATA[The lsp-mode package has been updated to version 20210922.1614.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[python-mode (20210922.1542) --- Python major mode]]></title>
        <id>https://melpa.org/packages/python-mode-20210922.1542.tar</id>
        <link href="https://melpa.org/#/python-mode"/>
        <updated>2021-09-22T15:42:00.000Z</updated>
        <summary type="html"><![CDATA[The python-mode package has been updated to version 20210922.1542.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Can Haskell automatically fuse folds?]]></title>
        <id>https://www.reddit.com/r/haskell/comments/pta2cf/can_haskell_automatically_fuse_folds/</id>
        <link href="https://www.reddit.com/r/haskell/comments/pta2cf/can_haskell_automatically_fuse_folds/"/>
        <updated>2021-09-22T15:34:49.000Z</updated>
        <summary type="html"><![CDATA[I have two values x = foldr op1 x0 l and y = foldr op2 y0 l. I need to use both of them in some expression like f x y.
 Obviously, one could compute the tuple (x, y) as foldr (\(a1, a2) b -> (a1op1b, a2op2b) (x0, y0) l. This computation requires only one traversal of l instead of two.
 However, instead of this two tuple, I have a five tuple and my operations are really ugly. So, is Haskell going to do this optimization automatically?
    submitted by    /u/agnishom  
 [link]   [comments]]]></summary>
        <author>
            <name>Haskell :: Reddit</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[dap-mode (20210922.1444) --- Debug Adapter Protocol mode]]></title>
        <id>https://melpa.org/packages/dap-mode-20210922.1444.tar</id>
        <link href="https://melpa.org/#/dap-mode"/>
        <updated>2021-09-22T14:44:00.000Z</updated>
        <summary type="html"><![CDATA[The dap-mode package has been updated to version 20210922.1444.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Gumshoe 2.0, my first package in Melpa]]></title>
        <id>https://www.reddit.com/r/emacs/comments/pt8kod/gumshoe_20_my_first_package_in_melpa/</id>
        <link href="https://www.reddit.com/r/emacs/comments/pt8kod/gumshoe_20_my_first_package_in_melpa/"/>
        <updated>2021-09-22T14:22:21.000Z</updated>
        <summary type="html"><![CDATA[Hello,
 Hurray, my first Melpa package! https://melpa.org/#/gumshoe
 I originally announced gumshoe here, and just wanted to announce the melpa release now, along with some major changes I've made for the occasion.
 First of all, for anyone unfamiliar, it's basically a fancy Point logger to help you remember where you've been. There are many variations of this type of tool, but this is mine. Gifs and usage here: https://github.com/Overdr0ne/gumshoe
 Changes:
 For users:
  
peruse: Now built-in interactive backlog browsing using standard completing read. Entry display is also customizable, so you can show (buffer position) or (perspective file line), or (file major-mode position), whatever set of fields you want from the gumshoe--entry class.
 
Noticing how similar backtracking is to isearc…]]></summary>
        <author>
            <name>M-x emacs-reddit</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[A weird problem with p4.el]]></title>
        <id>https://www.reddit.com/r/emacs/comments/pt8j00/a_weird_problem_with_p4el/</id>
        <link href="https://www.reddit.com/r/emacs/comments/pt8j00/a_weird_problem_with_p4el/"/>
        <updated>2021-09-22T14:20:01.000Z</updated>
        <summary type="html"><![CDATA[I know this is a bit of a long shot, since people don't use P4 as much anymore. I've started having this problem over the last couple of weeks. I *think* it might be because I have files open from two different workspaces, and P4 might be getting confused, but even that doesn't seem quite right.
 Debugger entered--Lisp error: (file-error "Writing to process" #("Invalid argument" 0 16 (charset windows-1252)) #<process P4>) process-send-string(#<process P4> "d:/home/.emacs.d/lisp/neo-execution.el") p4-maybe-start-update-statuses() p4-update-status() run-hooks(find-file-hook) after-find-file(nil t) find-file-noselect-1(#<buffer bhvgenericnpc.cpp> "f:/path/to/file..." nil nil "f:/path/to/file..." (562949953422394 619893758)) 
 So I'm trying to open the file bhvgenericnpc.cpp and some p4 hooks …]]></summary>
        <author>
            <name>M-x emacs-reddit</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Learning a domestic feline framework]]></title>
        <id>https://www.reddit.com/r/scala/comments/pt80c1/learning_a_domestic_feline_framework/</id>
        <link href="https://www.reddit.com/r/scala/comments/pt80c1/learning_a_domestic_feline_framework/"/>
        <updated>2021-09-22T13:53:19.000Z</updated>
        <summary type="html"><![CDATA[submitted by    /u/m3th0dman_  
 [link]   [comments]]]></summary>
        <author>
            <name>Scala</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[pygn-mode (20210922.1338) --- Major-mode for chess PGN files, powered by Python]]></title>
        <id>https://melpa.org/packages/pygn-mode-20210922.1338.tar</id>
        <link href="https://melpa.org/#/pygn-mode"/>
        <updated>2021-09-22T13:38:00.000Z</updated>
        <summary type="html"><![CDATA[The pygn-mode package has been updated to version 20210922.1338.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Capture templates... Updated mine, what's yours?]]></title>
        <id>https://www.reddit.com/r/orgmode/comments/pt665p/capture_templates_updated_mine_whats_yours/</id>
        <link href="https://www.reddit.com/r/orgmode/comments/pt665p/capture_templates_updated_mine_whats_yours/"/>
        <updated>2021-09-22T12:09:12.000Z</updated>
        <summary type="html"><![CDATA[Many folks, new and old to org-mode, are wondering about capture and using templates. For others (like me), there's always the curiosity to see what others come up with. It's a great way to learn. 
 I recently re-visited my org-capture series (originally posted about 2 years ago) and thought I'll start updating it. 
 For those interested, here's today's post, which explains what changed and links to other org-mode capture stuff. I hope you find it useful! 
 ​
 https://helpdeskheadesk.net/help-desk-head-desk/2021-09-19/
    submitted by    /u/jtr3322  
 [link]   [comments]]]></summary>
        <author>
            <name>Org-mode</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[leo (20210922.1138) --- Interface for dict.leo.org]]></title>
        <id>https://melpa.org/packages/leo-20210922.1138.el</id>
        <link href="https://melpa.org/#/leo"/>
        <updated>2021-09-22T11:38:00.000Z</updated>
        <summary type="html"><![CDATA[The leo package has been updated to version 20210922.1138.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Question about zettelkasten numbering]]></title>
        <id>1977@/discussions</id>
        <link href="https://forum.zettelkasten.de/discussion/1977/question-about-zettelkasten-numbering"/>
        <updated>2021-09-22T11:32:41.000Z</updated>
        <summary type="html"><![CDATA[Hi, I'm just getting started with the ZK system. I have a question about numbering: I get that the numbering sequence should proceed 1  2  2a  2b  2b1  2b2 etc. according to whether notes are roughly related to one another. If I had a note that wanted to insert between 2 and 2a in that sequence, because I thought it was very closely related to 2, how would I label it (or perhaps it doesn't really matter and I'm overthinking it and should just stick it in as 2c )?
Thanks!]]></summary>
        <author>
            <name>albertward</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[dracula-theme (20210922.1038) --- Dracula Theme]]></title>
        <id>https://melpa.org/packages/dracula-theme-20210922.1038.tar</id>
        <link href="https://melpa.org/#/dracula-theme"/>
        <updated>2021-09-22T10:38:00.000Z</updated>
        <summary type="html"><![CDATA[The dracula-theme package has been updated to version 20210922.1038.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[ap.el: A simple, Emacs Lisp-focused Emacs config]]></title>
        <id>https://www.reddit.com/r/emacs/comments/pt4psr/apel_a_simple_emacs_lispfocused_emacs_config/</id>
        <link href="https://www.reddit.com/r/emacs/comments/pt4psr/apel_a_simple_emacs_lispfocused_emacs_config/"/>
        <updated>2021-09-22T10:35:02.000Z</updated>
        <summary type="html"><![CDATA[submitted by    /u/github-alphapapa  
 [link]   [comments]]]></summary>
        <author>
            <name>M-x emacs-reddit</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[I love that you can do this (A few of them got a little destroyed)]]></title>
        <id>https://www.reddit.com/r/emacs/comments/pt4lh1/i_love_that_you_can_do_this_a_few_of_them_got_a/</id>
        <link href="https://www.reddit.com/r/emacs/comments/pt4lh1/i_love_that_you_can_do_this_a_few_of_them_got_a/"/>
        <updated>2021-09-22T10:26:12.000Z</updated>
        <summary type="html"><![CDATA[submitted by    /u/3rdRealm  
 [link]   [comments]]]></summary>
        <author>
            <name>M-x emacs-reddit</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[mu4e and org-mode new window for links]]></title>
        <id>https://www.reddit.com/r/emacs/comments/pt428a/mu4e_and_orgmode_new_window_for_links/</id>
        <link href="https://www.reddit.com/r/emacs/comments/pt428a/mu4e_and_orgmode_new_window_for_links/"/>
        <updated>2021-09-22T09:47:06.000Z</updated>
        <summary type="html"><![CDATA[I am having fun having an integrated system of calendar, email, and notes with org-mode and mu4e. I am linking to emails from my master org mode doc. But when I org-open-at-point for linked mu4e emails, I don't get a split window, but rather the email opens in the same window replacing the document. Is this expected behavior? How would I change this? I tried fiddling with org-link-frame-setup to no avail.
    submitted by    /u/avindroth  
 [link]   [comments]]]></summary>
        <author>
            <name>M-x emacs-reddit</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[What is the canonical way to get the text (with properties) between two given line numbers?]]></title>
        <id>https://www.reddit.com/r/emacs/comments/pt3kue/what_is_the_canonical_way_to_get_the_text_with/</id>
        <link href="https://www.reddit.com/r/emacs/comments/pt3kue/what_is_the_canonical_way_to_get_the_text_with/"/>
        <updated>2021-09-22T09:08:21.000Z</updated>
        <summary type="html"><![CDATA[I'm writing my own, improved version of this clever function for jumping to hunks in the current buffer with ivy and gitgutter. Git gutter provides information about the start and end line numbers of the hunks. I also provides the content of the hunks, but obviously without properties (this makes sense -- git doesn't deal in propertised text). I thought it would be cool to have a swiper-like interface where the hunk text I see in my ivy listing does have the properties it has in the buffer -- it would make it easier to spot what's what. 
 Simple then, for each hunk, I'll just lift the text, with properties, between the start and end line. I thought there would be a function for this, but I can't find one. I know a few ways I could do it (e.g. go to the beginning of the start line, get the char number, goto end of end line, get the char number and use buffer-substring), but it seems like such a basic thing I'm sure there must be a good, canonical way.
 Is there?
    submitted by    /u/Jack-o-tall-tales  
 [link]   [comments]]]></summary>
        <author>
            <name>M-x emacs-reddit</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Little Experiment - Source Code View in Built-in Help, a lá Helpful]]></title>
        <id>https://www.reddit.com/r/emacs/comments/pt3icl/little_experiment_source_code_view_in_builtin/</id>
        <link href="https://www.reddit.com/r/emacs/comments/pt3icl/little_experiment_source_code_view_in_builtin/"/>
        <updated>2021-09-22T09:02:50.000Z</updated>
        <summary type="html"><![CDATA[submitted by    /u/arthurno1  
 [link]   [comments]]]></summary>
        <author>
            <name>M-x emacs-reddit</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Source block modifying format of results (R)]]></title>
        <id>https://www.reddit.com/r/orgmode/comments/pt3em4/source_block_modifying_format_of_results_r/</id>
        <link href="https://www.reddit.com/r/orgmode/comments/pt3em4/source_block_modifying_format_of_results_r/"/>
        <updated>2021-09-22T08:54:47.000Z</updated>
        <summary type="html"><![CDATA[Here's my block:
 #+begin_src R :results output library(IRanges) IRanges(start=seq(100,1000,by=300),width=75) # +end_src 
 And here's the output:
 #+RESULTS: : IRanges object with 4 ranges and 0 metadata columns: : start end width : < : < : <integer> : [1] 100 174 75 : [2] 400 474 75 : [3] 700 774 75 : [4] 1000 1074 75 
 The "start", "end" and "width" should be surrounded by angle brackets, but they seems to get stripped from the results when inserted into the buffer (and thus when exported). Has anyone else encountered this?
    submitted by    /u/gtuckerkellogg  
 [link]   [comments]]]></summary>
        <author>
            <name>Org-mode</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[helm (20210922.840) --- Helm is an Emacs incremental and narrowing framework]]></title>
        <id>https://melpa.org/packages/helm-20210922.840.tar</id>
        <link href="https://melpa.org/#/helm"/>
        <updated>2021-09-22T08:40:00.000Z</updated>
        <summary type="html"><![CDATA[The helm package has been updated to version 20210922.840.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Weekly Tips, Tricks, &c. Thread]]></title>
        <id>https://www.reddit.com/r/emacs/comments/pt2xws/weekly_tips_tricks_c_thread/</id>
        <link href="https://www.reddit.com/r/emacs/comments/pt2xws/weekly_tips_tricks_c_thread/"/>
        <updated>2021-09-22T08:15:13.000Z</updated>
        <summary type="html"><![CDATA[This is a thread for smaller, miscellaneous items that might not warrant a full post on their own.
 See this search for previous "Weekly Tips, Tricks, &c." Threads.
 Don't feel constrained in regards to what you post, just keep your post vaguely, generally on the topic of emacs.
    submitted by    /u/AutoModerator  
 [link]   [comments]]]></summary>
        <author>
            <name>M-x emacs-reddit</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[telega (20210922.739) --- Telegram client (unofficial)]]></title>
        <id>https://melpa.org/packages/telega-20210922.739.tar</id>
        <link href="https://melpa.org/#/telega"/>
        <updated>2021-09-22T07:39:00.000Z</updated>
        <summary type="html"><![CDATA[The telega package has been updated to version 20210922.739.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[parseclj (20210922.642) --- Clojure/EDN parser]]></title>
        <id>https://melpa.org/packages/parseclj-20210922.642.tar</id>
        <link href="https://melpa.org/#/parseclj"/>
        <updated>2021-09-22T06:42:00.000Z</updated>
        <summary type="html"><![CDATA[The parseclj package has been updated to version 20210922.642.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[[ANN] org-ql 0.6 released]]></title>
        <id>https://www.reddit.com/r/emacs/comments/pt1iol/ann_orgql_06_released/</id>
        <link href="https://www.reddit.com/r/emacs/comments/pt1iol/ann_orgql_06_released/"/>
        <updated>2021-09-22T06:22:33.000Z</updated>
        <summary type="html"><![CDATA[submitted by    /u/github-alphapapa  
 [link]   [comments]]]></summary>
        <author>
            <name>M-x emacs-reddit</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[[ANN] org-ql 0.6 released]]></title>
        <id>https://www.reddit.com/r/orgmode/comments/pt1iay/ann_orgql_06_released/</id>
        <link href="https://www.reddit.com/r/orgmode/comments/pt1iay/ann_orgql_06_released/"/>
        <updated>2021-09-22T06:21:47.000Z</updated>
        <summary type="html"><![CDATA[submitted by    /u/github-alphapapa  
 [link]   [comments]]]></summary>
        <author>
            <name>Org-mode</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[org-ql (20210922.615) --- Org Query Language, search command, and agenda-like view]]></title>
        <id>https://melpa.org/packages/org-ql-20210922.615.tar</id>
        <link href="https://melpa.org/#/org-ql"/>
        <updated>2021-09-22T06:15:00.000Z</updated>
        <summary type="html"><![CDATA[The org-ql package has been updated to version 20210922.615.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[helm-org-ql (20210922.615) --- Helm support for org-ql]]></title>
        <id>https://melpa.org/packages/helm-org-ql-20210922.615.el</id>
        <link href="https://melpa.org/#/helm-org-ql"/>
        <updated>2021-09-22T06:15:00.000Z</updated>
        <summary type="html"><![CDATA[The helm-org-ql package has been updated to version 20210922.615.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[apdl-mode (20210922.540) --- Major mode for the APDL programming language.]]></title>
        <id>https://melpa.org/packages/apdl-mode-20210922.540.tar</id>
        <link href="https://melpa.org/#/apdl-mode"/>
        <updated>2021-09-22T05:40:00.000Z</updated>
        <summary type="html"><![CDATA[The apdl-mode package has been updated to version 20210922.540.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[w3m (20210922.504) --- an Emacs interface to w3m]]></title>
        <id>https://melpa.org/packages/w3m-20210922.504.tar</id>
        <link href="https://melpa.org/#/w3m"/>
        <updated>2021-09-22T05:04:00.000Z</updated>
        <summary type="html"><![CDATA[The w3m package has been updated to version 20210922.504.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[simple backend like express or oak in js world]]></title>
        <id>https://www.reddit.com/r/haskell/comments/psxd39/simple_backend_like_express_or_oak_in_js_world/</id>
        <link href="https://www.reddit.com/r/haskell/comments/psxd39/simple_backend_like_express_or_oak_in_js_world/"/>
        <updated>2021-09-22T01:52:36.000Z</updated>
        <summary type="html"><![CDATA[Hey guys, I am starting with my haskell journey and am a "learning by doing" person. I decided to pick miso as a frontend framework for spa development and want to look for a simple backend.
 I don't want a monolithic solution. Just a server with which I can create a rest (and prefereably also in haskell) graphql api.
 What are your go tos? Which can scale? I am not afraid of harder solutions (if they are worth for production), learning haskell will be hard for me anyway.
 thanks in andvance!
    submitted by    /u/prrxddq  
 [link]   [comments]]]></summary>
        <author>
            <name>Haskell :: Reddit</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[org-alert (20210922.125) --- Notify org deadlines via notify-send]]></title>
        <id>https://melpa.org/packages/org-alert-20210922.125.el</id>
        <link href="https://melpa.org/#/org-alert"/>
        <updated>2021-09-22T01:25:00.000Z</updated>
        <summary type="html"><![CDATA[The org-alert package has been updated to version 20210922.125.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[hl-block-mode (20210922.113) --- highlighting nested blocks]]></title>
        <id>https://melpa.org/packages/hl-block-mode-20210922.113.el</id>
        <link href="https://melpa.org/#/hl-block-mode"/>
        <updated>2021-09-22T01:13:00.000Z</updated>
        <summary type="html"><![CDATA[The hl-block-mode package has been updated to version 20210922.113.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[spell-fu (20210922.110) --- Fast & light spelling highlighter]]></title>
        <id>https://melpa.org/packages/spell-fu-20210922.110.el</id>
        <link href="https://melpa.org/#/spell-fu"/>
        <updated>2021-09-22T01:10:00.000Z</updated>
        <summary type="html"><![CDATA[The spell-fu package has been updated to version 20210922.110.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[ivy-posframe (20210922.24) --- Using posframe to show Ivy]]></title>
        <id>https://melpa.org/packages/ivy-posframe-20210922.24.el</id>
        <link href="https://melpa.org/#/ivy-posframe"/>
        <updated>2021-09-22T00:24:00.000Z</updated>
        <summary type="html"><![CDATA[The ivy-posframe package has been updated to version 20210922.24.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Gulp failing to build my project. Need help building this please.]]></title>
        <id>https://www.reddit.com/r/purescript/comments/psu948/gulp_failing_to_build_my_project_need_help/</id>
        <link href="https://www.reddit.com/r/purescript/comments/psu948/gulp_failing_to_build_my_project_need_help/"/>
        <updated>2021-09-21T22:53:33.000Z</updated>
        <summary type="html"><![CDATA[Well :( once again need help building a project. I swear I'll get better at this...
 Trying to build this game following the instructions in the Local Install section:
  
git clone https://github.com/sharkdp/cube-composer.git
 cd cube-composer
 npm install
 bower install
 gulp
  
All goes well until I ran gulp. Here's the gulp output. Just my own analysis, looks like there's three things going on
  
36 warnings of deprecated features. However these shouldn't be blockers for the build, correct?
 22 errors referring to the wrap and unwrap typeclass functions not being implemented. Are these blockers? If so, how did this ever work in the first place and how should I fix? I'm seeing many (but not all) of these errors coming from bower_components/ which was simply the tool in step #4 above used to build the project, and not from the project itself. Should I try rebuilding without bower? Any recommendation on what to run to do this?
 Then it seems to continue compiling before failing completely with a traceback at the end.
  
Would love any advice on how to build this. What do I need to do please?
    submitted by    /u/puzzle-game  
 [link]   [comments]]]></summary>
        <author>
            <name>PureScript</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Haskell Graphite trouble]]></title>
        <id>https://www.reddit.com/r/haskell/comments/psu33t/haskell_graphite_trouble/</id>
        <link href="https://www.reddit.com/r/haskell/comments/psu33t/haskell_graphite_trouble/"/>
        <updated>2021-09-21T22:44:24.000Z</updated>
        <summary type="html"><![CDATA[I've supposedly installed Haskell Graphite and I've got a ghci going with the supposedly proper imports 
 import Data.Graph.UGraph 
 import Data.Graph.Types.Edge
 but this code from the tutorial fails
 myGraph :: UGraph Int () 
 myGraph = fromEdgesList [ 1 <-> 4 , 1 <-> 5 , 1 <-> 9 , 2 <-> 4 , 2 <-> 6 , 3 <-> 5 , 3 <-> 8 , 3 <-> 10 , 4 <-> 5 , 4 <-> 10, 5 <-> 8 , 6 <-> 8 , 6 <-> 9 , 7 <-> 8 ]
 It gives
 Variable not in scope: (<->) :: t0 -> t1 -> Data.Graph.Types.Edge Int () • Perhaps you meant one of these: ‘<>’ (imported from Prelude), ‘<*>’ (imported from Prelude), ‘<$>’ (imported from Prelude) 
 Why doesn't it see and understand fromEdgesList? User error, no doubt, but what?
    submitted by    /u/teilchen010  
 [link]   [comments]]]></summary>
        <author>
            <name>Haskell :: Reddit</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[gerrit (20210921.2043) --- Gerrit client]]></title>
        <id>https://melpa.org/packages/gerrit-20210921.2043.tar</id>
        <link href="https://melpa.org/#/gerrit"/>
        <updated>2021-09-21T20:43:00.000Z</updated>
        <summary type="html"><![CDATA[The gerrit package has been updated to version 20210921.2043.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[gumshoe (20210921.2005) --- Scoped spatial and temporal POINT movement tracking]]></title>
        <id>https://melpa.org/packages/gumshoe-20210921.2005.tar</id>
        <link href="https://melpa.org/#/gumshoe"/>
        <updated>2021-09-21T20:05:00.000Z</updated>
        <summary type="html"><![CDATA[The gumshoe package has been updated to version 20210921.2005.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[lister (20210921.1947) --- Yet another list printer]]></title>
        <id>https://melpa.org/packages/lister-20210921.1947.tar</id>
        <link href="https://melpa.org/#/lister"/>
        <updated>2021-09-21T19:47:00.000Z</updated>
        <summary type="html"><![CDATA[The lister package has been updated to version 20210921.1947.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Good book for idiomatic Scala in 2021?]]></title>
        <id>https://www.reddit.com/r/scala/comments/pspcif/good_book_for_idiomatic_scala_in_2021/</id>
        <link href="https://www.reddit.com/r/scala/comments/pspcif/good_book_for_idiomatic_scala_in_2021/"/>
        <updated>2021-09-21T18:55:25.000Z</updated>
        <summary type="html"><![CDATA[So I was thinking of creating an "idiomatic Scala" group in my company. Is the Red Book still the best resource for that in 2021?
    submitted by    /u/vivri  
 [link]   [comments]]]></summary>
        <author>
            <name>Scala</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[typescript-mode (20210921.1849) --- Major mode for editing typescript]]></title>
        <id>https://melpa.org/packages/typescript-mode-20210921.1849.tar</id>
        <link href="https://melpa.org/#/typescript-mode"/>
        <updated>2021-09-21T18:49:00.000Z</updated>
        <summary type="html"><![CDATA[The typescript-mode package has been updated to version 20210921.1849.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[What's the difference between a ZLayer and a ZIO?]]></title>
        <id>https://www.reddit.com/r/scala/comments/psp46x/whats_the_difference_between_a_zlayer_and_a_zio/</id>
        <link href="https://www.reddit.com/r/scala/comments/psp46x/whats_the_difference_between_a_zlayer_and_a_zio/"/>
        <updated>2021-09-21T18:43:46.000Z</updated>
        <summary type="html"><![CDATA[I am a new ZIO user. I like the dependency injection "recipe" system that it uses, but I fail to understand the difference between ZLayer and ZIO. ZIO is a recipe for producing an instance of a data type and ZLayer is a recipe for producing a recipe of a service, but aren't all services also a data type (they're all traits after all)?
 I get the innovation behind Has for composition (especially thanks to the great u/kitlangton video on the subject), but in all my ZIO work I could just replace ZLayers with ZIOs and not notice, unless there's something I am missing.
    submitted by    /u/crpleasethanks  
 [link]   [comments]]]></summary>
        <author>
            <name>Scala</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[[REQUEST] Change size of images per note]]></title>
        <id>1976@/discussions</id>
        <link href="https://forum.zettelkasten.de/discussion/1976/request-change-size-of-images-per-note"/>
        <updated>2021-09-21T18:01:27.000Z</updated>
        <summary type="html"><![CDATA[I love The Archive's ability to show images in-line in zettels.  This feature was added a while back (6 months or a year, or so) and I've made frequent use of it.
I wonder if there is some way of changing the size of the graphic as it is displayed in the zettel.  I know I can view the graphic at whatever scale I want in some other app, but it would be nice right within The Archive if I could, say, click on the graphic and expand its size, and that The Archive would remember my preferred size the next time I viewed that zettel.]]></summary>
        <author>
            <name>GeoEng51</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Implementing Co, a Small Interpreted Language With Coroutines #2: The Interpreter]]></title>
        <id>https://www.reddit.com/r/haskell/comments/psnl63/implementing_co_a_small_interpreted_language_with/</id>
        <link href="https://www.reddit.com/r/haskell/comments/psnl63/implementing_co_a_small_interpreted_language_with/"/>
        <updated>2021-09-21T17:29:31.000Z</updated>
        <summary type="html"><![CDATA[submitted by    /u/abhin4v  
 [link]   [comments]]]></summary>
        <author>
            <name>Haskell :: Reddit</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[tldr (20210921.1715) --- tldr client for Emacs]]></title>
        <id>https://melpa.org/packages/tldr-20210921.1715.el</id>
        <link href="https://melpa.org/#/tldr"/>
        <updated>2021-09-21T17:15:00.000Z</updated>
        <summary type="html"><![CDATA[The tldr package has been updated to version 20210921.1715.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[company (20210921.1707) --- Modular text completion framework]]></title>
        <id>https://melpa.org/packages/company-20210921.1707.tar</id>
        <link href="https://melpa.org/#/company"/>
        <updated>2021-09-21T17:07:00.000Z</updated>
        <summary type="html"><![CDATA[The company package has been updated to version 20210921.1707.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[[ANN] random-1.2.1 release]]></title>
        <id>https://www.reddit.com/r/haskell/comments/psm3vc/ann_random121_release/</id>
        <link href="https://www.reddit.com/r/haskell/comments/psm3vc/ann_random121_release/"/>
        <updated>2021-09-21T16:19:04.000Z</updated>
        <summary type="html"><![CDATA[First release since the rewrite a year ago. This release mostly takes care of some technical debt, performance regression on ghc-9, support for ghc-9.2 and other minor fixups. Cool new feature is TGen, which let's us use the new monadic stateful interface directly from within STM. Here is the full changelog:
  
Fix support for ghc-9.2 #99
 Fix performance regression for ghc-9.0 #101
 Add uniformEnumM and uniformEnumRM
 Add initStdGen #103
 Add globalStdGen #117
 Add runStateGenST_
 Ensure that default implementation of ShortByteString generation uses unpinned memory. #116
 Fix #54 with #68 - if exactly one value in the range of floating point is infinite, then uniformRM/randomR returns that value.
 Add default implementation of uniformM that uses Generic #70
 Random instance for CBool #77
 Addition of TGen and TGenM #95
 Addition of tuple instances for Random up to 7-tuple #72
  
   submitted by    /u/kuleshevich  
 [link]   [comments]]]></summary>
        <author>
            <name>Haskell :: Reddit</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[gruber-darker-theme (20210921.1408) --- Gruber Darker color theme for Emacs 24.]]></title>
        <id>https://melpa.org/packages/gruber-darker-theme-20210921.1408.el</id>
        <link href="https://melpa.org/#/gruber-darker-theme"/>
        <updated>2021-09-21T14:08:00.000Z</updated>
        <summary type="html"><![CDATA[The gruber-darker-theme package has been updated to version 20210921.1408.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[danneskjold-theme (20210921.1255) --- Beautiful high-contrast Emacs theme.]]></title>
        <id>https://melpa.org/packages/danneskjold-theme-20210921.1255.tar</id>
        <link href="https://melpa.org/#/danneskjold-theme"/>
        <updated>2021-09-21T12:55:00.000Z</updated>
        <summary type="html"><![CDATA[The danneskjold-theme package has been updated to version 20210921.1255.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[psession (20210921.1158) --- Persistent save of elisp objects.]]></title>
        <id>https://melpa.org/packages/psession-20210921.1158.el</id>
        <link href="https://melpa.org/#/psession"/>
        <updated>2021-09-21T11:58:00.000Z</updated>
        <summary type="html"><![CDATA[The psession package has been updated to version 20210921.1158.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[boon (20210921.1154) --- Ergonomic Command Mode for Emacs.]]></title>
        <id>https://melpa.org/packages/boon-20210921.1154.tar</id>
        <link href="https://melpa.org/#/boon"/>
        <updated>2021-09-21T11:54:00.000Z</updated>
        <summary type="html"><![CDATA[The boon package has been updated to version 20210921.1154.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[[ANN] GHCup 0.1.17 release]]></title>
        <id>https://www.reddit.com/r/haskell/comments/psg3e0/ann_ghcup_0117_release/</id>
        <link href="https://www.reddit.com/r/haskell/comments/psg3e0/ann_ghcup_0117_release/"/>
        <updated>2021-09-21T10:34:44.000Z</updated>
        <summary type="html"><![CDATA[How to upgrade
  ghcup upgrade 
 Or follow https://www.haskell.org/ghcup/ if you haven't installed yet.
 Changelog
  
Add --force option to install/compile wrt #210 by Arjun Kathuria
 Implement compiling HLS from source wrt #201
 Implement experimental GPG verification of the metadata file (see README) wrt #263
 Add ghcup unset command wrt #145
 Add ghcup whereis bindir etc wrt #221
 Greatly reduce dependency footprint wrt #212
 Add ghcup --plan-json
 Improve --patchdir option for GHC compilation wrt #226
 Try to improve logging and failure modes, especially during downloads
 Add descriptive warnings when HLS and GHC versions are incompatible
 Improve curl header parsing wrt #213
  
FAQ
 Since there have been a lot of "why should I use ghcup" etc. questions, I wrote up an FAQ: https://gitlab.haskell.org/haskell/ghcup-hs#faq
    submitted by    /u/maerwald  
 [link]   [comments]]]></summary>
        <author>
            <name>Haskell :: Reddit</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[ebib (20210921.1010) --- a BibTeX database manager]]></title>
        <id>https://melpa.org/packages/ebib-20210921.1010.tar</id>
        <link href="https://melpa.org/#/ebib"/>
        <updated>2021-09-21T10:10:00.000Z</updated>
        <summary type="html"><![CDATA[The ebib package has been updated to version 20210921.1010.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Browse Hackage from the terminal ⚡]]></title>
        <id>https://www.reddit.com/r/haskell/comments/psez3e/browse_hackage_from_the_terminal/</id>
        <link href="https://www.reddit.com/r/haskell/comments/psez3e/browse_hackage_from_the_terminal/"/>
        <updated>2021-09-21T09:00:27.000Z</updated>
        <summary type="html"><![CDATA[submitted by    /u/lazamar  
 [link]   [comments]]]></summary>
        <author>
            <name>Haskell :: Reddit</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Looking for Haskell Devs.]]></title>
        <id>https://www.reddit.com/r/haskell/comments/psdig1/looking_for_haskell_devs/</id>
        <link href="https://www.reddit.com/r/haskell/comments/psdig1/looking_for_haskell_devs/"/>
        <updated>2021-09-21T06:58:12.000Z</updated>
        <summary type="html"><![CDATA[We are looking for Haskell Developers. Junior and Senior. More info here: https://coinweb.io/jobs/
 Fast-growing company. Locations Thailand, Ukraine, Barcelona but remote is also an option. Only full time... 
 We have a core team of good Haskell devs but want to expand on this.
    submitted by    /u/lifelong_athlete  
 [link]   [comments]]]></summary>
        <author>
            <name>Haskell :: Reddit</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[diff-at-point (20210921.603) --- Diff navigation]]></title>
        <id>https://melpa.org/packages/diff-at-point-20210921.603.el</id>
        <link href="https://melpa.org/#/diff-at-point"/>
        <updated>2021-09-21T06:03:00.000Z</updated>
        <summary type="html"><![CDATA[The diff-at-point package has been updated to version 20210921.603.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[magit-imerge (20210921.257) --- Magit extension for git-imerge]]></title>
        <id>https://melpa.org/packages/magit-imerge-20210921.257.el</id>
        <link href="https://melpa.org/#/magit-imerge"/>
        <updated>2021-09-21T02:57:00.000Z</updated>
        <summary type="html"><![CDATA[The magit-imerge package has been updated to version 20210921.257.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Fast C-style for loops in Scala 3]]></title>
        <id>https://www.reddit.com/r/scala/comments/ps8u5h/fast_cstyle_for_loops_in_scala_3/</id>
        <link href="https://www.reddit.com/r/scala/comments/ps8u5h/fast_cstyle_for_loops_in_scala_3/"/>
        <updated>2021-09-21T01:47:08.000Z</updated>
        <summary type="html"><![CDATA[submitted by    /u/augustnagro  
 [link]   [comments]]]></summary>
        <author>
            <name>Scala</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Introduction to Polynomial Regression Analysis]]></title>
        <id>https://serokell.io/blog/polynomial-regression-analysis</id>
        <link href="https://serokell.io/blog/polynomial-regression-analysis"/>
        <updated>2021-09-21T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[What is polynomial regression? When should you use it? In this article, we’ll give you all the answers.]]></summary>
        <author>
            <name>hi+yuliagavrilova@serokell.io (Yulia Gavrilova)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[notmuch (20210920.2339) --- run notmuch within emacs]]></title>
        <id>https://melpa.org/packages/notmuch-20210920.2339.tar</id>
        <link href="https://melpa.org/#/notmuch"/>
        <updated>2021-09-20T23:39:00.000Z</updated>
        <summary type="html"><![CDATA[The notmuch package has been updated to version 20210920.2339.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Passing variables to org-capture from the environment capture was called.]]></title>
        <id>https://www.reddit.com/r/orgmode/comments/ps3tin/passing_variables_to_orgcapture_from_the/</id>
        <link href="https://www.reddit.com/r/orgmode/comments/ps3tin/passing_variables_to_orgcapture_from_the/"/>
        <updated>2021-09-20T21:05:20.000Z</updated>
        <summary type="html"><![CDATA[I want to add some text to a capture template of mine, that seems to be beyond what normal template expansion can do. I can only calculate the value of the string I want to add, while in the buffer from which I call capture, because it has to use some buffer-local variables. I figured I can calculate my string, put it in a variable, then simply use it in my capture template. Something like:
 "* Some stuff %(identity my-variable)" 
 and call my template ("a") with
 (let ((my-variable set-my-variable)) (org-capture nil "a")) 
 But it doesn't seem to work that easily. The function I call with %() in the template is outside the scope of my-variable. How am I supposed to properly pass extra custom information that I calculate at the runtime of org-capture to a capture template?
    submitted by    /u/acosmicjoke  
 [link]   [comments]]]></summary>
        <author>
            <name>Org-mode</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[qrencode (20210920.2102) --- QRCode encoder]]></title>
        <id>https://melpa.org/packages/qrencode-20210920.2102.el</id>
        <link href="https://melpa.org/#/qrencode"/>
        <updated>2021-09-20T21:02:00.000Z</updated>
        <summary type="html"><![CDATA[The qrencode package has been updated to version 20210920.2102.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[What is the status Scala 3 with IntelliJ ?]]></title>
        <id>https://www.reddit.com/r/scala/comments/ps3meg/what_is_the_status_scala_3_with_intellij/</id>
        <link href="https://www.reddit.com/r/scala/comments/ps3meg/what_is_the_status_scala_3_with_intellij/"/>
        <updated>2021-09-20T20:55:53.000Z</updated>
        <summary type="html"><![CDATA[Hello, does anyone here use IntelliJ with Scala 3 on a daily basis?
 Jetbrains was lagging behind with Scala 3 compatibility. Is it a smooth experience now?
 PS title is missing an 'of' :) 
    submitted by    /u/ticofab  
 [link]   [comments]]]></summary>
        <author>
            <name>Scala</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[music notation in markdown]]></title>
        <id>1974@/discussions</id>
        <link href="https://forum.zettelkasten.de/discussion/1974/music-notation-in-markdown"/>
        <updated>2021-09-20T19:44:37.000Z</updated>
        <summary type="html"><![CDATA[So I'm writing my second piano sonata.  Currently I have pages and pages of hand-written music on sheet music. I'm curious if anyone knows of any markdown-native ways of encoding the notes into a more searchable format than a picture.
The two snippets are here for those curious. https://soundcloud.com/bradford-fournier-135979011/sets/piano-sonata-2-brief-snippets
This is about the length of each sheet snippet that I'd like per note.
(Forgive the playing, I'm still learning to play my own piece lol)]]></summary>
        <author>
            <name>bradfordfournier</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[khalel (20210920.1848) --- Import, edit and create calendar events through khal]]></title>
        <id>https://melpa.org/packages/khalel-20210920.1848.el</id>
        <link href="https://melpa.org/#/khalel"/>
        <updated>2021-09-20T18:48:00.000Z</updated>
        <summary type="html"><![CDATA[The khalel package has been updated to version 20210920.1848.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[puni (20210920.1802) --- Parentheses Universalistic]]></title>
        <id>https://melpa.org/packages/puni-20210920.1802.el</id>
        <link href="https://melpa.org/#/puni"/>
        <updated>2021-09-20T18:02:00.000Z</updated>
        <summary type="html"><![CDATA[The puni package has been updated to version 20210920.1802.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[rmsbolt (20210920.1617) --- A compiler output viewer]]></title>
        <id>https://melpa.org/packages/rmsbolt-20210920.1617.tar</id>
        <link href="https://melpa.org/#/rmsbolt"/>
        <updated>2021-09-20T16:17:00.000Z</updated>
        <summary type="html"><![CDATA[The rmsbolt package has been updated to version 20210920.1617.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[geiser-kawa (20210920.1607) --- Kawa scheme support for Geiser]]></title>
        <id>https://melpa.org/packages/geiser-kawa-20210920.1607.tar</id>
        <link href="https://melpa.org/#/geiser-kawa"/>
        <updated>2021-09-20T16:07:00.000Z</updated>
        <summary type="html"><![CDATA[The geiser-kawa package has been updated to version 20210920.1607.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[kroki supports so many diagram formats]]></title>
        <id>https://www.reddit.com/r/orgmode/comments/prxivw/kroki_supports_so_many_diagram_formats/</id>
        <link href="https://www.reddit.com/r/orgmode/comments/prxivw/kroki_supports_so_many_diagram_formats/"/>
        <updated>2021-09-20T15:46:54.000Z</updated>
        <summary type="html"><![CDATA[I just found out about kroki which wants to be "a unified API with support for - BlockDiag (BlockDiag, SeqDiag, ActDiag, NwDiag, PacketDiag, RackDiag) - BPMN - Bytefield - C4 (with PlantUML) - Ditaa - Erd - Excalidraw - GraphViz - Mermaid - Nomnoml - Pikchr - PlantUML - SvgBob - UMLet - Vega - Vega-Lite - WaveDrom ... and more to come!" I find that a very impressive list. I wonder if org-mode could somehow laverage this to support all of these diagram formats in one go (rather then only plantuml and ditaa). kroki is free software.
 How could a nice interface for kroki in org-mode look like?
    submitted by    /u/Kaligule  
 [link]   [comments]]]></summary>
        <author>
            <name>Org-mode</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Antinet Zettelkasten]]></title>
        <id>1973@/discussions</id>
        <link href="https://forum.zettelkasten.de/discussion/1973/antinet-zettelkasten"/>
        <updated>2021-09-20T15:37:26.000Z</updated>
        <summary type="html"><![CDATA[On the zettelkasten subreddit I came across a post linking to an article on the method (shared by the author of the article). In it he was making some bold proclamations, so I thought I'd ask what this community thought?
The core argument seems to be

  
Today, however, I shall provide one fundamental component of Luhmann's system. This fundamental component is missing from an estimated 96% of digital zettelkastens.
Luhmann outlines this fundamental component in the very beginning of his paper on how his zettelkasten works.

    
Information is an intra-systematic event. It results when one compares one message or entry with regard to other possibilities. Information, accordingly, originates only in systems which possess a comparative schema—even if this amounts only to: "this or something else."

  
  
You see, built into every single note in Luhmann's system is one requirement: he must decide where the note belongs. It forces associations, and associations stand as the fundamental building block of human memory. One must decide if the note is associated with this or something else. It is a comparative schema built into the very root of Luhmann's antinet zettelkasten, which surfaces the magic of his system.
Unfortunately, this fundamental component is watered down to near extinction in the world of digital zettelkastens.


(Source: https://daily.scottscheper.com/num/243/)
The idea of "must decide where the note belongs", while true, misses the point of multiple context within the zettelkasten, as Luhmann was trying to come up with an alternative to filing notes using folders. Or is he just rehashing the classic Folgzettel Debate?
Edited by @ctietze: Added source link for attribution]]></summary>
        <author>
            <name>Nick</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Beginner question about tuples of lists.]]></title>
        <id>https://www.reddit.com/r/haskell/comments/prvsa1/beginner_question_about_tuples_of_lists/</id>
        <link href="https://www.reddit.com/r/haskell/comments/prvsa1/beginner_question_about_tuples_of_lists/"/>
        <updated>2021-09-20T14:15:51.000Z</updated>
        <summary type="html"><![CDATA[Lets say I have this simple list and I want to be able to search for a car model and get the car's company.
 For example: carLookUp "Yaris"
 Toyota
 cars = [("Toyota",["Yaris", "Aygo", "Corolla"]),
 ("Ford", ["focus", "fiesta", "Mondeo"])]
    submitted by    /u/Spiderman8291  
 [link]   [comments]]]></summary>
        <author>
            <name>Haskell :: Reddit</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Quick question: Where should I place my .jar files and what in the build.sbt file under the libraryDependencies should I write for them to be included?]]></title>
        <id>https://www.reddit.com/r/scala/comments/prvkij/quick_question_where_should_i_place_my_jar_files/</id>
        <link href="https://www.reddit.com/r/scala/comments/prvkij/quick_question_where_should_i_place_my_jar_files/"/>
        <updated>2021-09-20T14:04:27.000Z</updated>
        <summary type="html"><![CDATA[submitted by    /u/CrimSonS0n  
 [link]   [comments]]]></summary>
        <author>
            <name>Scala</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[git-commit (20210920.1355) --- Edit Git commit messages]]></title>
        <id>https://melpa.org/packages/git-commit-20210920.1355.tar</id>
        <link href="https://melpa.org/#/git-commit"/>
        <updated>2021-09-20T13:55:00.000Z</updated>
        <summary type="html"><![CDATA[The git-commit package has been updated to version 20210920.1355.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[stimmung-themes (20210920.1345) --- Themes tuned to inner harmonies]]></title>
        <id>https://melpa.org/packages/stimmung-themes-20210920.1345.tar</id>
        <link href="https://melpa.org/#/stimmung-themes"/>
        <updated>2021-09-20T13:45:00.000Z</updated>
        <summary type="html"><![CDATA[The stimmung-themes package has been updated to version 20210920.1345.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[prettier (20210920.1251) --- Code formatting with Prettier]]></title>
        <id>https://melpa.org/packages/prettier-20210920.1251.tar</id>
        <link href="https://melpa.org/#/prettier"/>
        <updated>2021-09-20T12:51:00.000Z</updated>
        <summary type="html"><![CDATA[The prettier package has been updated to version 20210920.1251.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Meta-tags for categories of Zettel (e.g. in zetteldeft)]]></title>
        <id>1972@/discussions</id>
        <link href="https://forum.zettelkasten.de/discussion/1972/meta-tags-for-categories-of-zettel-e-g-in-zetteldeft"/>
        <updated>2021-09-20T12:42:53.000Z</updated>
        <summary type="html"><![CDATA[I am new to Zettelkasten Method.
I want to use tags not only to specify the content of a Zettel but also the type of the Zettel itself. It is like a meta-information. e.g. I want to categories the type of content like this
:typ:idea
:typ:permanent
:typ:bib
:typ:index
:typ:keywords
:typ:quick_n_dirty

Question 1
Question 2
problem that the : does not work out of the box with zetteldeft. So I look for something else because I do not want to modify the default settings.]]></summary>
        <author>
            <name>buhtz</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Footers under a header's sub-header?]]></title>
        <id>https://www.reddit.com/r/orgmode/comments/prtihu/footers_under_a_headers_subheader/</id>
        <link href="https://www.reddit.com/r/orgmode/comments/prtihu/footers_under_a_headers_subheader/"/>
        <updated>2021-09-20T12:08:16.000Z</updated>
        <summary type="html"><![CDATA[​
 I'm trying to get org-footnote-action to create a footnote in a header under the header I'm currently working. By default, a footnote is created at the bottom of the buffer, parent-level headers. If I change org-footnote-action to nil, it shows right under the text I am writing, but not other a sub-header to that section. Is there a way to do this with the existing options, or do I need some sort of a function?
 ​
 What I have now (with nil):
 *** This is some sub-header Text goes here, a bunch of lines(footer pointer here) (footer pointer here)this is where the footer ends when i use C-x f **** This is the sub-header of the above header <nothing here, have to move footnote manually> 
 Here's what I want:
 *** This is some sub-header Text goes here, a bunch of lines(footer pointer here) **** This is the sub-header of the above header (footer pointer here)this is where I want the marker to be when I hit C-x f 
 Any suggestions? Thanks much!
    submitted by    /u/jtr3322  
 [link]   [comments]]]></summary>
        <author>
            <name>Org-mode</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[kaolin-themes (20210920.1144) --- A set of eye pleasing themes]]></title>
        <id>https://melpa.org/packages/kaolin-themes-20210920.1144.tar</id>
        <link href="https://melpa.org/#/kaolin-themes"/>
        <updated>2021-09-20T11:44:00.000Z</updated>
        <summary type="html"><![CDATA[The kaolin-themes package has been updated to version 20210920.1144.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Is there a way to run org-show-subtree, but keep property drawers and logbooks folded?]]></title>
        <id>https://www.reddit.com/r/orgmode/comments/prsgla/is_there_a_way_to_run_orgshowsubtree_but_keep/</id>
        <link href="https://www.reddit.com/r/orgmode/comments/prsgla/is_there_a_way_to_run_orgshowsubtree_but_keep/"/>
        <updated>2021-09-20T10:58:43.000Z</updated>
        <summary type="html"><![CDATA[As title. Thanks in advance.
    submitted by    /u/patchikin  
 [link]   [comments]]]></summary>
        <author>
            <name>Org-mode</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Plain text editor on iOS capable of org syntax highlighting?]]></title>
        <id>https://www.reddit.com/r/orgmode/comments/prrzq4/plain_text_editor_on_ios_capable_of_org_syntax/</id>
        <link href="https://www.reddit.com/r/orgmode/comments/prrzq4/plain_text_editor_on_ios_capable_of_org_syntax/"/>
        <updated>2021-09-20T10:24:06.000Z</updated>
        <summary type="html"><![CDATA[Is there a plain text iOS app capable of syntax highlighting .org files?
 I know about the excellent apps Beorg and /r/plainorg — but I am really only looking for a plain text app that can read and syntax highlight my files.
    submitted by    /u/ganz_genau  
 [link]   [comments]]]></summary>
        <author>
            <name>Org-mode</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Video of IHP Meetup #3]]></title>
        <id>https://www.reddit.com/r/haskell/comments/prrf7a/video_of_ihp_meetup_3/</id>
        <link href="https://www.reddit.com/r/haskell/comments/prrf7a/video_of_ihp_meetup_3/"/>
        <updated>2021-09-20T09:39:39.000Z</updated>
        <summary type="html"><![CDATA[submitted by    /u/_query  
 [link]   [comments]]]></summary>
        <author>
            <name>Haskell :: Reddit</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[gnus-recent (20210920.902) --- Article breadcrumbs for Gnus]]></title>
        <id>https://melpa.org/packages/gnus-recent-20210920.902.el</id>
        <link href="https://melpa.org/#/gnus-recent"/>
        <updated>2021-09-20T09:02:00.000Z</updated>
        <summary type="html"><![CDATA[The gnus-recent package has been updated to version 20210920.902.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Using BSP effectively in IntelliJ and Scala]]></title>
        <id>https://www.reddit.com/r/scala/comments/prqdwx/using_bsp_effectively_in_intellij_and_scala/</id>
        <link href="https://www.reddit.com/r/scala/comments/prqdwx/using_bsp_effectively_in_intellij_and_scala/"/>
        <updated>2021-09-20T08:10:36.000Z</updated>
        <summary type="html"><![CDATA[submitted by    /u/hmemcpy  
 [link]   [comments]]]></summary>
        <author>
            <name>Scala</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[FIrst approach to zettelkasten and doubts]]></title>
        <id>1971@/discussions</id>
        <link href="https://forum.zettelkasten.de/discussion/1971/first-approach-to-zettelkasten-and-doubts"/>
        <updated>2021-09-20T07:51:57.000Z</updated>
        <summary type="html"><![CDATA[Hello everyone,
I usually take a ton of notes from narrative non-fiction books I read: story ideas, research etc... Those should be considered "literature notes" in the context of zettelkasten. I find it confusing having these notes in a single file, so I split them by topic or anecdote. But I don't like to have my computer crammed with tons of files. When I read a new book on the same topic, rather than creating new notes and linking them, I tend to group the notes I already have with new notes who adds info to the same topic or details to the same anecdote. Still, I keep a reference to the original source (in the form of citation).
To better explain what I do:
I read a book about a writer and I take a note on an episode of his life (which we'll call NOTE 1).
Another episode of his life goes to a different note (NOTE 2) in the same folder.
I read another book and I find some detail on the same episode as NOTE 1. I don't create a new note but I add it to NOTE 1 and eventually add a citation for the new source.
I read a book about a chemist and I take a note about one of his discoveries in the specific folder of that book/project. It isn't directly related to the episode of NOTE 1, but I think linking them can bring to a new perspective. I create NOTE 3 and link NOTE 1 and NOTE 3.
Is that a good practice, or is it better to have a single file for the notes coming from a book, then different super short notes for concepts I want to keep from each book?]]></summary>
        <author>
            <name>pablo24</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[org-ref-prettify (20210920.634) --- Prettify org-ref citation links]]></title>
        <id>https://melpa.org/packages/org-ref-prettify-20210920.634.el</id>
        <link href="https://melpa.org/#/org-ref-prettify"/>
        <updated>2021-09-20T06:34:00.000Z</updated>
        <summary type="html"><![CDATA[The org-ref-prettify package has been updated to version 20210920.634.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Haskell Foundation Community Grants (HFTP Proposal)]]></title>
        <id>https://www.reddit.com/r/haskell/comments/prolxx/haskell_foundation_community_grants_hftp_proposal/</id>
        <link href="https://www.reddit.com/r/haskell/comments/prolxx/haskell_foundation_community_grants_hftp_proposal/"/>
        <updated>2021-09-20T05:44:28.000Z</updated>
        <summary type="html"><![CDATA[submitted by    /u/cdsmith  
 [link]   [comments]]]></summary>
        <author>
            <name>Haskell :: Reddit</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Do you have someone experienced with Flutter and Scala? What is your stack, and what do you think about this?]]></title>
        <id>https://www.reddit.com/r/scala/comments/proiji/do_you_have_someone_experienced_with_flutter_and/</id>
        <link href="https://www.reddit.com/r/scala/comments/proiji/do_you_have_someone_experienced_with_flutter_and/"/>
        <updated>2021-09-20T05:36:21.000Z</updated>
        <summary type="html"><![CDATA[For Scala I prefer fp libraries like ZIO/Cats. I want to see good examples. How do you measure performance?
    submitted by    /u/PrestigiousAd5202  
 [link]   [comments]]]></summary>
        <author>
            <name>Scala</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[perspective (20210920.345) --- switch between named "perspectives" of the editor]]></title>
        <id>https://melpa.org/packages/perspective-20210920.345.el</id>
        <link href="https://melpa.org/#/perspective"/>
        <updated>2021-09-20T03:45:00.000Z</updated>
        <summary type="html"><![CDATA[The perspective package has been updated to version 20210920.345.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[justl (20210920.241) --- Major mode for driving just files]]></title>
        <id>https://melpa.org/packages/justl-20210920.241.el</id>
        <link href="https://melpa.org/#/justl"/>
        <updated>2021-09-20T02:41:00.000Z</updated>
        <summary type="html"><![CDATA[The justl package has been updated to version 20210920.241.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Hello Everyone]]></title>
        <id>1968@/discussions</id>
        <link href="https://forum.zettelkasten.de/discussion/1968/hello-everyone"/>
        <updated>2021-09-20T01:35:08.000Z</updated>
        <summary type="html"><![CDATA[I hope everyone is doing well. I am a systems programmer and a life learner. I've been searching for a better way to store and utilize notes. Recently, I stumbled upon zettelkasten and the archive. I enjoy it so far and look forward to learning more about the process and tool from you all.]]></summary>
        <author>
            <name>ShellBeach</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[with-venv (20210920.126) --- Execute with Python virtual environment activated]]></title>
        <id>https://melpa.org/packages/with-venv-20210920.126.el</id>
        <link href="https://melpa.org/#/with-venv"/>
        <updated>2021-09-20T01:26:00.000Z</updated>
        <summary type="html"><![CDATA[The with-venv package has been updated to version 20210920.126.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[org-gtd (20210920.112) --- An implementation of GTD]]></title>
        <id>https://melpa.org/packages/org-gtd-20210920.112.el</id>
        <link href="https://melpa.org/#/org-gtd"/>
        <updated>2021-09-20T01:12:00.000Z</updated>
        <summary type="html"><![CDATA[The org-gtd package has been updated to version 20210920.112.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[sbt 1.6.0-M1 released]]></title>
        <id>https://www.reddit.com/r/scala/comments/prkj3r/sbt_160m1_released/</id>
        <link href="https://www.reddit.com/r/scala/comments/prkj3r/sbt_160m1_released/"/>
        <updated>2021-09-20T01:06:10.000Z</updated>
        <summary type="html"><![CDATA[submitted by    /u/eed3si9n  
 [link]   [comments]]]></summary>
        <author>
            <name>Scala</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[This week in #Scala (Sep 20, 2021)]]></title>
        <id>https://www.reddit.com/r/scala/comments/prjdpl/this_week_in_scala_sep_20_2021/</id>
        <link href="https://www.reddit.com/r/scala/comments/prjdpl/this_week_in_scala_sep_20_2021/"/>
        <updated>2021-09-19T23:53:23.000Z</updated>
        <summary type="html"><![CDATA[submitted by    /u/petrzapletal  
 [link]   [comments]]]></summary>
        <author>
            <name>Scala</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[ue (20210919.2258) --- Minor mode for Unreal Engine projects]]></title>
        <id>https://melpa.org/packages/ue-20210919.2258.tar</id>
        <link href="https://melpa.org/#/ue"/>
        <updated>2021-09-19T22:58:00.000Z</updated>
        <summary type="html"><![CDATA[The ue package has been updated to version 20210919.2258.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Zetteldeft: What is a backlink]]></title>
        <id>1967@/discussions</id>
        <link href="https://forum.zettelkasten.de/discussion/1967/zetteldeft-what-is-a-backlink"/>
        <updated>2021-09-19T19:02:56.000Z</updated>
        <summary type="html"><![CDATA[I am new to Zettelkasten-method and work with zetteldeft (currently 5 real zettel in it).
I do not understand the concept of backlinks. What is it and how to use it?
From the meaning of the word I would assume that a "backlink" would create a 1to1 relation by default.
But in "B" is a new and automatic created link (back) to "A", too.
So what is backlinking about?]]></summary>
        <author>
            <name>buhtz</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[ox-asciidoc (20210919.1844) --- AsciiDoc Back-End for Org Export Engine]]></title>
        <id>https://melpa.org/packages/ox-asciidoc-20210919.1844.el</id>
        <link href="https://melpa.org/#/ox-asciidoc"/>
        <updated>2021-09-19T18:44:00.000Z</updated>
        <summary type="html"><![CDATA[The ox-asciidoc package has been updated to version 20210919.1844.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[cider (20210919.1839) --- Clojure Interactive Development Environment that Rocks]]></title>
        <id>https://melpa.org/packages/cider-20210919.1839.tar</id>
        <link href="https://melpa.org/#/cider"/>
        <updated>2021-09-19T18:39:00.000Z</updated>
        <summary type="html"><![CDATA[The cider package has been updated to version 20210919.1839.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[ox-textile (20210919.1738) --- Textile Back-End for Org Export Engine]]></title>
        <id>https://melpa.org/packages/ox-textile-20210919.1738.el</id>
        <link href="https://melpa.org/#/ox-textile"/>
        <updated>2021-09-19T17:38:00.000Z</updated>
        <summary type="html"><![CDATA[The ox-textile package has been updated to version 20210919.1738.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[consult (20210919.1618) --- Consulting completing-read]]></title>
        <id>https://melpa.org/packages/consult-20210919.1618.tar</id>
        <link href="https://melpa.org/#/consult"/>
        <updated>2021-09-19T16:18:00.000Z</updated>
        <summary type="html"><![CDATA[The consult package has been updated to version 20210919.1618.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[weblorg (20210919.1547) --- Static Site Generator for org-mode]]></title>
        <id>https://melpa.org/packages/weblorg-20210919.1547.tar</id>
        <link href="https://melpa.org/#/weblorg"/>
        <updated>2021-09-19T15:47:00.000Z</updated>
        <summary type="html"><![CDATA[The weblorg package has been updated to version 20210919.1547.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Scala project from scratch #1 - rough idea, setting up, design decisions]]></title>
        <id>https://www.reddit.com/r/scala/comments/pr8k60/scala_project_from_scratch_1_rough_idea_setting/</id>
        <link href="https://www.reddit.com/r/scala/comments/pr8k60/scala_project_from_scratch_1_rough_idea_setting/"/>
        <updated>2021-09-19T14:05:28.000Z</updated>
        <summary type="html"><![CDATA[submitted by    /u/kubukoz  
 [link]   [comments]]]></summary>
        <author>
            <name>Scala</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[xah-fly-keys (20210919.1355) --- ergonomic modal keybinding minor mode.]]></title>
        <id>https://melpa.org/packages/xah-fly-keys-20210919.1355.el</id>
        <link href="https://melpa.org/#/xah-fly-keys"/>
        <updated>2021-09-19T13:55:00.000Z</updated>
        <summary type="html"><![CDATA[The xah-fly-keys package has been updated to version 20210919.1355.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[zetteldeft (20210919.1306) --- Turn deft into a zettelkasten system]]></title>
        <id>https://melpa.org/packages/zetteldeft-20210919.1306.tar</id>
        <link href="https://melpa.org/#/zetteldeft"/>
        <updated>2021-09-19T13:06:00.000Z</updated>
        <summary type="html"><![CDATA[The zetteldeft package has been updated to version 20210919.1306.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Plain Org for iOS: latest render + inline edit experience]]></title>
        <id>https://www.reddit.com/r/orgmode/comments/pr7cho/plain_org_for_ios_latest_render_inline_edit/</id>
        <link href="https://www.reddit.com/r/orgmode/comments/pr7cho/plain_org_for_ios_latest_render_inline_edit/"/>
        <updated>2021-09-19T12:51:02.000Z</updated>
        <summary type="html"><![CDATA[submitted by    /u/xenodium  
 [link]   [comments]]]></summary>
        <author>
            <name>Org-mode</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[teletext-yle (20210919.1224) --- Teletext provider for Finnish national network YLE]]></title>
        <id>https://melpa.org/packages/teletext-yle-20210919.1224.el</id>
        <link href="https://melpa.org/#/teletext-yle"/>
        <updated>2021-09-19T12:24:00.000Z</updated>
        <summary type="html"><![CDATA[The teletext-yle package has been updated to version 20210919.1224.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[swiper (20210919.1221) --- Isearch with an overview. Oh, man!]]></title>
        <id>https://melpa.org/packages/swiper-20210919.1221.el</id>
        <link href="https://melpa.org/#/swiper"/>
        <updated>2021-09-19T12:21:00.000Z</updated>
        <summary type="html"><![CDATA[The swiper package has been updated to version 20210919.1221.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Navigating from the OmniBar to the Note List?]]></title>
        <id>1966@/discussions</id>
        <link href="https://forum.zettelkasten.de/discussion/1966/navigating-from-the-omnibar-to-the-note-list"/>
        <updated>2021-09-19T12:19:39.000Z</updated>
        <summary type="html"><![CDATA[I'm experimenting with a new workflow and have not found a way to get from the OmniBar being active, moving the focus to the Note List without mousing. Is this possible with a keyboard shortcut or a menu item? A tab moves the focus past the Note List directly to the editor. Select Previous and Next Note work to move up and down the note list but keep the focus in the OmniBar. My goal is to use ⌘A to select all the notes in the Note List, but this requires the focus to be in the Note List.]]></summary>
        <author>
            <name>Will</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[devdocs (20210919.1042) --- Emacs viewer for DevDocs]]></title>
        <id>https://melpa.org/packages/devdocs-20210919.1042.el</id>
        <link href="https://melpa.org/#/devdocs"/>
        <updated>2021-09-19T10:42:00.000Z</updated>
        <summary type="html"><![CDATA[The devdocs package has been updated to version 20210919.1042.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[transient (20210919.1006) --- Transient commands]]></title>
        <id>https://melpa.org/packages/transient-20210919.1006.tar</id>
        <link href="https://melpa.org/#/transient"/>
        <updated>2021-09-19T10:06:00.000Z</updated>
        <summary type="html"><![CDATA[The transient package has been updated to version 20210919.1006.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Connecting haskell app to a mongodb server via docker-compose]]></title>
        <id>https://www.reddit.com/r/haskell/comments/pr51ym/connecting_haskell_app_to_a_mongodb_server_via/</id>
        <link href="https://www.reddit.com/r/haskell/comments/pr51ym/connecting_haskell_app_to_a_mongodb_server_via/"/>
        <updated>2021-09-19T09:52:23.000Z</updated>
        <summary type="html"><![CDATA[Connecting my app to a local instance directly on my computer works totally fine. The problem happens when connecting via the service name via docker-compose. Here's how the database-connection part looks in my haskell code:
 import Database.MongoDB pipe <- connect (host "database") 
 docker-compoes.yaml:
 version: "3.8" services: myservice: build: . ports: - "5000:5000" depends_on: - database database: restart: always image: mongo ports: - 27017:27017 
 And the error I'm getting is:
 Network.Socket.connect: <socket: 39>: does not exist (Connection refused)
 Any idea what I'm doing wrong? Thanks!
    submitted by    /u/storyglitch  
 [link]   [comments]]]></summary>
        <author>
            <name>Haskell :: Reddit</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[finito (20210919.929) --- View and collect books]]></title>
        <id>https://melpa.org/packages/finito-20210919.929.tar</id>
        <link href="https://melpa.org/#/finito"/>
        <updated>2021-09-19T09:29:00.000Z</updated>
        <summary type="html"><![CDATA[The finito package has been updated to version 20210919.929.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Emulating an imperative stateful foreach loop?]]></title>
        <id>https://www.reddit.com/r/purescript/comments/pr4ib9/emulating_an_imperative_stateful_foreach_loop/</id>
        <link href="https://www.reddit.com/r/purescript/comments/pr4ib9/emulating_an_imperative_stateful_foreach_loop/"/>
        <updated>2021-09-19T09:04:13.000Z</updated>
        <summary type="html"><![CDATA[Every now and then I come across a situation in which I need to transform a sequence of elements, say a List, but the transformation isn't independent for each element and I would need to keep additional state during the loop to perform the transformations I need.
 Let me try to give a simple example. In C# I could write something like
  private static List<object> transformSomeElementFirstTimeItOccurs(List<object> list) { bool done = false; var result = new List<object>(); foreach (var elem in list) { if (!done && elem is SomeType) { result.Add(transformElement(elem)); done = true; } else { result.Add(elem); } } return result; } 
 My naieve attempt at achieving this in PureScript currently looks as follows.
  transformSomeElementFirstTimeItOccurs :: List ElemType -> List ElemType transformSomeElementFirstTimeItOccurs elems = reverse (loop elems).result where loop :: List ElemType -> { done :: Boolean , result :: List ElemType } loop = foldl (\{ result, done } elem -> case elem of SomeValueConstructor t -> { result : SomeValueConstructor (if done then t else transformValue t):result , done : true } _ -> { result : elem:result, done }) { result : Nil, done : false } 
 But it feels like it could use some improvement. Is there an idiomatic way to do this kind of thing?
    submitted by    /u/ctenbrinke  
 [link]   [comments]]]></summary>
        <author>
            <name>PureScript</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Optimizing Kafka Performance]]></title>
        <id>https://www.reddit.com/r/scala/comments/pr45zg/optimizing_kafka_performance/</id>
        <link href="https://www.reddit.com/r/scala/comments/pr45zg/optimizing_kafka_performance/"/>
        <updated>2021-09-19T08:33:34.000Z</updated>
        <summary type="html"><![CDATA[submitted by    /u/ayearebay  
 [link]   [comments]]]></summary>
        <author>
            <name>Scala</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Is there a dialect of haskell insensitive to whitespaces?]]></title>
        <id>https://www.reddit.com/r/haskell/comments/pr29c3/is_there_a_dialect_of_haskell_insensitive_to/</id>
        <link href="https://www.reddit.com/r/haskell/comments/pr29c3/is_there_a_dialect_of_haskell_insensitive_to/"/>
        <updated>2021-09-19T05:46:04.000Z</updated>
        <summary type="html"><![CDATA[The level of indenting changes the meaning of a line in haskell.
 Haskell is a decent programming language, but I don't like fine-tuning whitespaces in haskell code. Editor support for haskell auto indentation can be often broken. I don't want to manually indent haskell code.
 Perhaps, is there a dialect of haskell that ignores whitespaces?
    submitted by    /u/MilkroTik  
 [link]   [comments]]]></summary>
        <author>
            <name>Haskell :: Reddit</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Looking for projects that make heavy use of IntMap which have benchmarks]]></title>
        <id>https://www.reddit.com/r/haskell/comments/pr0ykr/looking_for_projects_that_make_heavy_use_of/</id>
        <link href="https://www.reddit.com/r/haskell/comments/pr0ykr/looking_for_projects_that_make_heavy_use_of/"/>
        <updated>2021-09-19T04:04:59.000Z</updated>
        <summary type="html"><![CDATA[I asked this on the libraries mailing list but thought posting here would bring in potentially more responses. I made a recent change to the behaviour of lookup and find (see here for more details: https://github.com/haskell/containers/pull/800). 
 We would like to make sure this change does not cause regressions to downstream users and so I wanted to ask if any of you knew any projects that make serious use of Intmap with benchmarks available so I could measure changes in performance?
 Cheers!
    submitted by    /u/sansboarders  
 [link]   [comments]]]></summary>
        <author>
            <name>Haskell :: Reddit</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[homebrew-mode (20210919.331) --- minor mode for editing Homebrew formulae]]></title>
        <id>https://melpa.org/packages/homebrew-mode-20210919.331.el</id>
        <link href="https://melpa.org/#/homebrew-mode"/>
        <updated>2021-09-19T03:31:00.000Z</updated>
        <summary type="html"><![CDATA[The homebrew-mode package has been updated to version 20210919.331.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[[ANN] explainable-predicates: Predicates that can explain themselves]]></title>
        <id>https://www.reddit.com/r/haskell/comments/pqzv8o/ann_explainablepredicates_predicates_that_can/</id>
        <link href="https://www.reddit.com/r/haskell/comments/pqzv8o/ann_explainablepredicates_predicates_that_can/"/>
        <updated>2021-09-19T02:47:47.000Z</updated>
        <summary type="html"><![CDATA[submitted by    /u/cdsmith  
 [link]   [comments]]]></summary>
        <author>
            <name>Haskell :: Reddit</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[A simple ray tracer written in Scala (in-progress)]]></title>
        <id>https://www.reddit.com/r/scala/comments/pqzg8k/a_simple_ray_tracer_written_in_scala_inprogress/</id>
        <link href="https://www.reddit.com/r/scala/comments/pqzg8k/a_simple_ray_tracer_written_in_scala_inprogress/"/>
        <updated>2021-09-19T02:19:13.000Z</updated>
        <summary type="html"><![CDATA[submitted by    /u/ybamelcash  
 [link]   [comments]]]></summary>
        <author>
            <name>Scala</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[[ANN] merge, cropty, and trust-chain]]></title>
        <id>https://www.reddit.com/r/haskell/comments/pqzd2z/ann_merge_cropty_and_trustchain/</id>
        <link href="https://www.reddit.com/r/haskell/comments/pqzd2z/ann_merge_cropty_and_trustchain/"/>
        <updated>2021-09-19T02:13:19.000Z</updated>
        <summary type="html"><![CDATA[Figured I should post these new ones here, as they _might_ actually be useful for someone else.
 https://hackage.haskell.org/package/merge is a very fancy way to write functions which merge two items of the same type into something else, potentially failing with a validation error. I had all this code like:
 g x y = Ploop <$> f x y <*> h x y <*> k x y 
 and I figured I could write a little Applicative wrapper that would manage all of that repetitive application of x and y for me. The interface is something like:
 data User = User { pubKey :: PublicKey , names :: Set Text , emails :: Set Text , legalName :: Maybe Text } mergeUsers :: Merge [Text] User User mergeUsers = User <$> required pubKey .? ["public key"] <*> combine names <*> combine emails <*> optional legalName .? ["legal name"] f …]]></summary>
        <author>
            <name>Haskell :: Reddit</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[sbt Tutorial - Part 2]]></title>
        <id>https://www.reddit.com/r/scala/comments/pqxgjq/sbt_tutorial_part_2/</id>
        <link href="https://www.reddit.com/r/scala/comments/pqxgjq/sbt_tutorial_part_2/"/>
        <updated>2021-09-19T00:04:36.000Z</updated>
        <summary type="html"><![CDATA[submitted by    /u/agilesteel  
 [link]   [comments]]]></summary>
        <author>
            <name>Scala</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[proof-general (20210918.2238) --- A generic front-end for proof assistants (interactive theorem provers)]]></title>
        <id>https://melpa.org/packages/proof-general-20210918.2238.tar</id>
        <link href="https://melpa.org/#/proof-general"/>
        <updated>2021-09-18T22:38:00.000Z</updated>
        <summary type="html"><![CDATA[The proof-general package has been updated to version 20210918.2238.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How do FinTech companies use Scala]]></title>
        <id>https://www.reddit.com/r/scala/comments/pqvhgs/how_do_fintech_companies_use_scala/</id>
        <link href="https://www.reddit.com/r/scala/comments/pqvhgs/how_do_fintech_companies_use_scala/"/>
        <updated>2021-09-18T22:01:11.000Z</updated>
        <summary type="html"><![CDATA[More specifically just want to know 
  
are there any libraries/frameworks commonly used in the industry
 do they use the purely FP or a hybrid of OO/FP
  
I know it really depends on the specific company but best guess is okay
    submitted by    /u/gekigangerii  
 [link]   [comments]]]></summary>
        <author>
            <name>Scala</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[imake (20210918.2046) --- Simple, opinionated make target runner]]></title>
        <id>https://melpa.org/packages/imake-20210918.2046.el</id>
        <link href="https://melpa.org/#/imake"/>
        <updated>2021-09-18T20:46:00.000Z</updated>
        <summary type="html"><![CDATA[The imake package has been updated to version 20210918.2046.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[magit-lfs (20210918.2000) --- Magit plugin for Git LFS]]></title>
        <id>https://melpa.org/packages/magit-lfs-20210918.2000.el</id>
        <link href="https://melpa.org/#/magit-lfs"/>
        <updated>2021-09-18T20:00:00.000Z</updated>
        <summary type="html"><![CDATA[The magit-lfs package has been updated to version 20210918.2000.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Help with simple dependency problem]]></title>
        <id>https://www.reddit.com/r/purescript/comments/pqs5e8/help_with_simple_dependency_problem/</id>
        <link href="https://www.reddit.com/r/purescript/comments/pqs5e8/help_with_simple_dependency_problem/"/>
        <updated>2021-09-18T18:51:08.000Z</updated>
        <summary type="html"><![CDATA[I suck with dependency stuff :( Nothing ever seems to work and I can never seem to understand why. I'm trying to spago build this tictactoe game. What I've done so far is spago init and added a few dependencies to spago.dhall, which now looks like this
 , dependencies = [ "console" , "effect" , "prelude" , "psci-support" , "debug" , "css" , "arrays" , "integers" , "maybe" , "tuples" , "halogen" , "foldable-traversable" ] 
 Running build again I get the following errors: https://pastebin.com/cUutNNn4
 What, why? Debug.Trace comes from package debug and Halogen.HTML.CSS comes from package halogen, both of which I have there.
 What do I need to do please?
 Is there any tool that can take a look at the import statements used in a project and solve the dependencies based on that?
    submitted by    /u/puzzle-game  
 [link]   [comments]]]></summary>
        <author>
            <name>PureScript</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[org-notifications (20210918.1827) --- Creates notifications for org-mode entries]]></title>
        <id>https://melpa.org/packages/org-notifications-20210918.1827.tar</id>
        <link href="https://melpa.org/#/org-notifications"/>
        <updated>2021-09-18T18:27:00.000Z</updated>
        <summary type="html"><![CDATA[The org-notifications package has been updated to version 20210918.1827.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[org-jira (20210918.1741) --- Syncing between Jira and Org-mode.]]></title>
        <id>https://melpa.org/packages/org-jira-20210918.1741.tar</id>
        <link href="https://melpa.org/#/org-jira"/>
        <updated>2021-09-18T17:41:00.000Z</updated>
        <summary type="html"><![CDATA[The org-jira package has been updated to version 20210918.1741.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[tree-sitter-langs (20210918.1621) --- Grammar bundle for tree-sitter]]></title>
        <id>https://melpa.org/packages/tree-sitter-langs-20210918.1621.tar</id>
        <link href="https://melpa.org/#/tree-sitter-langs"/>
        <updated>2021-09-18T16:21:00.000Z</updated>
        <summary type="html"><![CDATA[The tree-sitter-langs package has been updated to version 20210918.1621.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[embark (20210918.1609) --- Conveniently act on minibuffer completions]]></title>
        <id>https://melpa.org/packages/embark-20210918.1609.tar</id>
        <link href="https://melpa.org/#/embark"/>
        <updated>2021-09-18T16:09:00.000Z</updated>
        <summary type="html"><![CDATA[The embark package has been updated to version 20210918.1609.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[general (20210918.1525) --- Convenience wrappers for keybindings.]]></title>
        <id>https://melpa.org/packages/general-20210918.1525.tar</id>
        <link href="https://melpa.org/#/general"/>
        <updated>2021-09-18T15:25:00.000Z</updated>
        <summary type="html"><![CDATA[The general package has been updated to version 20210918.1525.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[doom-modeline (20210918.1511) --- A minimal and modern mode-line]]></title>
        <id>https://melpa.org/packages/doom-modeline-20210918.1511.tar</id>
        <link href="https://melpa.org/#/doom-modeline"/>
        <updated>2021-09-18T15:11:00.000Z</updated>
        <summary type="html"><![CDATA[The doom-modeline package has been updated to version 20210918.1511.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How to Stop Org-Agenda Scrolling after Refile]]></title>
        <id>https://www.reddit.com/r/orgmode/comments/pqnl38/how_to_stop_orgagenda_scrolling_after_refile/</id>
        <link href="https://www.reddit.com/r/orgmode/comments/pqnl38/how_to_stop_orgagenda_scrolling_after_refile/"/>
        <updated>2021-09-18T14:37:13.000Z</updated>
        <summary type="html"><![CDATA[I am having a weird problem, org-agenda scrolls the screen down after refilling.
 ​
 In the below screenshots I show a before and after. All I did was refile one entry under the block "To Refile"
 Before
 ​
 After
 ​
 This is moderately annoying, any help would be greatly appreciated!
 ​
 EDIT:
 This seems to be a hack that works a little better than wrapping (org-agenda-refile) in a save-excursion expression. That said, it feels pretty hacky so advice is very welcome.
 ​
 (defun jds/org-agenda-refile ()
 "org-agenda-refile but saves excursion."
 (interactive)
 (let ((cpoint (point))
 (minpoint (window-start)))
 (org-agenda-refile)
 (set-window-start (selected-window) minpoint)
 (goto-char cpoint)))
    submitted by    /u/JustinSilverman  
 [link]   [comments]]]></summary>
        <author>
            <name>Org-mode</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[elx (20210918.1436) --- extract information from Emacs Lisp libraries]]></title>
        <id>https://melpa.org/packages/elx-20210918.1436.el</id>
        <link href="https://melpa.org/#/elx"/>
        <updated>2021-09-18T14:36:00.000Z</updated>
        <summary type="html"><![CDATA[The elx package has been updated to version 20210918.1436.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Generalizing getX for HList]]></title>
        <id>https://www.reddit.com/r/haskell/comments/pqnc5q/generalizing_getx_for_hlist/</id>
        <link href="https://www.reddit.com/r/haskell/comments/pqnc5q/generalizing_getx_for_hlist/"/>
        <updated>2021-09-18T14:22:44.000Z</updated>
        <summary type="html"><![CDATA[Hi folks,
 I am playing around with heterogenous lists. I'd like to be able to get an item from the list. I have written the following functions:
 ```haskell getFirst :: HList (e : es) -> e getFirst (HCons e _) = e
 getSecond :: HList (e : a : es) -> a getSecond = getFirst . rest
 getThird :: HList (e : a : b : es) -> b getThird = getSecond . rest
 rest :: HList (e : es) -> HList es rest (HCons _ es) = es ```
 Now, I'd like to generalize them using a type class:
 haskell class GetIdx (idx :: Nat) where getIdx :: HList (Els idx) -> El (Els idx) idx 
 I have come to the conclusion that it is impossible to write a proper signature for the getIdx method, because a type family must reduce to a concrete type. In other words, I cannot have the following type family:
 ```haskell
 -- For "Els 0", I am naively copying the relevant part of the type signature from "getFirst" above. type family Els idx where Els 0 = (e : es) Els n = e : Els (n - 1) ```
 Is my conclusion that it is impossible to write a getIdx function such that it an be called like getIdx @1 myHList correct? Is my reasoning for why it is impossible to do so also correct?
    submitted by    /u/f0rgot  
 [link]   [comments]]]></summary>
        <author>
            <name>Haskell :: Reddit</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[learn-ocaml (20210918.1346) --- Emacs frontend for learn-ocaml]]></title>
        <id>https://melpa.org/packages/learn-ocaml-20210918.1346.el</id>
        <link href="https://melpa.org/#/learn-ocaml"/>
        <updated>2021-09-18T13:46:00.000Z</updated>
        <summary type="html"><![CDATA[The learn-ocaml package has been updated to version 20210918.1346.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Questions that arise after a month of ZettelKasten]]></title>
        <id>1965@/discussions</id>
        <link href="https://forum.zettelkasten.de/discussion/1965/questions-that-arise-after-a-month-of-zettelkasten"/>
        <updated>2021-09-18T13:43:27.000Z</updated>
        <summary type="html"><![CDATA[Hey there, I'm new to the ZettelKasten method.
 ).
Also, I spend a lot of time writing those notes, around half an hour per note, sometimes for two hours a day. I have a lot of spare time for the last month, but it is going to change. How much time do you spend on each note? How much time it takes you to decide to where to put the note in the ZettelKasten?
Last question, I have 13 index notes out 100. That sounds okay?]]></summary>
        <author>
            <name>Pitale</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[A solution to see a really long file?]]></title>
        <id>https://www.reddit.com/r/orgmode/comments/pqll6j/a_solution_to_see_a_really_long_file/</id>
        <link href="https://www.reddit.com/r/orgmode/comments/pqll6j/a_solution_to_see_a_really_long_file/"/>
        <updated>2021-09-18T12:32:28.000Z</updated>
        <summary type="html"><![CDATA[EDIT: _viz_ showed that is an existing functionality, I tested and is working, just open more windows horizontally and then use follow mode
 -------------
 HI, I am trying since few days org mode and have millions of lines of documents. The idea would be to read ONE document really long in 4 or 5 different columns. I noticed that if I open an emacs instance I do not need too much width, so I can exploit the height of my laptop enlarging vertically the file, but the height is limited to around 25 cms in a laptop. Because org does not wrap the content on default, I can open an instance vertically in 1/5 of the screen width, so 4/5 of the screen are not used at all! There is an option to open a subsection on the right of the first instance, but why not opening different columns and see all the long document or almost, so that in one single screen we may have an outline on 2-3- 4 or even 5 columns on almost all the document. So that we may scroll one column for instance the second and so the all the columns also scroll accordingly, so that we can see for instance almost all the chapters of a huge book , then could open some paragraphs title of chapter 33 and 56, and compare them together, move content in seconds etc. The simple idea is that people say mindmaps give more an helicopter vision of all the document(and in fact mind maps take all the screen), everyone in the org community debates if files should have links or stay in a single file.Why not giving to the users the possibility to open multiple columns with scrolling integration, so that the user can see huge documents with a glance, be more creative, modify things, search occurrences, it would be genial imo, because org supports different colors per level on default, and would be really easy to spot the structure and be more efficient, combine new ideas creatively, never miss the big picture, etc
    submitted by    /u/ndrokky  
 [link]   [comments]]]></summary>
        <author>
            <name>Org-mode</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Making sense of Scala's regex syntax]]></title>
        <id>https://www.reddit.com/r/scala/comments/pqkczs/making_sense_of_scalas_regex_syntax/</id>
        <link href="https://www.reddit.com/r/scala/comments/pqkczs/making_sense_of_scalas_regex_syntax/"/>
        <updated>2021-09-18T10:58:58.000Z</updated>
        <summary type="html"><![CDATA[So, I was watching a popular Spark using Scala tutorial on Udemy and there I came across this syntax for regex matching:
 val theUltimateAnswer: String = "To life, the universe, and everything is 42." val pattern = """.* ([\d]+).*""".r val pattern(answerString) = theUltimateAnswer 
 I am beginner in Scala but I have some knowledge of programming with other languages and this syntax does not make sense to me because it should have been the other way round no?
 Like given below:
 val theUltimateAnswer: String = "To life, the universe, and everything is 42." val pattern = """.* ([\d]+).*""".r val answerString = pattern(theUltimateAnswer) 
 ​
 Apologies if I have posted a duplicate question, I have searched related topics but I am getting no relevant results which explain this weird syntax.
    submitted by    /u/indie_mumbai  
 [link]   [comments]]]></summary>
        <author>
            <name>Scala</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Akka became the de-facto solution for Scala web development?]]></title>
        <id>https://www.reddit.com/r/scala/comments/pqjed7/akka_became_the_defacto_solution_for_scala_web/</id>
        <link href="https://www.reddit.com/r/scala/comments/pqjed7/akka_became_the_defacto_solution_for_scala_web/"/>
        <updated>2021-09-18T09:36:24.000Z</updated>
        <summary type="html"><![CDATA[So...
 Back in the past, something around 2013, we had amazing libs like Scalatra, Finatra, Finagle, Finch, Akka and Play(blergh) in scala ecosystem.
 In that time developers, at least me, used to write code around Finatra or Finagle and now it seems like everything is built around Akka.
 Why Akka became the de-facto solution?
    submitted by    /u/gbrennon  
 [link]   [comments]]]></summary>
        <author>
            <name>Scala</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[What tools/methods do you use for debugging?]]></title>
        <id>https://www.reddit.com/r/purescript/comments/pqipw4/what_toolsmethods_do_you_use_for_debugging/</id>
        <link href="https://www.reddit.com/r/purescript/comments/pqipw4/what_toolsmethods_do_you_use_for_debugging/"/>
        <updated>2021-09-18T08:35:19.000Z</updated>
        <summary type="html"><![CDATA[I'm using the following debug function for print statements while debugging.
 import Prelude import Effect.Console (log) import Effect.Unsafe (unsafePerformEffect) debug :: forall a. String -> a -> a debug msg = snd $ unsafePerformEffect $ log msg snd :: forall a b. a -> b -> b snd _ b = b 
 This would then be used as follows
 myFuncBeingDebugged a b c = "test: " <> show a # debug $ someOtherFunc $ b c bla... 
 Are there ways to improve the debugging experience? (I'm using VSCode if that matters)
    submitted by    /u/ctenbrinke  
 [link]   [comments]]]></summary>
        <author>
            <name>PureScript</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Type class backend: how to evolve with class]]></title>
        <id>https://www.reddit.com/r/haskell/comments/pqhivm/type_class_backend_how_to_evolve_with_class/</id>
        <link href="https://www.reddit.com/r/haskell/comments/pqhivm/type_class_backend_how_to_evolve_with_class/"/>
        <updated>2021-09-18T06:51:33.000Z</updated>
        <summary type="html"><![CDATA[I have been thinking of ways to evolve an implementation (backend) of a type class without affecting user code. It's been rolling in my head for a while and I'm looking for feedback and examples. A good example is the functor hierarchy: all the functor type classes are unified by a general FunctorOf interface but they are defined separately for now. We want to be able to generalize existing type classes without modifying every instance. It should be backwards compatible.
 Functor = FunctorOf (->) (->) Contravariant = FunctorOf (<˗) (->) Bifunctor = FunctorOf (->) (->) (->) Profunctor = FunctorOf (<˗) (->) (->) FFunctor = FunctorOf (~>) (->) HFunctor = FunctorOf (~>) (->) (->) ExpFunctor = FunctorOf (<->) (->) Linear.Functor = FunctorOf (#->) (#->) FunctorWithIndex i = FunctorOf (Cayley (i …]]></summary>
        <author>
            <name>Haskell :: Reddit</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[string-inflection (20210918.419) --- underscore -> UPCASE -> CamelCase -> lowerCamelCase conversion of names]]></title>
        <id>https://melpa.org/packages/string-inflection-20210918.419.el</id>
        <link href="https://melpa.org/#/string-inflection"/>
        <updated>2021-09-18T04:19:00.000Z</updated>
        <summary type="html"><![CDATA[The string-inflection package has been updated to version 20210918.419.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[doct (20210917.2228) --- DOCT: Declarative Org capture templates]]></title>
        <id>https://melpa.org/packages/doct-20210917.2228.el</id>
        <link href="https://melpa.org/#/doct"/>
        <updated>2021-09-17T22:28:00.000Z</updated>
        <summary type="html"><![CDATA[The doct package has been updated to version 20210917.2228.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[new logo?]]></title>
        <id>https://www.reddit.com/r/orgmode/comments/pq6rs3/new_logo/</id>
        <link href="https://www.reddit.com/r/orgmode/comments/pq6rs3/new_logo/"/>
        <updated>2021-09-17T19:19:53.000Z</updated>
        <summary type="html"><![CDATA[Hello. 
 I use org-mode for a couple of years already. And it's a great productivity tool.
 The only disappointment for me is its logo. It looks like a bad drawing from a child. 
 I don't think it would be hard to find someone willing to design a logo. I know the important part is the tool itself but still, a good logo will bring more people to org-mode (and emacs in general).
    submitted by    /u/Ayrat555  
 [link]   [comments]]]></summary>
        <author>
            <name>Org-mode</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[kotlin-mode (20210917.1911) --- Major mode for kotlin]]></title>
        <id>https://melpa.org/packages/kotlin-mode-20210917.1911.tar</id>
        <link href="https://melpa.org/#/kotlin-mode"/>
        <updated>2021-09-17T19:11:00.000Z</updated>
        <summary type="html"><![CDATA[The kotlin-mode package has been updated to version 20210917.1911.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[mb-url (20210917.1715) --- Multiple Backends for Emacs URL package]]></title>
        <id>https://melpa.org/packages/mb-url-20210917.1715.tar</id>
        <link href="https://melpa.org/#/mb-url"/>
        <updated>2021-09-17T17:15:00.000Z</updated>
        <summary type="html"><![CDATA[The mb-url package has been updated to version 20210917.1715.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[code-cells (20210917.1711) --- Work with code split into cells, including Jupyter notebooks]]></title>
        <id>https://melpa.org/packages/code-cells-20210917.1711.el</id>
        <link href="https://melpa.org/#/code-cells"/>
        <updated>2021-09-17T17:11:00.000Z</updated>
        <summary type="html"><![CDATA[The code-cells package has been updated to version 20210917.1711.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[ox-ssh (20210917.1517) --- SSH Config Backend for Org Export Engine]]></title>
        <id>https://melpa.org/packages/ox-ssh-20210917.1517.el</id>
        <link href="https://melpa.org/#/ox-ssh"/>
        <updated>2021-09-17T15:17:00.000Z</updated>
        <summary type="html"><![CDATA[The ox-ssh package has been updated to version 20210917.1517.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Is it possible to do compile-time validation of literal strings?]]></title>
        <id>https://www.reddit.com/r/haskell/comments/pq0f5c/is_it_possible_to_do_compiletime_validation_of/</id>
        <link href="https://www.reddit.com/r/haskell/comments/pq0f5c/is_it_possible_to_do_compiletime_validation_of/"/>
        <updated>2021-09-17T13:43:53.000Z</updated>
        <summary type="html"><![CDATA[Dear haskellers,
 There are many situations where string literals are used, for example in Hakyll website
 I'm looking for a way to type-check something like this:
 {-# LANGUAGE OverloadedStrings #-} import Data.String (IsString(..)) data Shape = Triangle | Square | Circle instance IsString Shape where fromString "s" = Square fromString "^" = Triangle fromString "c" = Circle fromString _ = undefined myShape :: Shape myShape = "^" -- Triangle invalid :: Shape invalid = "foobar" 
 Is possible for invalid to not typecheck? I'm OK with using any language extension
    submitted by    /u/VeloxAquilae  
 [link]   [comments]]]></summary>
        <author>
            <name>Haskell :: Reddit</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[evil-textobj-tree-sitter (20210917.1335) --- Provides evil textobjects using tree-sitter]]></title>
        <id>https://melpa.org/packages/evil-textobj-tree-sitter-20210917.1335.tar</id>
        <link href="https://melpa.org/#/evil-textobj-tree-sitter"/>
        <updated>2021-09-17T13:35:00.000Z</updated>
        <summary type="html"><![CDATA[The evil-textobj-tree-sitter package has been updated to version 20210917.1335.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Singleton types - Scala tutorial]]></title>
        <id>https://www.reddit.com/r/scala/comments/ppznwf/singleton_types_scala_tutorial/</id>
        <link href="https://www.reddit.com/r/scala/comments/ppznwf/singleton_types_scala_tutorial/"/>
        <updated>2021-09-17T12:58:16.000Z</updated>
        <summary type="html"><![CDATA[submitted by    /u/kubukoz  
 [link]   [comments]]]></summary>
        <author>
            <name>Scala</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[easy-escape (20210917.1254) --- Improve readability of escape characters in regular expressions]]></title>
        <id>https://melpa.org/packages/easy-escape-20210917.1254.el</id>
        <link href="https://melpa.org/#/easy-escape"/>
        <updated>2021-09-17T12:54:00.000Z</updated>
        <summary type="html"><![CDATA[The easy-escape package has been updated to version 20210917.1254.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[That's So Meta & Next-Generation Operations With ZIO (Tuesday, Oct 5th, 7 PM BST) by Damian Reeves (Capital One) & Adam Fraser (Ziverge)]]></title>
        <id>https://www.reddit.com/r/scala/comments/ppzewb/thats_so_meta_nextgeneration_operations_with_zio/</id>
        <link href="https://www.reddit.com/r/scala/comments/ppzewb/thats_so_meta_nextgeneration_operations_with_zio/"/>
        <updated>2021-09-17T12:41:46.000Z</updated>
        <summary type="html"><![CDATA[submitted by    /u/tornadolobo  
 [link]   [comments]]]></summary>
        <author>
            <name>Scala</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[JDK 17 on GitHub Actions]]></title>
        <id>https://www.reddit.com/r/scala/comments/ppxsag/jdk_17_on_github_actions/</id>
        <link href="https://www.reddit.com/r/scala/comments/ppxsag/jdk_17_on_github_actions/"/>
        <updated>2021-09-17T10:45:47.000Z</updated>
        <summary type="html"><![CDATA[submitted by    /u/eed3si9n  
 [link]   [comments]]]></summary>
        <author>
            <name>Scala</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Is there a way to fontify broken links?]]></title>
        <id>https://www.reddit.com/r/orgmode/comments/ppvvwv/is_there_a_way_to_fontify_broken_links/</id>
        <link href="https://www.reddit.com/r/orgmode/comments/ppvvwv/is_there_a_way_to_fontify_broken_links/"/>
        <updated>2021-09-17T07:57:11.000Z</updated>
        <summary type="html"><![CDATA[I've tried this and, as far as I can tell, it doesn't fontify anything.
 I'm mainly looking to fontify ID links which have IDs that don't exist.
    submitted by    /u/FluentFelicity  
 [link]   [comments]]]></summary>
        <author>
            <name>Org-mode</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[modern-sh (20210917.748) --- Minor mode for editing shell script]]></title>
        <id>https://melpa.org/packages/modern-sh-20210917.748.el</id>
        <link href="https://melpa.org/#/modern-sh"/>
        <updated>2021-09-17T07:48:00.000Z</updated>
        <summary type="html"><![CDATA[The modern-sh package has been updated to version 20210917.748.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[format-all (20210917.651) --- Auto-format C, C++, JS, Python, Ruby and 50 other languages]]></title>
        <id>https://melpa.org/packages/format-all-20210917.651.el</id>
        <link href="https://melpa.org/#/format-all"/>
        <updated>2021-09-17T06:51:00.000Z</updated>
        <summary type="html"><![CDATA[The format-all package has been updated to version 20210917.651.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Metals v0.10.7 is out with indentation fixes for Scala 3 and a built-in TASTy viewer!]]></title>
        <id>https://www.reddit.com/r/scala/comments/pptroj/metals_v0107_is_out_with_indentation_fixes_for/</id>
        <link href="https://www.reddit.com/r/scala/comments/pptroj/metals_v0107_is_out_with_indentation_fixes_for/"/>
        <updated>2021-09-17T05:02:25.000Z</updated>
        <summary type="html"><![CDATA[submitted by    /u/ckipp01  
 [link]   [comments]]]></summary>
        <author>
            <name>Scala</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[consult-dir (20210917.435) --- Consult based directory picker]]></title>
        <id>https://melpa.org/packages/consult-dir-20210917.435.el</id>
        <link href="https://melpa.org/#/consult-dir"/>
        <updated>2021-09-17T04:35:00.000Z</updated>
        <summary type="html"><![CDATA[The consult-dir package has been updated to version 20210917.435.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[popper (20210917.302) --- Summon and dismiss buffers as popups]]></title>
        <id>https://melpa.org/packages/popper-20210917.302.el</id>
        <link href="https://melpa.org/#/popper"/>
        <updated>2021-09-17T03:02:00.000Z</updated>
        <summary type="html"><![CDATA[The popper package has been updated to version 20210917.302.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[company-fuzzy (20210917.248) --- Fuzzy matching for `company-mode']]></title>
        <id>https://melpa.org/packages/company-fuzzy-20210917.248.el</id>
        <link href="https://melpa.org/#/company-fuzzy"/>
        <updated>2021-09-17T02:48:00.000Z</updated>
        <summary type="html"><![CDATA[The company-fuzzy package has been updated to version 20210917.248.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[audacious (20210917.51) --- Emacs interface to control audacious]]></title>
        <id>https://melpa.org/packages/audacious-20210917.51.el</id>
        <link href="https://melpa.org/#/audacious"/>
        <updated>2021-09-17T00:51:00.000Z</updated>
        <summary type="html"><![CDATA[The audacious package has been updated to version 20210917.51.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[streak (20210917.4) --- Track a daily streak in your Mode Line]]></title>
        <id>https://melpa.org/packages/streak-20210917.4.el</id>
        <link href="https://melpa.org/#/streak"/>
        <updated>2021-09-17T00:04:00.000Z</updated>
        <summary type="html"><![CDATA[The streak package has been updated to version 20210917.4.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[convert space indentation to org]]></title>
        <id>https://www.reddit.com/r/orgmode/comments/ppnfo8/convert_space_indentation_to_org/</id>
        <link href="https://www.reddit.com/r/orgmode/comments/ppnfo8/convert_space_indentation_to_org/"/>
        <updated>2021-09-16T22:16:19.000Z</updated>
        <summary type="html"><![CDATA[HI can i convert in org a long list of text where spaces number/blank spaces determine the nested structure?
 For instance for (space) i mean a bar space pressed/tab/ etc in a text file
 Fruit
 (space)apple
 (space)pears
 (space)(space)The pear has been discovered on mars and was green
 (space)(space)There are some pears that are of different colors on the moon
 (space)(space)(space)yellow
 (space)(space)(space)orange
 https://preview.redd.it/88r5o9sfo4o71.png?width=360&format=png&auto=webp&s=0ae7190f37d15dd14d41806e0852f30862e3fcd2
 ​
    submitted by    /u/Professional-Sea-677  
 [link]   [comments]]]></summary>
        <author>
            <name>Org-mode</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[doom-themes (20210916.2120) --- an opinionated pack of modern color-themes]]></title>
        <id>https://melpa.org/packages/doom-themes-20210916.2120.tar</id>
        <link href="https://melpa.org/#/doom-themes"/>
        <updated>2021-09-16T21:20:00.000Z</updated>
        <summary type="html"><![CDATA[The doom-themes package has been updated to version 20210916.2120.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[vc-fossil (20210916.1953) --- VC backend for the fossil sofware configuraiton management system]]></title>
        <id>https://melpa.org/packages/vc-fossil-20210916.1953.el</id>
        <link href="https://melpa.org/#/vc-fossil"/>
        <updated>2021-09-16T19:53:00.000Z</updated>
        <summary type="html"><![CDATA[The vc-fossil package has been updated to version 20210916.1953.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[org-capture from terminal]]></title>
        <id>https://www.reddit.com/r/orgmode/comments/ppjbc1/orgcapture_from_terminal/</id>
        <link href="https://www.reddit.com/r/orgmode/comments/ppjbc1/orgcapture_from_terminal/"/>
        <updated>2021-09-16T18:42:39.000Z</updated>
        <summary type="html"><![CDATA[If there is a way to easily send the current selection to org-capture from the Linux terminal? I am using gnome-terminal, but can switch to some other if they offer this feature.
    submitted by    /u/vzaliva  
 [link]   [comments]]]></summary>
        <author>
            <name>Org-mode</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[racket-mode (20210916.1812) --- Racket editing, REPL, and more]]></title>
        <id>https://melpa.org/packages/racket-mode-20210916.1812.tar</id>
        <link href="https://melpa.org/#/racket-mode"/>
        <updated>2021-09-16T18:12:00.000Z</updated>
        <summary type="html"><![CDATA[The racket-mode package has been updated to version 20210916.1812.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[ox-hugo (20210916.1332) --- Hugo Markdown Back-End for Org Export Engine]]></title>
        <id>https://melpa.org/packages/ox-hugo-20210916.1332.tar</id>
        <link href="https://melpa.org/#/ox-hugo"/>
        <updated>2021-09-16T13:32:00.000Z</updated>
        <summary type="html"><![CDATA[The ox-hugo package has been updated to version 20210916.1332.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[compiler-explorer (20210916.1316) --- Compiler explorer client (godbolt.org)]]></title>
        <id>https://melpa.org/packages/compiler-explorer-20210916.1316.el</id>
        <link href="https://melpa.org/#/compiler-explorer"/>
        <updated>2021-09-16T13:16:00.000Z</updated>
        <summary type="html"><![CDATA[The compiler-explorer package has been updated to version 20210916.1316.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Where the ZIO Roadmap is Headed Next? Guest appearance at Capital One blog by John A. De Goes]]></title>
        <id>https://www.reddit.com/r/scala/comments/ppbzlt/where_the_zio_roadmap_is_headed_next_guest/</id>
        <link href="https://www.reddit.com/r/scala/comments/ppbzlt/where_the_zio_roadmap_is_headed_next_guest/"/>
        <updated>2021-09-16T12:04:24.000Z</updated>
        <summary type="html"><![CDATA[submitted by    /u/tornadolobo  
 [link]   [comments]]]></summary>
        <author>
            <name>Scala</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Issue 281]]></title>
        <id>https://haskellweekly.news/issue/281.html</id>
        <link href="https://haskellweekly.news/issue/281.html"/>
        <updated>2021-09-16T12:00:00.000Z</updated>
        <summary type="html"><![CDATA[Welcome to another issue of Haskell Weekly!
Haskell is a safe, purely functional programming language with a fast, concurrent runtime.
This is a weekly summary of what’s going on in its community.
Featured
Announcing Evoke, a GHC plugin for deriving type class instances quickly by Taylor Fausak
I’m excited to announce Evoke, a GHC plugin that automatically derives type class instances without using generics or Template Haskell.
Deferred Derivation by Matt Parsons
Freeing a module from Template Haskell speeds up our build tremendously - not because Template Haskell is slow (it’s very fast) but because compiling at all is slow. The best way to speed something up is to spend 0 time doing it — don’t do it at all!
GHC rewrite rules by Jonathan Dowland
The Glasgow Haskell Compiler (GHC) has supp…]]></summary>
        <author>
            <name>Haskell Weekly</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[alan-mode (20210916.1135) --- Major mode for editing Alan files]]></title>
        <id>https://melpa.org/packages/alan-mode-20210916.1135.el</id>
        <link href="https://melpa.org/#/alan-mode"/>
        <updated>2021-09-16T11:35:00.000Z</updated>
        <summary type="html"><![CDATA[The alan-mode package has been updated to version 20210916.1135.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[org-msg (20210916.1114) --- Org mode to send and reply to email in HTML.]]></title>
        <id>https://melpa.org/packages/org-msg-20210916.1114.el</id>
        <link href="https://melpa.org/#/org-msg"/>
        <updated>2021-09-16T11:14:00.000Z</updated>
        <summary type="html"><![CDATA[The org-msg package has been updated to version 20210916.1114.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Org-mode is amazing - consider donating to support it's development.]]></title>
        <id>https://www.reddit.com/r/orgmode/comments/ppay7m/orgmode_is_amazing_consider_donating_to_support/</id>
        <link href="https://www.reddit.com/r/orgmode/comments/ppay7m/orgmode_is_amazing_consider_donating_to_support/"/>
        <updated>2021-09-16T10:51:20.000Z</updated>
        <summary type="html"><![CDATA[How many times a day or even hour do you use and rely upon Org Mode? How much easier does it make your life? What would you do if it was no longer actively developed or supported?
 Think about this, and then reflect that this is completely free to use, the product of countless hours of labour. 
 If you are in a position to do so, consider making an ongoing donation to support its development and longevity. 
 Support via these means:
  
https://liberapay.com/bzg
 https://github.com/sponsors/bzg
 https://www.paypal.com/paypalme/bzg/10
  
   submitted by    /u/patchikin  
 [link]   [comments]]]></summary>
        <author>
            <name>Org-mode</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[language-id (20210916.831) --- Library to work with programming language identifiers]]></title>
        <id>https://melpa.org/packages/language-id-20210916.831.el</id>
        <link href="https://melpa.org/#/language-id"/>
        <updated>2021-09-16T08:31:00.000Z</updated>
        <summary type="html"><![CDATA[The language-id package has been updated to version 20210916.831.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[elpa-clone (20210916.655) --- Clone ELPA archive]]></title>
        <id>https://melpa.org/packages/elpa-clone-20210916.655.el</id>
        <link href="https://melpa.org/#/elpa-clone"/>
        <updated>2021-09-16T06:55:00.000Z</updated>
        <summary type="html"><![CDATA[The elpa-clone package has been updated to version 20210916.655.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[inkpot-theme (20210916.454) --- port of vim's inkpot theme]]></title>
        <id>https://melpa.org/packages/inkpot-theme-20210916.454.el</id>
        <link href="https://melpa.org/#/inkpot-theme"/>
        <updated>2021-09-16T04:54:00.000Z</updated>
        <summary type="html"><![CDATA[The inkpot-theme package has been updated to version 20210916.454.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[elfeed-score (20210916.137) --- Gnus-style scoring for Elfeed]]></title>
        <id>https://melpa.org/packages/elfeed-score-20210916.137.tar</id>
        <link href="https://melpa.org/#/elfeed-score"/>
        <updated>2021-09-16T01:37:00.000Z</updated>
        <summary type="html"><![CDATA[The elfeed-score package has been updated to version 20210916.137.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[eshell-prompt-extras (20210916.123) --- Display extra information for your eshell prompt.]]></title>
        <id>https://melpa.org/packages/eshell-prompt-extras-20210916.123.el</id>
        <link href="https://melpa.org/#/eshell-prompt-extras"/>
        <updated>2021-09-16T01:23:00.000Z</updated>
        <summary type="html"><![CDATA[The eshell-prompt-extras package has been updated to version 20210916.123.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Exposing the zettelkasten to the quantitative eye]]></title>
        <id>1964@/discussions</id>
        <link href="https://forum.zettelkasten.de/discussion/1964/exposing-the-zettelkasten-to-the-quantitative-eye"/>
        <updated>2021-09-16T00:13:26.000Z</updated>
        <summary type="html"><![CDATA[As an interesting and fun learning project, I've written my first python script. And I love to share it with you. I've exposed The Archive to explorations of the quantitative eye. You can look into mine and look into your own archive.
If you are a coder, I know you have many other things on your busy schedules, but I'm asking if you'd take a couple of minutes to look at my coding attempt and offer whatever help you want. Even just pointing me where or what to look for would be a great help.
Dependencies
python 3
pip3 install pandas
pip3 install ploty
The phyton script calls a shell script. I want to combine the shell script into the python script but learning about converting actions is slow. Install these together in a test directory and set the "user variables" in both scripts to what is…]]></summary>
        <author>
            <name>Will</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Where do you put to-do thoughts?]]></title>
        <id>1963@/discussions</id>
        <link href="https://forum.zettelkasten.de/discussion/1963/where-do-you-put-to-do-thoughts"/>
        <updated>2021-09-15T22:09:15.000Z</updated>
        <summary type="html"><![CDATA[So quite often i get distracted by thoughts of things to do for later today, tomorrow or next week.
I want to ask should i also put these into zettels? Where should I arrange them so that i have time to think about other ideas?]]></summary>
        <author>
            <name>tree_t</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Blockquote Citation Convention]]></title>
        <id>1962@/discussions</id>
        <link href="https://forum.zettelkasten.de/discussion/1962/blockquote-citation-convention"/>
        <updated>2021-09-15T21:27:33.000Z</updated>
        <summary type="html"><![CDATA[It appears that the parser sees em-dashes and double-hyphens immediately following a block quote as part of the quote, while single-hyphens are considered a separate line.
Will that be a lasting convention? I can't seem to find any documentation on this, but would like to take advantage of the convention if so.]]></summary>
        <author>
            <name>micahredding</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[org-superstar (20210915.1934) --- Prettify headings and plain lists in Org mode]]></title>
        <id>https://melpa.org/packages/org-superstar-20210915.1934.el</id>
        <link href="https://melpa.org/#/org-superstar"/>
        <updated>2021-09-15T19:34:00.000Z</updated>
        <summary type="html"><![CDATA[The org-superstar package has been updated to version 20210915.1934.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[symex (20210915.1931) --- An evil way to edit Lisp symbolic expressions as trees]]></title>
        <id>https://melpa.org/packages/symex-20210915.1931.tar</id>
        <link href="https://melpa.org/#/symex"/>
        <updated>2021-09-15T19:31:00.000Z</updated>
        <summary type="html"><![CDATA[The symex package has been updated to version 20210915.1931.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[forge (20210915.1654) --- Access Git forges from Magit.]]></title>
        <id>https://melpa.org/packages/forge-20210915.1654.tar</id>
        <link href="https://melpa.org/#/forge"/>
        <updated>2021-09-15T16:54:00.000Z</updated>
        <summary type="html"><![CDATA[The forge package has been updated to version 20210915.1654.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Displaying org-agenda from Emacs onto iPad/tablet/other display?]]></title>
        <id>https://www.reddit.com/r/orgmode/comments/pospws/displaying_orgagenda_from_emacs_onto/</id>
        <link href="https://www.reddit.com/r/orgmode/comments/pospws/displaying_orgagenda_from_emacs_onto/"/>
        <updated>2021-09-15T15:46:47.000Z</updated>
        <summary type="html"><![CDATA[Hi,
 Has anyone had experience in using a dedicated display (an iPad, a tablet, or a small standalone monitor) to always display the org-agenda view? I would like to constantly have it in view, but I'm not sure where to start with setting this up. I have a macbook pro and an iPad, but I would prefer not to use a separate app like BeOrg, since I'm very used to looking at the agenda as I've configured it.
 Thanks.
    submitted by    /u/gollyned  
 [link]   [comments]]]></summary>
        <author>
            <name>Org-mode</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[org-chef (20210915.1435) --- Cookbook and recipe management with org-mode.]]></title>
        <id>https://melpa.org/packages/org-chef-20210915.1435.tar</id>
        <link href="https://melpa.org/#/org-chef"/>
        <updated>2021-09-15T14:35:00.000Z</updated>
        <summary type="html"><![CDATA[The org-chef package has been updated to version 20210915.1435.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[oer-reveal (20210915.1404) --- OER with reveal.js, plugins, and org-re-reveal]]></title>
        <id>https://melpa.org/packages/oer-reveal-20210915.1404.tar</id>
        <link href="https://melpa.org/#/oer-reveal"/>
        <updated>2021-09-15T14:04:00.000Z</updated>
        <summary type="html"><![CDATA[The oer-reveal package has been updated to version 20210915.1404.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[org-roam-bibtex (20210915.1310) --- Org Roam meets BibTeX]]></title>
        <id>https://melpa.org/packages/org-roam-bibtex-20210915.1310.tar</id>
        <link href="https://melpa.org/#/org-roam-bibtex"/>
        <updated>2021-09-15T13:10:00.000Z</updated>
        <summary type="html"><![CDATA[The org-roam-bibtex package has been updated to version 20210915.1310.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[wucuo (20210915.1113) --- Fastest solution to spell check camel case code or plain text]]></title>
        <id>https://melpa.org/packages/wucuo-20210915.1113.tar</id>
        <link href="https://melpa.org/#/wucuo"/>
        <updated>2021-09-15T11:13:00.000Z</updated>
        <summary type="html"><![CDATA[The wucuo package has been updated to version 20210915.1113.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[org-tree-slide (20210915.335) --- A presentation tool for org-mode]]></title>
        <id>https://melpa.org/packages/org-tree-slide-20210915.335.el</id>
        <link href="https://melpa.org/#/org-tree-slide"/>
        <updated>2021-09-15T03:35:00.000Z</updated>
        <summary type="html"><![CDATA[The org-tree-slide package has been updated to version 20210915.335.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Zetteldeft: How to delete a Zettel]]></title>
        <id>1961@/discussions</id>
        <link href="https://forum.zettelkasten.de/discussion/1961/zetteldeft-how-to-delete-a-zettel"/>
        <updated>2021-09-14T21:18:15.000Z</updated>
        <summary type="html"><![CDATA[Sounds like a dump question for me. But I do not get it.
https://www.eliasstorms.net/zetteldeft]]></summary>
        <author>
            <name>buhtz</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Writing prose ("a book") in org-mode; one file per chapter?]]></title>
        <id>https://www.reddit.com/r/orgmode/comments/po91dx/writing_prose_a_book_in_orgmode_one_file_per/</id>
        <link href="https://www.reddit.com/r/orgmode/comments/po91dx/writing_prose_a_book_in_orgmode_one_file_per/"/>
        <updated>2021-09-14T18:53:22.000Z</updated>
        <summary type="html"><![CDATA[I'm doing some recreational writing using org-mod. I like it so far. Great. I think I've gotten best results using pandoc to create a PDF, but the results are beautiful. I could do the same from within emacs I'm sure.
 I have one file per chapter, which is natural and works for me. I can maybe be dissuaded. I think every file wants a `#+TITLE:`, at least because pandoc requires it or complains. If I output "one chapter" (file), everything looks great. The (chapter) title looks just the way I like it.
 If I do the following with pandoc:
 pandoc -s *.org -o my_book.pdf 
 The problem is that the titles of the chapters end up all mashed together at the top of the document. Everything is more or less perfect.
 Should I maybe just not do this and manage this as one big doc, using hideability to deal with the unwieldiness? I could be convinced.
    submitted by    /u/captainmidday  
 [link]   [comments]]]></summary>
        <author>
            <name>Org-mode</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[lsp-metals (20210914.1821) --- Scala Client settings]]></title>
        <id>https://melpa.org/packages/lsp-metals-20210914.1821.tar</id>
        <link href="https://melpa.org/#/lsp-metals"/>
        <updated>2021-09-14T18:21:00.000Z</updated>
        <summary type="html"><![CDATA[The lsp-metals package has been updated to version 20210914.1821.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Help overriding keybinding]]></title>
        <id>https://www.reddit.com/r/orgmode/comments/po7sgh/help_overriding_keybinding/</id>
        <link href="https://www.reddit.com/r/orgmode/comments/po7sgh/help_overriding_keybinding/"/>
        <updated>2021-09-14T17:48:40.000Z</updated>
        <summary type="html"><![CDATA[I use windmove to move windows. I have the following setup: 
  (use-package windmove :bind (("C-S-j" . windmove-left) ("C-S-l" . windmove-right) ("C-S-i" . windmove-up) ("C-S-k" . windmove-down))) 
 However, in org buffers, the C-S-i binding gets overwritten. I can not figure out how it is being overwritten. It seems like it is doing org-cycle global as it will cycle all headers in the file. When I do C-h k I get this: 
 ``` S-TAB runs the command org-shifttab (found in org-mode-map), which is an interactive compiled Lisp function in ‘org.el’.
 It is bound to <backtab>, S-TAB, <S-tab>, <S-iso-leftab>, <menu-bar> <Tbl> <Previous Field>, <menu-bar> <Org> <Show/Hide> <Cycle Global Visibility>. ``` The binding C-S-i doesn't show up in C-h m or C-h b either. The other windmove bindings do show up in C-h b though. When I'm in another buffer with a different mode all of my windmove bindings work fine. It seems to just happen with org buffers.
 I'm really scratching my head as I can't find any smoking gun to what's actually being called or how it is bound.
    submitted by    /u/jesse_ee  
 [link]   [comments]]]></summary>
        <author>
            <name>Org-mode</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[docker (20210914.1348) --- Emacs interface to Docker]]></title>
        <id>https://melpa.org/packages/docker-20210914.1348.tar</id>
        <link href="https://melpa.org/#/docker"/>
        <updated>2021-09-14T13:48:00.000Z</updated>
        <summary type="html"><![CDATA[The docker package has been updated to version 20210914.1348.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[gkroam (20210914.1311) --- A lightweight org-mode Roam Research replica]]></title>
        <id>https://melpa.org/packages/gkroam-20210914.1311.el</id>
        <link href="https://melpa.org/#/gkroam"/>
        <updated>2021-09-14T13:11:00.000Z</updated>
        <summary type="html"><![CDATA[The gkroam package has been updated to version 20210914.1311.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[flex-compile (20210914.1255) --- Run, evaluate and compile across many languages]]></title>
        <id>https://melpa.org/packages/flex-compile-20210914.1255.tar</id>
        <link href="https://melpa.org/#/flex-compile"/>
        <updated>2021-09-14T12:55:00.000Z</updated>
        <summary type="html"><![CDATA[The flex-compile package has been updated to version 20210914.1255.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[buffer-manage (20210914.1251) --- Manage buffers]]></title>
        <id>https://melpa.org/packages/buffer-manage-20210914.1251.tar</id>
        <link href="https://melpa.org/#/buffer-manage"/>
        <updated>2021-09-14T12:51:00.000Z</updated>
        <summary type="html"><![CDATA[The buffer-manage package has been updated to version 20210914.1251.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[exec-path-from-shell (20210914.1247) --- Get environment variables such as $PATH from the shell]]></title>
        <id>https://melpa.org/packages/exec-path-from-shell-20210914.1247.el</id>
        <link href="https://melpa.org/#/exec-path-from-shell"/>
        <updated>2021-09-14T12:47:00.000Z</updated>
        <summary type="html"><![CDATA[The exec-path-from-shell package has been updated to version 20210914.1247.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[lispy (20210914.1209) --- vi-like Paredit]]></title>
        <id>https://melpa.org/packages/lispy-20210914.1209.tar</id>
        <link href="https://melpa.org/#/lispy"/>
        <updated>2021-09-14T12:09:00.000Z</updated>
        <summary type="html"><![CDATA[The lispy package has been updated to version 20210914.1209.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[how to setup a "kanban" system in orgmode?]]></title>
        <id>https://www.reddit.com/r/orgmode/comments/po1bxm/how_to_setup_a_kanban_system_in_orgmode/</id>
        <link href="https://www.reddit.com/r/orgmode/comments/po1bxm/how_to_setup_a_kanban_system_in_orgmode/"/>
        <updated>2021-09-14T11:59:14.000Z</updated>
        <summary type="html"><![CDATA[i am very new to emacs, and i saw all the great things a person can do with it.
 all i want to do is this
 setup three "lists" (sorry i don't know what to call them but these are like (backlog-doing-done)
 so basically the item starts in BACKLOG and then it moves to DOING when checked and then it moves to DONE when checked.
 I saw a talk about refile but i didn't know how to use it.
 you can just direct me to another thred or article if you think it's simple to not be ELI5.
 thanks!
 edit: wow thank you guys, i didn't think i would get so many answers. i guess after i would go with org-kanban i know that kanban is intended to use within teams; but i lime the concept of having a backlog that is "messy" and than pulling just one or two feautures to focus on building!
    submitted by    /u/Magazine_Ill  
 [link]   [comments]]]></summary>
        <author>
            <name>Org-mode</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[kubernetes (20210914.1158) --- Magit-like porcelain for Kubernetes.]]></title>
        <id>https://melpa.org/packages/kubernetes-20210914.1158.tar</id>
        <link href="https://melpa.org/#/kubernetes"/>
        <updated>2021-09-14T11:58:00.000Z</updated>
        <summary type="html"><![CDATA[The kubernetes package has been updated to version 20210914.1158.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[helm-core (20210914.749) --- Development files for Helm]]></title>
        <id>https://melpa.org/packages/helm-core-20210914.749.tar</id>
        <link href="https://melpa.org/#/helm-core"/>
        <updated>2021-09-14T07:49:00.000Z</updated>
        <summary type="html"><![CDATA[The helm-core package has been updated to version 20210914.749.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[yapfify (20210914.634) --- (automatically) format python buffers using YAPF.]]></title>
        <id>https://melpa.org/packages/yapfify-20210914.634.el</id>
        <link href="https://melpa.org/#/yapfify"/>
        <updated>2021-09-14T06:34:00.000Z</updated>
        <summary type="html"><![CDATA[The yapfify package has been updated to version 20210914.634.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[lsp-tailwindcss (20210914.605) --- A lsp-mode client for tailwindcss]]></title>
        <id>https://melpa.org/packages/lsp-tailwindcss-20210914.605.el</id>
        <link href="https://melpa.org/#/lsp-tailwindcss"/>
        <updated>2021-09-14T06:05:00.000Z</updated>
        <summary type="html"><![CDATA[The lsp-tailwindcss package has been updated to version 20210914.605.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[flutter (20210914.17) --- Tools for working with Flutter SDK]]></title>
        <id>https://melpa.org/packages/flutter-20210914.17.tar</id>
        <link href="https://melpa.org/#/flutter"/>
        <updated>2021-09-14T00:17:00.000Z</updated>
        <summary type="html"><![CDATA[The flutter package has been updated to version 20210914.17.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Lorentz: Type-Safe Storage Migrations]]></title>
        <id>https://serokell.io/blog/lorentz-type-safe-storage-migrations</id>
        <link href="https://serokell.io/blog/lorentz-type-safe-storage-migrations"/>
        <updated>2021-09-14T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[In this article, we'll look at how you can make storage migratable in Lorentz, our Haskell eDSL for the Michelson smart contract language.]]></summary>
        <author>
            <name>hi+kostyaivanov@serokell.io (Kostya Ivanov)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[hass (20210913.2051) --- Interact with Home Assistant]]></title>
        <id>https://melpa.org/packages/hass-20210913.2051.el</id>
        <link href="https://melpa.org/#/hass"/>
        <updated>2021-09-13T20:51:00.000Z</updated>
        <summary type="html"><![CDATA[The hass package has been updated to version 20210913.2051.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[projectile (20210913.1840) --- Manage and navigate projects in Emacs easily]]></title>
        <id>https://melpa.org/packages/projectile-20210913.1840.el</id>
        <link href="https://melpa.org/#/projectile"/>
        <updated>2021-09-13T18:40:00.000Z</updated>
        <summary type="html"><![CDATA[The projectile package has been updated to version 20210913.1840.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Is it possible to pass variables to CSS or Conf org babel blocks ?]]></title>
        <id>https://www.reddit.com/r/orgmode/comments/pnih0c/is_it_possible_to_pass_variables_to_css_or_conf/</id>
        <link href="https://www.reddit.com/r/orgmode/comments/pnih0c/is_it_possible_to_pass_variables_to_css_or_conf/"/>
        <updated>2021-09-13T16:05:50.000Z</updated>
        <summary type="html"><![CDATA[I am trying to have a consistent theme across some apps and I'm looking for a way to tangle my conf/css files using color variables but can't figure out how to do it.
 The documentation says CSS doesn't support header arguments, and for conf-mode it's just not mentioned in the list of languages.
 If you have an alternative to achieve this I would appreciate the suggestions.
    submitted by    /u/HeiWiper  
 [link]   [comments]]]></summary>
        <author>
            <name>Org-mode</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[org-ref (20210913.1445) --- citations, cross-references and bibliographies in org-mode]]></title>
        <id>https://melpa.org/packages/org-ref-20210913.1445.tar</id>
        <link href="https://melpa.org/#/org-ref"/>
        <updated>2021-09-13T14:45:00.000Z</updated>
        <summary type="html"><![CDATA[The org-ref package has been updated to version 20210913.1445.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[flymake-grammarly (20210913.1416) --- Flymake support for Grammarly]]></title>
        <id>https://melpa.org/packages/flymake-grammarly-20210913.1416.el</id>
        <link href="https://melpa.org/#/flymake-grammarly"/>
        <updated>2021-09-13T14:16:00.000Z</updated>
        <summary type="html"><![CDATA[The flymake-grammarly package has been updated to version 20210913.1416.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[dogears (20210913.1259) --- Never lose your place again]]></title>
        <id>https://melpa.org/packages/dogears-20210913.1259.el</id>
        <link href="https://melpa.org/#/dogears"/>
        <updated>2021-09-13T12:59:00.000Z</updated>
        <summary type="html"><![CDATA[The dogears package has been updated to version 20210913.1259.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[julia-repl (20210913.1256) --- A minor mode for a Julia REPL]]></title>
        <id>https://melpa.org/packages/julia-repl-20210913.1256.el</id>
        <link href="https://melpa.org/#/julia-repl"/>
        <updated>2021-09-13T12:56:00.000Z</updated>
        <summary type="html"><![CDATA[The julia-repl package has been updated to version 20210913.1256.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Graphical Drawing Package]]></title>
        <id>https://www.reddit.com/r/purescript/comments/pndnyq/graphical_drawing_package/</id>
        <link href="https://www.reddit.com/r/purescript/comments/pndnyq/graphical_drawing_package/"/>
        <updated>2021-09-13T11:39:46.000Z</updated>
        <summary type="html"><![CDATA[I am interested in developing an application with pursecript that would work with diagrams drawn by the user. I'm looking for a library/package that would provide the drawing functionality for me to minimise development time. I'm thinking of functionality somewhat like Microsoft Visio (e.g. place shapes, connect shapes, move shapes, autorouting of connectors etc.). 
 Are there any libraries/packages either natively or wrapped in purescript? Failing that, are there any suitable javascript libraries I could use through FFI?
 Everything I've found myself is either a dead project, intended for data display (i.e. graphs), static (i.e. closer to MS Paint than Visio) or contains too much functionality (e.g. more general rendering libraries for games or multimedia). I'd rather not roll my own if I can help it :)
 Any help or advice you could provide would be appreciated.
    submitted by    /u/RisingMaverick  
 [link]   [comments]]]></summary>
        <author>
            <name>PureScript</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[org-link-beautify (20210913.1134) --- Beautify Org Links]]></title>
        <id>https://melpa.org/packages/org-link-beautify-20210913.1134.el</id>
        <link href="https://melpa.org/#/org-link-beautify"/>
        <updated>2021-09-13T11:34:00.000Z</updated>
        <summary type="html"><![CDATA[The org-link-beautify package has been updated to version 20210913.1134.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[worf (20210913.1123) --- A warrior does not press so many keys! (in org-mode)]]></title>
        <id>https://melpa.org/packages/worf-20210913.1123.tar</id>
        <link href="https://melpa.org/#/worf"/>
        <updated>2021-09-13T11:23:00.000Z</updated>
        <summary type="html"><![CDATA[The worf package has been updated to version 20210913.1123.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[zoutline (20210913.1117) --- Simple outline library.]]></title>
        <id>https://melpa.org/packages/zoutline-20210913.1117.el</id>
        <link href="https://melpa.org/#/zoutline"/>
        <updated>2021-09-13T11:17:00.000Z</updated>
        <summary type="html"><![CDATA[The zoutline package has been updated to version 20210913.1117.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[tuareg (20210913.1031) --- OCaml mode]]></title>
        <id>https://melpa.org/packages/tuareg-20210913.1031.tar</id>
        <link href="https://melpa.org/#/tuareg"/>
        <updated>2021-09-13T10:31:00.000Z</updated>
        <summary type="html"><![CDATA[The tuareg package has been updated to version 20210913.1031.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[newspeak-mode (20210913.1029) --- Major mode for the Newspeak programming language]]></title>
        <id>https://melpa.org/packages/newspeak-mode-20210913.1029.el</id>
        <link href="https://melpa.org/#/newspeak-mode"/>
        <updated>2021-09-13T10:29:00.000Z</updated>
        <summary type="html"><![CDATA[The newspeak-mode package has been updated to version 20210913.1029.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[raku-mode (20210913.1000) --- Major mode for editing Raku code]]></title>
        <id>https://melpa.org/packages/raku-mode-20210913.1000.tar</id>
        <link href="https://melpa.org/#/raku-mode"/>
        <updated>2021-09-13T10:00:00.000Z</updated>
        <summary type="html"><![CDATA[The raku-mode package has been updated to version 20210913.1000.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[solo-jazz-theme (20210913.148) --- The Solo-Jazz color theme]]></title>
        <id>https://melpa.org/packages/solo-jazz-theme-20210913.148.el</id>
        <link href="https://melpa.org/#/solo-jazz-theme"/>
        <updated>2021-09-13T01:48:00.000Z</updated>
        <summary type="html"><![CDATA[The solo-jazz-theme package has been updated to version 20210913.148.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[equake (20210913.145) --- Drop-down console for (e)shell & terminal emulation]]></title>
        <id>https://melpa.org/packages/equake-20210913.145.el</id>
        <link href="https://melpa.org/#/equake"/>
        <updated>2021-09-13T01:45:00.000Z</updated>
        <summary type="html"><![CDATA[The equake package has been updated to version 20210913.145.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[purp-theme (20210912.1940) --- A dark color theme with few colors]]></title>
        <id>https://melpa.org/packages/purp-theme-20210912.1940.tar</id>
        <link href="https://melpa.org/#/purp-theme"/>
        <updated>2021-09-12T19:40:00.000Z</updated>
        <summary type="html"><![CDATA[The purp-theme package has been updated to version 20210912.1940.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[orderless (20210912.1932) --- Completion style for matching regexps in any order]]></title>
        <id>https://melpa.org/packages/orderless-20210912.1932.tar</id>
        <link href="https://melpa.org/#/orderless"/>
        <updated>2021-09-12T19:32:00.000Z</updated>
        <summary type="html"><![CDATA[The orderless package has been updated to version 20210912.1932.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[ctrlf (20210912.1913) --- Emacs finally learns how to ctrl+F]]></title>
        <id>https://melpa.org/packages/ctrlf-20210912.1913.el</id>
        <link href="https://melpa.org/#/ctrlf"/>
        <updated>2021-09-12T19:13:00.000Z</updated>
        <summary type="html"><![CDATA[The ctrlf package has been updated to version 20210912.1913.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[graphql-mode (20210912.1544) --- Major mode for editing GraphQL schemas]]></title>
        <id>https://melpa.org/packages/graphql-mode-20210912.1544.el</id>
        <link href="https://melpa.org/#/graphql-mode"/>
        <updated>2021-09-12T15:44:00.000Z</updated>
        <summary type="html"><![CDATA[The graphql-mode package has been updated to version 20210912.1544.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[germanium (20210912.1407) --- Generate image from source code using germanium]]></title>
        <id>https://melpa.org/packages/germanium-20210912.1407.el</id>
        <link href="https://melpa.org/#/germanium"/>
        <updated>2021-09-12T14:07:00.000Z</updated>
        <summary type="html"><![CDATA[The germanium package has been updated to version 20210912.1407.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[org-sidebar (20210912.1321) --- Helpful sidebar for Org buffers]]></title>
        <id>https://melpa.org/packages/org-sidebar-20210912.1321.el</id>
        <link href="https://melpa.org/#/org-sidebar"/>
        <updated>2021-09-12T13:21:00.000Z</updated>
        <summary type="html"><![CDATA[The org-sidebar package has been updated to version 20210912.1321.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[rg (20210912.1227) --- A search tool based on ripgrep]]></title>
        <id>https://melpa.org/packages/rg-20210912.1227.tar</id>
        <link href="https://melpa.org/#/rg"/>
        <updated>2021-09-12T12:27:00.000Z</updated>
        <summary type="html"><![CDATA[The rg package has been updated to version 20210912.1227.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[tsc (20210912.1211) --- Core Tree-sitter APIs]]></title>
        <id>https://melpa.org/packages/tsc-20210912.1211.tar</id>
        <link href="https://melpa.org/#/tsc"/>
        <updated>2021-09-12T12:11:00.000Z</updated>
        <summary type="html"><![CDATA[The tsc package has been updated to version 20210912.1211.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[tree-sitter (20210912.1211) --- Incremental parsing system]]></title>
        <id>https://melpa.org/packages/tree-sitter-20210912.1211.tar</id>
        <link href="https://melpa.org/#/tree-sitter"/>
        <updated>2021-09-12T12:11:00.000Z</updated>
        <summary type="html"><![CDATA[The tree-sitter package has been updated to version 20210912.1211.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[textile-mode (20210912.906) --- Textile markup editing major mode]]></title>
        <id>https://melpa.org/packages/textile-mode-20210912.906.el</id>
        <link href="https://melpa.org/#/textile-mode"/>
        <updated>2021-09-12T09:06:00.000Z</updated>
        <summary type="html"><![CDATA[The textile-mode package has been updated to version 20210912.906.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[nnreddit (20210912.236) --- Gnus Backend For Reddit]]></title>
        <id>https://melpa.org/packages/nnreddit-20210912.236.tar</id>
        <link href="https://melpa.org/#/nnreddit"/>
        <updated>2021-09-12T02:36:00.000Z</updated>
        <summary type="html"><![CDATA[The nnreddit package has been updated to version 20210912.236.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[org-ml (20210911.2131) --- Functional Org Mode API]]></title>
        <id>https://melpa.org/packages/org-ml-20210911.2131.tar</id>
        <link href="https://melpa.org/#/org-ml"/>
        <updated>2021-09-11T21:31:00.000Z</updated>
        <summary type="html"><![CDATA[The org-ml package has been updated to version 20210911.2131.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[elpher (20210911.2038) --- A friendly gopher and gemini client]]></title>
        <id>https://melpa.org/packages/elpher-20210911.2038.tar</id>
        <link href="https://melpa.org/#/elpher"/>
        <updated>2021-09-11T20:38:00.000Z</updated>
        <summary type="html"><![CDATA[The elpher package has been updated to version 20210911.2038.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[emms (20210911.2031) --- The Emacs Multimedia System]]></title>
        <id>https://melpa.org/packages/emms-20210911.2031.tar</id>
        <link href="https://melpa.org/#/emms"/>
        <updated>2021-09-11T20:31:00.000Z</updated>
        <summary type="html"><![CDATA[The emms package has been updated to version 20210911.2031.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[cask (20210911.1856) --- Cask: Project management for package development]]></title>
        <id>https://melpa.org/packages/cask-20210911.1856.tar</id>
        <link href="https://melpa.org/#/cask"/>
        <updated>2021-09-11T18:56:00.000Z</updated>
        <summary type="html"><![CDATA[The cask package has been updated to version 20210911.1856.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[nntwitter (20210911.1751) --- Gnus Backend For Twitter]]></title>
        <id>https://melpa.org/packages/nntwitter-20210911.1751.tar</id>
        <link href="https://melpa.org/#/nntwitter"/>
        <updated>2021-09-11T17:51:00.000Z</updated>
        <summary type="html"><![CDATA[The nntwitter package has been updated to version 20210911.1751.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[org-preview-html (20210911.1528) --- Automatically preview org-exported HTML files within Emacs]]></title>
        <id>https://melpa.org/packages/org-preview-html-20210911.1528.el</id>
        <link href="https://melpa.org/#/org-preview-html"/>
        <updated>2021-09-11T15:28:00.000Z</updated>
        <summary type="html"><![CDATA[The org-preview-html package has been updated to version 20210911.1528.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[xah-css-mode (20210911.1321) --- Major mode for editing CSS code.]]></title>
        <id>https://melpa.org/packages/xah-css-mode-20210911.1321.el</id>
        <link href="https://melpa.org/#/xah-css-mode"/>
        <updated>2021-09-11T13:21:00.000Z</updated>
        <summary type="html"><![CDATA[The xah-css-mode package has been updated to version 20210911.1321.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[geiser-gauche (20210911.1041) --- Gauche scheme support for Geiser]]></title>
        <id>https://melpa.org/packages/geiser-gauche-20210911.1041.tar</id>
        <link href="https://melpa.org/#/geiser-gauche"/>
        <updated>2021-09-11T10:41:00.000Z</updated>
        <summary type="html"><![CDATA[The geiser-gauche package has been updated to version 20210911.1041.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[flycheck-objc-clang (20210911.1023) --- Flycheck: Objective-C support using Clang]]></title>
        <id>https://melpa.org/packages/flycheck-objc-clang-20210911.1023.el</id>
        <link href="https://melpa.org/#/flycheck-objc-clang"/>
        <updated>2021-09-11T10:23:00.000Z</updated>
        <summary type="html"><![CDATA[The flycheck-objc-clang package has been updated to version 20210911.1023.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[rsync-mode (20210911.0) --- Rsync projects to remote machines]]></title>
        <id>https://melpa.org/packages/rsync-mode-20210911.0.el</id>
        <link href="https://melpa.org/#/rsync-mode"/>
        <updated>2021-09-11T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[The rsync-mode package has been updated to version 20210911.0.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[pandoc-mode (20210910.2043) --- Minor mode for interacting with Pandoc]]></title>
        <id>https://melpa.org/packages/pandoc-mode-20210910.2043.tar</id>
        <link href="https://melpa.org/#/pandoc-mode"/>
        <updated>2021-09-10T20:43:00.000Z</updated>
        <summary type="html"><![CDATA[The pandoc-mode package has been updated to version 20210910.2043.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[yasnippet-snippets (20210910.1959) --- Collection of yasnippet snippets]]></title>
        <id>https://melpa.org/packages/yasnippet-snippets-20210910.1959.tar</id>
        <link href="https://melpa.org/#/yasnippet-snippets"/>
        <updated>2021-09-10T19:59:00.000Z</updated>
        <summary type="html"><![CDATA[The yasnippet-snippets package has been updated to version 20210910.1959.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[syslog-mode (20210910.1952) --- Major-mode for viewing log files & strace output]]></title>
        <id>https://melpa.org/packages/syslog-mode-20210910.1952.tar</id>
        <link href="https://melpa.org/#/syslog-mode"/>
        <updated>2021-09-10T19:52:00.000Z</updated>
        <summary type="html"><![CDATA[The syslog-mode package has been updated to version 20210910.1952.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[citeproc (20210910.1836) --- A CSL 1.0.1 Citation Processor]]></title>
        <id>https://melpa.org/packages/citeproc-20210910.1836.tar</id>
        <link href="https://melpa.org/#/citeproc"/>
        <updated>2021-09-10T18:36:00.000Z</updated>
        <summary type="html"><![CDATA[The citeproc package has been updated to version 20210910.1836.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Recent Change in Behaviour]]></title>
        <id>1959@/discussions</id>
        <link href="https://forum.zettelkasten.de/discussion/1959/recent-change-in-behaviour"/>
        <updated>2021-09-10T17:18:41.000Z</updated>
        <summary type="html"><![CDATA[With recent changes to The Archive, I've noticed one oddity in my old notes - perhaps worth pointing out.
First, I create a new note using @Will 's Keyboard Maestro macro.  An empty new note looks like:

Now, I noticed when going into older Zettels, that my internal and external references were getting bolded as shown below (this is from the end of a note on "Equality in Death" containing my comments on a Daily Stoic post of the same title):

I found that to get back to the format I was expecting, I had to add a carriage return after the last bit of text (which was not required previously):

From the perspective of The Archive and how it operates, this is a minor, silly item, but the extra bolding bothers me aesthetically and so I find myself obsessively going through old zettles, adding a carriage return near the end.]]></summary>
        <author>
            <name>GeoEng51</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[magit-patch-changelog (20210910.1333) --- Generate a patch according to emacs-mirror/CONTRIBUTE]]></title>
        <id>https://melpa.org/packages/magit-patch-changelog-20210910.1333.el</id>
        <link href="https://melpa.org/#/magit-patch-changelog"/>
        <updated>2021-09-10T13:33:00.000Z</updated>
        <summary type="html"><![CDATA[The magit-patch-changelog package has been updated to version 20210910.1333.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[[BUG] thearchive://matchOrCreate/TERM]]></title>
        <id>1958@/discussions</id>
        <link href="https://forum.zettelkasten.de/discussion/1958/bug-thearchive-matchorcreate-term"/>
        <updated>2021-09-10T13:30:36.000Z</updated>
        <summary type="html"><![CDATA[Looking over I see the use of thearchive://matchOrCreate/TERM is suppose to create a document with the TERM.  However, if the document doesn't exist, it looks like it's creating a zettel with just a new Zettel ID.]]></summary>
        <author>
            <name>malkomalko</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[flycheck-swift3 (20210910.1244) --- Flycheck: Swift support for Apple swift-mode]]></title>
        <id>https://melpa.org/packages/flycheck-swift3-20210910.1244.el</id>
        <link href="https://melpa.org/#/flycheck-swift3"/>
        <updated>2021-09-10T12:44:00.000Z</updated>
        <summary type="html"><![CDATA[The flycheck-swift3 package has been updated to version 20210910.1244.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[company-ledger (20210910.250) --- Fuzzy auto-completion for Ledger & friends]]></title>
        <id>https://melpa.org/packages/company-ledger-20210910.250.el</id>
        <link href="https://melpa.org/#/company-ledger"/>
        <updated>2021-09-10T02:50:00.000Z</updated>
        <summary type="html"><![CDATA[The company-ledger package has been updated to version 20210910.250.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[org-special-block-extras (20210909.2032) --- 30 new custom blocks & 34 link types for Org-mode]]></title>
        <id>https://melpa.org/packages/org-special-block-extras-20210909.2032.el</id>
        <link href="https://melpa.org/#/org-special-block-extras"/>
        <updated>2021-09-09T20:32:00.000Z</updated>
        <summary type="html"><![CDATA[The org-special-block-extras package has been updated to version 20210909.2032.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[howdoyou (20210909.2000) --- A stackoverflow and its sisters' sites reader]]></title>
        <id>https://melpa.org/packages/howdoyou-20210909.2000.el</id>
        <link href="https://melpa.org/#/howdoyou"/>
        <updated>2021-09-09T20:00:00.000Z</updated>
        <summary type="html"><![CDATA[The howdoyou package has been updated to version 20210909.2000.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[xah-get-thing (20210909.1528) --- get thing or selection at point.]]></title>
        <id>https://melpa.org/packages/xah-get-thing-20210909.1528.el</id>
        <link href="https://melpa.org/#/xah-get-thing"/>
        <updated>2021-09-09T15:28:00.000Z</updated>
        <summary type="html"><![CDATA[The xah-get-thing package has been updated to version 20210909.1528.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[gemini-mode (20210909.1442) --- A simple highlighting package for text/gemini]]></title>
        <id>https://melpa.org/packages/gemini-mode-20210909.1442.el</id>
        <link href="https://melpa.org/#/gemini-mode"/>
        <updated>2021-09-09T14:42:00.000Z</updated>
        <summary type="html"><![CDATA[The gemini-mode package has been updated to version 20210909.1442.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[[BUG] Open Links at Selection]]></title>
        <id>1955@/discussions</id>
        <link href="https://forum.zettelkasten.de/discussion/1955/bug-open-links-at-selection"/>
        <updated>2021-09-09T13:11:50.000Z</updated>
        <summary type="html"><![CDATA[Version: Version 1.7.1 (195)
Using the shortcuts Jump to Next/Previous Link is an awesome feature!  However, when jumping to a link that is a webpage (not a #tag or [[linked note]]), the app will freeze and crash if using the Open Links at Selection command.]]></summary>
        <author>
            <name>malkomalko</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[math-preview (20210909.1220) --- Preview TeX math equations inline]]></title>
        <id>https://melpa.org/packages/math-preview-20210909.1220.el</id>
        <link href="https://melpa.org/#/math-preview"/>
        <updated>2021-09-09T12:20:00.000Z</updated>
        <summary type="html"><![CDATA[The math-preview package has been updated to version 20210909.1220.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Issue 280]]></title>
        <id>https://haskellweekly.news/issue/280.html</id>
        <link href="https://haskellweekly.news/issue/280.html"/>
        <updated>2021-09-09T12:00:00.000Z</updated>
        <summary type="html"><![CDATA[Welcome to another issue of Haskell Weekly!
Haskell is a safe, purely functional programming language with a fast, concurrent runtime.
This is a weekly summary of what’s going on in its community.
Featured
Haskell Love Conference
If you’re ready to take your Haskell skills to the next level and you still haven’t made plans, register now to join us on September 10th.
An Introduction to Type Level Programming by Rebecca Skinner
In this article you’ll learn how to build programs that make heavy use of type-level programming by working through building a theming system.
Family Values by Matt Parsons
I wrote a big thread on the company Slack to compare type families: open vs closed vs associated. I also ended up discussing data families, as well, since they are a good complement to type familie…]]></summary>
        <author>
            <name>Haskell Weekly</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[hl-todo (20210909.1114) --- highlight TODO and similar keywords]]></title>
        <id>https://melpa.org/packages/hl-todo-20210909.1114.el</id>
        <link href="https://melpa.org/#/hl-todo"/>
        <updated>2021-09-09T11:14:00.000Z</updated>
        <summary type="html"><![CDATA[The hl-todo package has been updated to version 20210909.1114.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[dune (20210909.1010) --- Integration with the dune build system]]></title>
        <id>https://melpa.org/packages/dune-20210909.1010.tar</id>
        <link href="https://melpa.org/#/dune"/>
        <updated>2021-09-09T10:10:00.000Z</updated>
        <summary type="html"><![CDATA[The dune package has been updated to version 20210909.1010.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[subsonic (20210909.1003) --- Browse and play music from subsonic servers with mpv]]></title>
        <id>https://melpa.org/packages/subsonic-20210909.1003.el</id>
        <link href="https://melpa.org/#/subsonic"/>
        <updated>2021-09-09T10:03:00.000Z</updated>
        <summary type="html"><![CDATA[The subsonic package has been updated to version 20210909.1003.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[ac-php-core (20210909.918) --- The core library of the ac-php]]></title>
        <id>https://melpa.org/packages/ac-php-core-20210909.918.tar</id>
        <link href="https://melpa.org/#/ac-php-core"/>
        <updated>2021-09-09T09:18:00.000Z</updated>
        <summary type="html"><![CDATA[The ac-php-core package has been updated to version 20210909.918.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[fancy-dabbrev (20210909.752) --- Like dabbrev-expand with preview and popup menu]]></title>
        <id>https://melpa.org/packages/fancy-dabbrev-20210909.752.el</id>
        <link href="https://melpa.org/#/fancy-dabbrev"/>
        <updated>2021-09-09T07:52:00.000Z</updated>
        <summary type="html"><![CDATA[The fancy-dabbrev package has been updated to version 20210909.752.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[diff-hl (20210909.207) --- Highlight uncommitted changes using VC]]></title>
        <id>https://melpa.org/packages/diff-hl-20210909.207.tar</id>
        <link href="https://melpa.org/#/diff-hl"/>
        <updated>2021-09-09T02:07:00.000Z</updated>
        <summary type="html"><![CDATA[The diff-hl package has been updated to version 20210909.207.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[consult-notmuch (20210909.101) --- Notmuch search using consult]]></title>
        <id>https://melpa.org/packages/consult-notmuch-20210909.101.el</id>
        <link href="https://melpa.org/#/consult-notmuch"/>
        <updated>2021-09-09T01:01:00.000Z</updated>
        <summary type="html"><![CDATA[The consult-notmuch package has been updated to version 20210909.101.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[kiwix (20210909.30) --- Searching offline Wikipedia through Kiwix.]]></title>
        <id>https://melpa.org/packages/kiwix-20210909.30.tar</id>
        <link href="https://melpa.org/#/kiwix"/>
        <updated>2021-09-09T00:30:00.000Z</updated>
        <summary type="html"><![CDATA[The kiwix package has been updated to version 20210909.30.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[sws-mode (20210908.2121) --- (S)ignificant (W)hite(S)pace mode]]></title>
        <id>https://melpa.org/packages/sws-mode-20210908.2121.el</id>
        <link href="https://melpa.org/#/sws-mode"/>
        <updated>2021-09-08T21:21:00.000Z</updated>
        <summary type="html"><![CDATA[The sws-mode package has been updated to version 20210908.2121.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[stylus-mode (20210908.2121) --- Major mode for editing .styl files]]></title>
        <id>https://melpa.org/packages/stylus-mode-20210908.2121.el</id>
        <link href="https://melpa.org/#/stylus-mode"/>
        <updated>2021-09-08T21:21:00.000Z</updated>
        <summary type="html"><![CDATA[The stylus-mode package has been updated to version 20210908.2121.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[jade-mode (20210908.2121) --- Major mode for editing .jade files]]></title>
        <id>https://melpa.org/packages/jade-mode-20210908.2121.el</id>
        <link href="https://melpa.org/#/jade-mode"/>
        <updated>2021-09-08T21:21:00.000Z</updated>
        <summary type="html"><![CDATA[The jade-mode package has been updated to version 20210908.2121.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[dynamic-graphs (20210908.2010) --- Manipulation with graphviz graphs]]></title>
        <id>https://melpa.org/packages/dynamic-graphs-20210908.2010.el</id>
        <link href="https://melpa.org/#/dynamic-graphs"/>
        <updated>2021-09-08T20:10:00.000Z</updated>
        <summary type="html"><![CDATA[The dynamic-graphs package has been updated to version 20210908.2010.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[haskell-mode (20210908.1543) --- A Haskell editing mode]]></title>
        <id>https://melpa.org/packages/haskell-mode-20210908.1543.tar</id>
        <link href="https://melpa.org/#/haskell-mode"/>
        <updated>2021-09-08T15:43:00.000Z</updated>
        <summary type="html"><![CDATA[The haskell-mode package has been updated to version 20210908.1543.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[sequed (20210908.651) --- Major mode for FASTA format DNA alignments]]></title>
        <id>https://melpa.org/packages/sequed-20210908.651.el</id>
        <link href="https://melpa.org/#/sequed"/>
        <updated>2021-09-08T06:51:00.000Z</updated>
        <summary type="html"><![CDATA[The sequed package has been updated to version 20210908.651.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[vterm (20210908.640) --- Fully-featured terminal emulator]]></title>
        <id>https://melpa.org/packages/vterm-20210908.640.tar</id>
        <link href="https://melpa.org/#/vterm"/>
        <updated>2021-09-08T06:40:00.000Z</updated>
        <summary type="html"><![CDATA[The vterm package has been updated to version 20210908.640.]]></summary>
        <author>
            <name>MELPA package updates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Building a Go project using Bazel]]></title>
        <id>https://tweag.io/blog/2021-09-08-rules_go-gazelle/</id>
        <link href="https://tweag.io/blog/2021-09-08-rules_go-gazelle/"/>
        <updated>2021-09-08T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[In this post, I’ll show how to build a Go project with Bazel,
using Gazelle to generate the build files.
Why Bazel?
With Bazel, I get incremental, reproducible, and cacheable builds.
It’s designed for large, polyglot monorepos
and can be extended to support more languages than the many already available.
Why Gazelle?
Gazelle looks at the Go source files and generates Bazel BUILD files for me.
I used tendermint
as an example Go project, because it’s large
enough to include several interesting problems:
protocol buffers
external dependencies
runtime dependencies
flaky and exclusive tests
How will we be able to tell when it’s finished?
At the end, we’ll be able to build targets for all of the Go sources,
$ bazel build //...

run tests,
$ bazel test //...

and execute the tendermint binary.
$ …]]></summary>
        <author>
            <name>Tweag - Engineering blog</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[The Collector's Fallacy is closely related to the Exploration-Exploitation Dilemma]]></title>
        <id>1952@/discussions</id>
        <link href="https://forum.zettelkasten.de/discussion/1952/the-collectors-fallacy-is-closely-related-to-the-exploration-exploitation-dilemma"/>
        <updated>2021-09-07T14:25:09.000Z</updated>
        <summary type="html"><![CDATA[The Collector's Fallacy, which Christian Tietze has written about, is an example of the Exploration-Exploitation Dilemma, also known as the multi-armed bandit problem.  From Wikipedia:

  
The multi-armed bandit problem models an agent that simultaneously attempts to acquire new knowledge (called "exploration") and optimize their decisions based on existing knowledge (called "exploitation"). The agent attempts to balance these competing tasks in order to maximize their total value over the period of time considered.


In the case of the Collector, the "agent" explores indefinitely and adds to their collection but postpones making the decision to do something with it. Wikipedia gives a list of practical applications of the multi-armed bandit problem, but I can't resist pointing out that the problem of deciding which professor's class to take is almost never counted among such lists, perhaps because professors compile them. Someone choosing among Zettelkasten implementations without really settling on one is another.
Given that the multi-armed bandit problem has a name, has been extensively studied since at least the middle of the twentieth century and has been solved in important cases, one question is whether some of these solutions could guide the Collector toward more productive uses of their time.]]></summary>
        <author>
            <name>ZettelDistraction</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Linking new permanent notes to existing ones]]></title>
        <id>1951@/discussions</id>
        <link href="https://forum.zettelkasten.de/discussion/1951/linking-new-permanent-notes-to-existing-ones"/>
        <updated>2021-09-07T13:49:09.000Z</updated>
        <summary type="html"><![CDATA[Hello everyone, I hope you are all well. Greetings from Chile.
I hope you can help me. When working on my zettelkasten, I want to link my new permanent notes to old permanent notes, whose number is growing over time, obviously. Because of this large number, it becomes increasingly difficult for me to find an existing permanent note to link with. I wish you could advise me how to make this task easier or how you do it.]]></summary>
        <author>
            <name>zappino4</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How Dependent Haskell Can Improve Industry Projects]]></title>
        <id>https://serokell.io/blog/how-dependent-haskell-can-improve-industry-projects</id>
        <link href="https://serokell.io/blog/how-dependent-haskell-can-improve-industry-projects"/>
        <updated>2021-09-07T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[In this post, we talk about Dependent Haskell and show how it could be used to simplify and improve the code in a large production codebase.]]></summary>
        <author>
            <name>hi+danielrogozin@serokell.io (Danya Rogozin)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Using a zettelkasten in mathematics research]]></title>
        <id>1946@/discussions</id>
        <link href="https://forum.zettelkasten.de/discussion/1946/using-a-zettelkasten-in-mathematics-research"/>
        <updated>2021-09-05T20:07:47.000Z</updated>
        <summary type="html"><![CDATA[@bradfordfournier wrote here:

  
Any shared experiences re mathematics research in your zettelkasten would be great.


I think this deserves a discussion of its own, with a more telling title than the one where it came up.
@bradfordfournier - I hope you are OK with this.]]></summary>
        <author>
            <name>thomasteepe</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Issue 279]]></title>
        <id>https://haskellweekly.news/issue/279.html</id>
        <link href="https://haskellweekly.news/issue/279.html"/>
        <updated>2021-09-02T12:00:00.000Z</updated>
        <summary type="html"><![CDATA[Welcome to another issue of Haskell Weekly!
Haskell is a safe, purely functional programming language with a fast, concurrent runtime.
This is a weekly summary of what’s going on in its community.
Featured
GHC 8.10.7 is now available by Zubin Duggal

The GHC team is very pleased to announce the availability of GHC 8.10.7. This is a small bugfix release, fixing one linking portability issue present in GHC 8.10.5 and GHC 8.10.6 on some x86_64 macOS toolchains.
Haskell Love Conference
If you’re ready to take your Haskell skills to the next level and you still haven’t made plans, register now to join us on September 10th.
Announcing the new IHP Developer Subscription + IHP v0.14 by Marc Scholten
Today I’m happy to announce the new IHP Pro and IHP Business plans together with the release of IHP…]]></summary>
        <author>
            <name>Haskell Weekly</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Monthly Hask Anything (September 2021)]]></title>
        <id>https://www.reddit.com/r/haskell/comments/pfxgd4/monthly_hask_anything_september_2021/</id>
        <link href="https://www.reddit.com/r/haskell/comments/pfxgd4/monthly_hask_anything_september_2021/"/>
        <updated>2021-09-01T16:29:40.000Z</updated>
        <summary type="html"><![CDATA[This is your opportunity to ask any questions you feel don't deserve their own threads, no matter how small or simple they might be!
    submitted by    /u/taylorfausak  
 [link]   [comments]]]></summary>
        <author>
            <name>Haskell :: Reddit</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Who is hiring? Monthly /r/Scala Job Postings Thread!]]></title>
        <id>https://www.reddit.com/r/scala/comments/pfwuys/who_is_hiring_monthly_rscala_job_postings_thread/</id>
        <link href="https://www.reddit.com/r/scala/comments/pfwuys/who_is_hiring_monthly_rscala_job_postings_thread/"/>
        <updated>2021-09-01T16:00:16.000Z</updated>
        <summary type="html"><![CDATA[Please post the job with the following template:
 Company Name | Title(s) of position(s) being hired for | City, [State/Province,] Country | {ONSITE, REMOTE} | {Full Time, Part Time, Contract} | (Optional) $approximate salary description contact information 
 Posters: Please only post if you are personally involved in the hiring party -- no 3rd party recruiters (you must post the name of the company)
 Readers: please only email submitters if you personally are interested in the job—no recruiters or sales calls.
    submitted by    /u/AutoModerator  
 [link]   [comments]]]></summary>
        <author>
            <name>Scala</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Bracket Tags]]></title>
        <id>1943@/discussions</id>
        <link href="https://forum.zettelkasten.de/discussion/1943/bracket-tags"/>
        <updated>2021-09-01T01:34:14.000Z</updated>
        <summary type="html"><![CDATA[Following @sfast 's advice on object tags, I've increasingly transitioned to using zettels as claims which connect two or more tag objects, and away from using zettels to refer to objects themselves. For instance, a zettel might express the following:

  
. #HumanBehavior is driven by #MentalModels, which are enacted through #EmbodiedCognition


Here, I'm using tags for objects, while the zettel itself embodies a specific claim. This practice has led to a proliferation of tags in my note system.
However, I don't really like multi-word tags. And tagging seems like a distraction from a key human-focused aspect of intellectual work: naming things. "Embodied Cognition", for example, is a term that has a specific meaning in a particular field; #EmbodiedCognition does not.
Rather than create a t…]]></summary>
        <author>
            <name>micahredding</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Dependency Analysis of Haskell Declarations]]></title>
        <id>https://serokell.io/blog/dependency-analysis-haskell</id>
        <link href="https://serokell.io/blog/dependency-analysis-haskell"/>
        <updated>2021-08-31T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Learn how GHC analyzes Haskell code to type-check it in the correct order and what are the flaws of the current implementation.]]></summary>
        <author>
            <name>hi+artemkuznetsov@serokell.io (Artem Kuznetsov)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Daily ICFP: Day 5]]></title>
        <id>https://tweag.io/blog/2021-08-30-icfp5/</id>
        <link href="https://tweag.io/blog/2021-08-30-icfp5/"/>
        <updated>2021-08-30T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Daily ICFP
Several Tweagers all agreed to gather notes here about our
ICFP (International Conference on Functional
Programming) experiences.
Other posts in this series:
ICFP - Day 0
ICFP - Day 1
ICFP - Day 2
ICFP - Day 3
ICFP - Day 4
Day 5 - Friday
These notes follow Arnaud, Noon and Richard through their day at ICFP,
roughly in order. (The talks are not publicly posted at the time
of publication of this post, but we expect they will be over the
coming weeks.)
Arnaud — Parafuzz: Coverage-guided Property Fuzzing for Multicore OCaml programs: this is in the context of multicore OCaml (multicore OCaml has algebraic effects). The authors use algebraic effects to abstract over concurrency primitives, so that they can test concurrency property with the AFL fuzzer (AFL tries to generate random in…]]></summary>
        <author>
            <name>Tweag - Engineering blog</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[What is going on in a Zettelkasten visually]]></title>
        <id>1941@/discussions</id>
        <link href="https://forum.zettelkasten.de/discussion/1941/what-is-going-on-in-a-zettelkasten-visually"/>
        <updated>2021-08-29T13:11:00.000Z</updated>
        <summary type="html"><![CDATA[A Zettelkasten may look something like the image above, where the arrows represent the direction of the links and the boxes a particular kind of Zettel..
Links aren't always bidirectional. E.g.: Let's say I have an overview Zettel on Maria Popova's note-taking method. From this Zettel, I may link to a Zettel explaining how she uses sticky tab notes. But, the latter Zettel might not link to the former.
Another thing to note is that the item in the bottom of the image may link to further details. This might happen when you break down a Zettel that violates the Principle of Atomicity. E.g.:
Topic-based overview: "Maria Popova's note-taking system."
Idea relevant to the overview: "Idea index definition."
A detail of the idea: "Reading is about identifying patterns."
A detail of the detail: "Pattern definition."
I based my diagram on what's been discussed in the Zettelkasten blog, so others' Zettelkasten might look different.
Questions for the reader:
What would you change of my diagram?
How does your Zettelkasten look like?]]></summary>
        <author>
            <name>Dilan_Zelsky</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Daily ICFP: Day 4]]></title>
        <id>https://tweag.io/blog/2021-08-27-icfp4/</id>
        <link href="https://tweag.io/blog/2021-08-27-icfp4/"/>
        <updated>2021-08-27T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Daily ICFP
Several Tweagers all agreed to gather notes here about our
ICFP (International Conference on Functional
Programming) experiences.
Other posts in this series:
ICFP - Day 0
ICFP - Day 1
ICFP - Day 2
ICFP - Day 3
ICFP - Day 5
Day 4 - Thursday
These notes follow Noon and Richard through their day at ICFP,
roughly in order. (The talks are not publicly posted at the time
of publication of this post, but we expect they will be over the
coming weeks.)
Noon — Second to last day of ICFP. I’m becoming sad that it’s
going to be over! But that said, I’m really looking forward to today!
I feel a bit relaxed as well, because from my timezone (UK) I get a bit
of a break in the morning (as I’m starting my day at the Haskell track.)
Chesskell: A Two-Player Game at the Type Level, by Toby Bailey a…]]></summary>
        <author>
            <name>Tweag - Engineering blog</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Issue 278]]></title>
        <id>https://haskellweekly.news/issue/278.html</id>
        <link href="https://haskellweekly.news/issue/278.html"/>
        <updated>2021-08-26T12:00:00.000Z</updated>
        <summary type="html"><![CDATA[Welcome to another issue of Haskell Weekly!
Haskell is a safe, purely functional programming language with a fast, concurrent runtime.
This is a weekly summary of what’s going on in its community.
Featured
GHC 9.2.1-rc1 is now available! by Ben Gamari

The GHC team is very happy to announce the availability of the
release cadidate of the 9.2.1 release. GHC 9.2 will bring a number of exciting features.
Haskell Love Conference
If you’re ready to take your Haskell skills to the next level and you still haven’t made plans, register now to join us on September 10th.
Haskell series part 3 by Pierre Guillemot
Thank you for joining us for the third part of our Haskell series, you will find the previous article here where I explain lists and function definitions. In this article we are going to cov…]]></summary>
        <author>
            <name>Haskell Weekly</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Haskell Foundation: Interview with Andrew Boardman]]></title>
        <id>https://serokell.io/blog/interview-with-andrew-boardman</id>
        <link href="https://serokell.io/blog/interview-with-andrew-boardman"/>
        <updated>2021-08-26T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[What is the Haskell Foundation, and what are its goals? Learn more by reading our interview with Andrew Boardman, the Executive Director of the Haskell Foundation.]]></summary>
        <author>
            <name>hi+gintsdreimanis@serokell.io (Gints Dreimanis)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Daily ICFP: Day 3]]></title>
        <id>https://tweag.io/blog/2021-08-26-icfp3/</id>
        <link href="https://tweag.io/blog/2021-08-26-icfp3/"/>
        <updated>2021-08-26T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Daily ICFP
Several Tweagers all agreed to gather notes here about our
ICFP (International Conference on Functional
Programming) experiences.
Other posts in this series:
ICFP - Day 0
ICFP - Day 1
ICFP - Day 2
ICFP - Day 4
ICFP - Day 5
Day 3 - Wednesday
These notes follow Noon, Arnaud, and Richard through their day at ICFP,
roughly in order.
Noon — On Continuation-Passing Transformations and Expected Cost Analysis
Discussion of the difficulty of costing probabilistic algorithms (i.e. you don’t know what it will do.)
Turns out using continuations makes it a bit easier to reason about (I didn’t quite follow the trick that makes it true),
But, it gives a way to think compute average-cost analysis, which seems pretty useful!
Noon — Automatic Amortized Resource Analysis with the Quantum Physicist…]]></summary>
        <author>
            <name>Tweag - Engineering blog</name>
        </author>
    </entry>
</feed>